{
  "contracts": {
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "Ownable": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "Context": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "src/contracts/SeasonPassManager.sol": {
      "SeasonPassManager": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "seasonNumber_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "numberOfMaxFans_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "numberOfMaxSeats_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "numberOfZones_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "sympathizerFee_",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_CalledInWrongStage",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_FanAddedBefore",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_FanHasNoSeasonPass",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_MaxSeatsInZone",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_MaximumFansAdded",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "length",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "maxFans",
                "type": "uint256"
              }
            ],
            "name": "SeasonPass_MoreSeasonPassesThanExpected",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_NotEnoughETHSent",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_NotOwnerOfSeasonPass",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_SeatIsNotFree",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "SeasonPass_WrongInformationGiven",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "enum SeasonPassManager.Stages",
                "name": "newstage",
                "type": "uint8"
              }
            ],
            "name": "SeasonPass_AdvancedTheStage",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "fan",
                "type": "address"
              }
            ],
            "name": "SeasonPass_ChangeSeat",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "SeasonPass_DeletedOldNumberOfSeasonPassIds",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "fan",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "numberOfFans",
                "type": "uint256"
              }
            ],
            "name": "SeasonPass_NewFan",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "numberOfMaxFans_",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "numberOfMaxSeats_",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "numberOfZones_",
                "type": "uint256"
              }
            ],
            "name": "SeasonPass_NewSeasonStarted",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "sympathizer",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "numberOfSympathizers",
                "type": "uint256"
              }
            ],
            "name": "SeasonPass_NewSympathizer",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "oldnumberOfMaxSeats",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "newnumberOfMaxSeats",
                "type": "uint256"
              }
            ],
            "name": "SeasonPass_NumberOfSeatsModified",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "SeasonPass_SetSeatAvailability",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "SeasonPass_UpdatedNumberOfSeasonPassIds",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "SeasonPass_UpdatedSeatAvailability",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "oldSympathizerFee",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "newSympathizerFee",
                "type": "uint256"
              }
            ],
            "name": "SeasonPass_UpdatedSympathizerFee",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "fan_",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "seatId_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "zone_",
                "type": "uint256"
              }
            ],
            "name": "addNewFan",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "advanceStage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "match_",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "fan_",
                "type": "address"
              }
            ],
            "name": "attendMatch",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "becomeSympathizer",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address[]",
                "name": "fans_",
                "type": "address[]"
              }
            ],
            "name": "changeNumberOfSeasonIds",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "fanAddress_",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "oldSeatId_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "oldZoneId_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "newSeatId_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "newZoneId_",
                "type": "uint256"
              }
            ],
            "name": "changeSeat",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address[]",
                "name": "fans_",
                "type": "address[]"
              }
            ],
            "name": "deleteNumberOfSeasonIds",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "zone",
                "type": "uint256"
              }
            ],
            "name": "getMaxAvailableSeats",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getNumberOfCurrentFans",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getNumberOfMaxFans",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getNumberOfMaxSeats",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getNumberOfSympathizer",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getNumberOfZones",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getSeasonNumber",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "fan",
                "type": "address"
              }
            ],
            "name": "getSeasonPass",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "idOfSeasonPass",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "seatId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bool[]",
                    "name": "matchesGoneToStadium",
                    "type": "bool[]"
                  }
                ],
                "internalType": "struct SeasonPassManager.SeasonPass",
                "name": "",
                "type": "tuple"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getSeasonStages",
            "outputs": [
              {
                "internalType": "enum SeasonPassManager.Stages",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "seatId",
                "type": "uint256"
              }
            ],
            "name": "getSeat",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "seatOwner",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "zone",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "row",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "seatId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "rowSeatNumber",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct SeasonPassManager.Seat",
                "name": "",
                "type": "tuple"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "fan_",
                "type": "address"
              }
            ],
            "name": "getSeatOfFan",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "seatId",
                "type": "uint256"
              }
            ],
            "name": "getSeatOwner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getSympathizerFee",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "seasonNumber_",
                "type": "uint256"
              }
            ],
            "name": "isEven",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "int256[]",
                "name": "variationOfAvailableSeats",
                "type": "int256[]"
              }
            ],
            "name": "modifyAvailableSeats",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256[][]",
                "name": "freeSeatIds_",
                "type": "uint256[][]"
              }
            ],
            "name": "setSeatAvailability",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "seatOwner",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "zone",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "row",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "seatId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "rowSeatNumber",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct SeasonPassManager.Seat[]",
                "name": "seatInfo",
                "type": "tuple[]"
              },
              {
                "internalType": "bool",
                "name": "isDeleting",
                "type": "bool"
              }
            ],
            "name": "setSeatInfo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "newfee_",
                "type": "uint256"
              }
            ],
            "name": "setSympathizerFee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "numberOfMaxFans_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "numberOfMaxSeats_",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "numberOfZones_",
                "type": "uint256"
              }
            ],
            "name": "startNewSeason",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seasonNumber_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMaxFans_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMaxSeats_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfZones_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sympathizerFee_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_CalledInWrongStage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_FanAddedBefore\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_FanHasNoSeasonPass\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_MaxSeatsInZone\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_MaximumFansAdded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFans\",\"type\":\"uint256\"}],\"name\":\"SeasonPass_MoreSeasonPassesThanExpected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_NotEnoughETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_NotOwnerOfSeasonPass\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_SeatIsNotFree\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SeasonPass_WrongInformationGiven\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum SeasonPassManager.Stages\",\"name\":\"newstage\",\"type\":\"uint8\"}],\"name\":\"SeasonPass_AdvancedTheStage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fan\",\"type\":\"address\"}],\"name\":\"SeasonPass_ChangeSeat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SeasonPass_DeletedOldNumberOfSeasonPassIds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fan\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfFans\",\"type\":\"uint256\"}],\"name\":\"SeasonPass_NewFan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfMaxFans_\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfMaxSeats_\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfZones_\",\"type\":\"uint256\"}],\"name\":\"SeasonPass_NewSeasonStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sympathizer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfSympathizers\",\"type\":\"uint256\"}],\"name\":\"SeasonPass_NewSympathizer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldnumberOfMaxSeats\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newnumberOfMaxSeats\",\"type\":\"uint256\"}],\"name\":\"SeasonPass_NumberOfSeatsModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SeasonPass_SetSeatAvailability\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SeasonPass_UpdatedNumberOfSeasonPassIds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SeasonPass_UpdatedSeatAvailability\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldSympathizerFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newSympathizerFee\",\"type\":\"uint256\"}],\"name\":\"SeasonPass_UpdatedSympathizerFee\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fan_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seatId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"zone_\",\"type\":\"uint256\"}],\"name\":\"addNewFan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"advanceStage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"match_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fan_\",\"type\":\"address\"}],\"name\":\"attendMatch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeSympathizer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fans_\",\"type\":\"address[]\"}],\"name\":\"changeNumberOfSeasonIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fanAddress_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"oldSeatId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oldZoneId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newSeatId_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newZoneId_\",\"type\":\"uint256\"}],\"name\":\"changeSeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fans_\",\"type\":\"address[]\"}],\"name\":\"deleteNumberOfSeasonIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zone\",\"type\":\"uint256\"}],\"name\":\"getMaxAvailableSeats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfCurrentFans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfMaxFans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfMaxSeats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfSympathizer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfZones\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeasonNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fan\",\"type\":\"address\"}],\"name\":\"getSeasonPass\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"idOfSeasonPass\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"},{\"internalType\":\"bool[]\",\"name\":\"matchesGoneToStadium\",\"type\":\"bool[]\"}],\"internalType\":\"struct SeasonPassManager.SeasonPass\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSeasonStages\",\"outputs\":[{\"internalType\":\"enum SeasonPassManager.Stages\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"}],\"name\":\"getSeat\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seatOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zone\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"row\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rowSeatNumber\",\"type\":\"uint256\"}],\"internalType\":\"struct SeasonPassManager.Seat\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fan_\",\"type\":\"address\"}],\"name\":\"getSeatOfFan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"}],\"name\":\"getSeatOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSympathizerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seasonNumber_\",\"type\":\"uint256\"}],\"name\":\"isEven\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"variationOfAvailableSeats\",\"type\":\"int256[]\"}],\"name\":\"modifyAvailableSeats\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"freeSeatIds_\",\"type\":\"uint256[][]\"}],\"name\":\"setSeatAvailability\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seatOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zone\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"row\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rowSeatNumber\",\"type\":\"uint256\"}],\"internalType\":\"struct SeasonPassManager.Seat[]\",\"name\":\"seatInfo\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"isDeleting\",\"type\":\"bool\"}],\"name\":\"setSeatInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newfee_\",\"type\":\"uint256\"}],\"name\":\"setSympathizerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numberOfMaxFans_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfMaxSeats_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfZones_\",\"type\":\"uint256\"}],\"name\":\"startNewSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Carlos Alba\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Smart Contract that manages a season pass ticket for live events.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract uses Blockchain technology to manage a Season Pass with different functionality\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/SeasonPassManager.sol\":\"SeasonPassManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/contracts/SeasonPassManager.sol\":{\"keccak256\":\"0x36ea5e0d83943eb1d75bcbe1e59460d4f74e564935d8972956012de64f638d20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee190fcaef3dd07b66649bf28eaa9352a91c1926ca4269dfc2e4d9063b9f4529\",\"dweb:/ipfs/Qma3bUJeGSZa5s4eEh2b8T75Ei4QQujy3gVhHBccZz4EU6\"]}},\"version\":1}",
          "solc_version": "0.8.24",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.0"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"SeasonPassManager.sol:SeasonPassManager\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[10]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_9[0], r2, r5\n\tjump.le\t@.BB0_15\n\tsub.s!\t@CPI0_10[0], r2, r5\n\tjump.le\t@.BB0_35\n\tsub.s!\t@CPI0_11[0], r2, r5\n\tjump.gt\t@.BB0_50\n\tsub.s!\t@CPI0_17[0], r2, r5\n\tjump.gt\t@.BB0_48\n\tsub.s!\t@CPI0_20[0], r2, r5\n\tjump.eq\t@.BB0_425\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r5\n\tadd\t@CPI0_54[0], r0, r6\n\tsub!\tr5, r3, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_54[0], r5, r5\n\tsub!\tr5, r0, r8\n\tadd.ge\tr0, r0, r6\n\tsub.s!\t@CPI0_54[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_53[0], r6, r5\n\tjump.gt\t@.BB0_79\n\tshl.s\t5, r6, r5\n\tadd\t191, r5, r7\n\tsub.s\t32, r0, r8\n\tand\tr7, r8, r7\n\tsub.s!\t@CPI0_53[0], r7, r8\n\tjump.gt\t@.BB0_79\n\tst.1\t64, r7\n\tst.1\t128, r6\n\tadd\t36, r2, r2\n\tadd\tr5, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r3\n\tjump.eq\t@.BB0_442\n.BB0_440:\n\tptr.add\tr1, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r6\n\tjump.gt\t@.BB0_2\n\tadd\t32, r4, r4\n\tst.1\tr4, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_440\n.BB0_442:\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_443\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tsub.s!\t4, r1, r2\n\tjump.gt\t@.BB0_113\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_117\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tld.1\t128, r1\n\tsub!\tr1, r2, r3\n\tjump.le\t@.BB0_447\n\tld.1\t64, r3\n\tadd\t36, r3, r4\n\tst.1\tr4, r2\n\tadd\t@CPI0_57[0], r0, r2\n\tst.1\tr3, r2\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_58[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t159, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_473\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_473:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t160, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t256, r2\n\tld.1\t224, r3\n\tld.1\t192, r4\n\tld.1\t160, r5\n\tld.1\t128, r7\n\tcontext.caller\tr6\n\tsub!\tr6, r0, r1\n\tjump.ne\t@.BB0_11\n\tld.1\t64, r1\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n.BB0_10:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_15:\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.gt\t@.BB0_25\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.le\t@.BB0_17\n\tsub.s!\t@CPI0_42[0], r2, r4\n\tjump.gt\t@.BB0_23\n\tsub.s!\t@CPI0_45[0], r2, r4\n\tjump.eq\t@.BB0_65\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s\t1, r0, r2\n\txor\tr1, r2, r1\n\tand\t1, r1, r1\n\tjump\t@.BB0_460\n.BB0_11:\n\tadd\tr7, r0, stack-[6]\n\tadd\tr5, r0, stack-[7]\n\tadd\tr4, r0, stack-[8]\n\tadd\tr3, r0, stack-[9]\n\tadd\tr2, r0, stack-[10]\n\tsload\tr0, r2\n\tand\t@CPI0_2[0], r2, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_3[0], r1, r1\n\tand\t@CPI0_4[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tadd\tstack-[7], r0, r2\n\tsstore\tr1, r2\n\tadd\t4, r0, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr1, r2\n\tadd\t7, r0, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr1, r2\n\tadd\t6, r0, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr1, r2\n\tadd\t8, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.le\t@.BB0_36\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.gt\t@.BB0_42\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_273\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_4[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_316\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, stack-[5]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r8\n\tsub.s!\t32, r8, r1\n\tadd\tstack-[7], r0, r7\n\tadd\tr7, r0, r1\n\tadd\tr0, r0, r2\n\tjump.lt\t@.BB0_322\n\tadd\tr0, r0, r2\n\tadd\tr7, r0, r1\n.BB0_321:\n\tadd\t992, r1, r5\n\tsload\tr3, r4\n\tsub.s!\t@CPI0_62[0], r4, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\tst.1\tr5, r6\n\tand!\t@CPI0_63[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t960, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_64[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t928, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_65[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t896, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_66[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t864, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_67[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t832, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_68[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t800, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_69[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t768, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_70[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t736, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_71[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t704, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_72[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t672, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_73[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t640, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_74[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t608, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_75[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t576, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_76[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t544, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_77[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t512, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_78[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t480, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_79[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t448, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_80[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t416, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_81[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t384, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_82[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t352, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_83[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t320, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_84[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t288, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_85[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t256, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_86[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t224, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_87[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t192, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_88[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t160, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_89[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t128, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_90[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t96, r1, r6\n\tst.1\tr6, r5\n\tand!\t@CPI0_91[0], r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t64, r1, r6\n\tst.1\tr6, r5\n\tand!\t65280, r4, r5\n\tadd\t0, r0, r5\n\tadd.ne\t1, r0, r5\n\tadd\t32, r1, r6\n\tst.1\tr6, r5\n\tand!\t255, r4, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1\tr1, r4\n\tadd\t1, r3, r3\n\tadd\t1024, r1, r1\n\tadd\t32, r2, r2\n\tor\t31, r2, r4\n\tsub!\tr4, r8, r4\n\tjump.lt\t@.BB0_321\n.BB0_322:\n\tsload\tr3, r3\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_324\n\tand!\t255, r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tor\t1, r2, r2\n.BB0_324:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_326\n\tand!\t65280, r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_326:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_328\n\tand!\t@CPI0_91[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_328:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_330\n\tand!\t@CPI0_90[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_330:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_332\n\tand!\t@CPI0_89[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_332:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_334\n\tand!\t@CPI0_88[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_334:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_336\n\tand!\t@CPI0_87[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_336:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_338\n\tand!\t@CPI0_86[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_338:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_340\n\tand!\t@CPI0_85[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_340:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_342\n\tand!\t@CPI0_84[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_342:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_344\n\tand!\t@CPI0_83[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_344:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_346\n\tand!\t@CPI0_82[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_346:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_348\n\tand!\t@CPI0_81[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_348:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_350\n\tand!\t@CPI0_80[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_350:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_352\n\tand!\t@CPI0_79[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_352:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_354\n\tand!\t@CPI0_78[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_354:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_356\n\tand!\t@CPI0_77[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_356:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_358\n\tand!\t@CPI0_76[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_358:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_360\n\tand!\t@CPI0_75[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_360:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_362\n\tand!\t@CPI0_74[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_362:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_364\n\tand!\t@CPI0_73[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_364:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_366\n\tand!\t@CPI0_72[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_366:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_368\n\tand!\t@CPI0_71[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_368:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_370\n\tand!\t@CPI0_70[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_370:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_372\n\tand!\t@CPI0_69[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_372:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_374\n\tand!\t@CPI0_68[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_374:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_376\n\tand!\t@CPI0_67[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_376:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_378\n\tand!\t@CPI0_66[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_378:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_380\n\tand!\t@CPI0_65[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_380:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_382\n\tand!\t@CPI0_64[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_382:\n\tsub!\tr2, r8, r4\n\tjump.ge\t@.BB0_384\n\tand!\t@CPI0_63[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tst.1.inc\tr1, r4, r1\n\tadd\t1, r2, r2\n.BB0_384:\n\tsub!\tr2, r8, r2\n\tjump.ge\t@.BB0_386\n\tsub.s!\t@CPI0_62[0], r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tst.1.inc\tr1, r2, r1\n.BB0_386:\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r5\n\tand\tr1, r5, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_53[0], r1, r3\n\tjump.gt\t@.BB0_79\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_79\n\tst.1\t64, r1\n\tld.1\tr4, r1\n\tadd\tstack-[9], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.le\t@.BB0_94\n\tadd\tr5, r0, stack-[5]\n\tshl.s\t5, r3, r2\n\tadd\tr7, r2, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_390\n\tsub.s!\t1, r3, r2\n\tjump.eq\t@.BB0_397\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t2, r1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[9], r2, r2\n\tjump.le\t@.BB0_94\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r5\n\tshl.s\t3, r5, r2\n\tand\t248, r2, r2\n\tshl\t255, r2, r3\n\tsub.s\t1, r0, r4\n\txor\tr3, r4, r3\n\tshr.s\t5, r5, r4\n\tld\tr1, r1\n\tadd\tr1, r4, r1\n\tsload\tr1, r4\n\tand\tr4, r3, r3\n\tshl\t1, r2, r2\n\tor\tr3, r2, r3\n.BB0_419:\n\tsstore\tr1, r3\n\tadd\t1, r0, stack-[9]\n\tjump\t@.BB0_420\n.BB0_25:\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.le\t@.BB0_26\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.gt\t@.BB0_32\n\tsub.s!\t@CPI0_36[0], r2, r1\n\tjump.eq\t@.BB0_206\n\tsub.s!\t@CPI0_37[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_222\n\tand\t@CPI0_2[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_174\n.BB0_50:\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.gt\t@.BB0_53\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.eq\t@.BB0_458\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_4[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_465\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_468\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r0\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.eq\t@.BB0_55\n\tsub.s!\t@CPI0_48[0], r2, r4\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_49[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tadd\t288, r0, r2\n\tst.1\t64, r2\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tst.1\t192, r0\n\tst.1\t224, r0\n\tst.1\t256, r0\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t448, r0, r2\n\tst.1\t64, r2\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tst.1\t288, r2\n\tadd\t1, r1, r3\n\tsload\tr3, r3\n\tst.1\t320, r3\n\tadd\t2, r1, r4\n\tsload\tr4, r4\n\tst.1\t352, r4\n\tadd\t4, r1, r5\n\tadd\t3, r1, r1\n\tsload\tr1, r1\n\tst.1\t384, r1\n\tsload\tr5, r5\n\tst.1\t416, r5\n\tst.1\t448, r2\n\tst.1\t480, r3\n\tst.1\t512, r4\n\tst.1\t544, r1\n\tst.1\t576, r5\n\tadd\t@CPI0_117[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.eq\t@.BB0_236\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_239\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_54[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_54[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_54[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_53[0], r5, r4\n\tjump.gt\t@.BB0_79\n\tshl.s\t5, r5, r4\n\tadd\t191, r4, r4\n\tsub.s\t32, r0, r6\n\tand\tr4, r6, r4\n\tsub.s!\t@CPI0_53[0], r4, r6\n\tjump.gt\t@.BB0_79\n\tst.1\t64, r4\n\tst.1\t128, r5\n\tadd\t36, r2, r2\n\tmul\t160, r5, r4, r6\n\tadd\tr4, r2, r4\n\tsub!\tr4, r3, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_249\n.BB0_251:\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_4[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_256\n\tld.1\t128, r2\n\tadd\t4, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tsload\tr3, r3\n\tadd\tr3, r0, stack-[5]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_258\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[5], r0, r2\n\tjump.eq\t@.BB0_272\n\tadd\t11, r0, stack-[9]\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r3\n.BB0_270:\n\tadd\tr3, r0, stack-[10]\n\tshl.s\t5, r3, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tadd\t96, r1, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t4, r1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[10], r0, r3\n\tadd\t1, r3, r3\n\tld.1\t128, r1\n\tsub!\tr3, r1, r2\n\tjump.lt\t@.BB0_270\n\tadd\tstack-[4], r0, r2\n\tsload\tr2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_96\n.BB0_272:\n\tsub\tr2, r1, r6\n\tjump\t@.BB0_262\n.BB0_26:\n\tsub.s!\t@CPI0_38[0], r2, r4\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_39[0], r2, r4\n\tjump.eq\t@.BB0_130\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t160, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r1, r2\n\tld\tr2, r4\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r5\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r6\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_182\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tsub.s!\t4, r1, r2\n\tjump.gt\t@.BB0_113\n\tsub.s!\t2, r1, r1\n\tjump.ne\t@.BB0_137\n\tadd\tr6, r0, stack-[5]\n\tadd\tr5, r0, stack-[6]\n\tadd\tr4, r0, stack-[8]\n\tadd\tr3, r0, stack-[9]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_188\n\tld.1\t64, r1\n\tadd\t@CPI0_103[0], r0, r2\n\tjump\t@.BB0_118\n.BB0_48:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_453\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tjump\t@.BB0_61\n.BB0_23:\n\tsub.s!\t@CPI0_43[0], r2, r4\n\tjump.eq\t@.BB0_74\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_54[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_54[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_54[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_53[0], r5, r4\n\tjump.gt\t@.BB0_79\n\tshl.s\t5, r5, r4\n\tadd\t191, r4, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_53[0], r6, r7\n\tjump.gt\t@.BB0_79\n\tst.1\t64, r6\n\tst.1\t128, r5\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r3\n\tjump.eq\t@.BB0_110\n\tadd\t128, r0, r3\n.BB0_108:\n\tptr.add\tr1, r2, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_4[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\t32, r3, r3\n\tst.1\tr3, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB0_108\n.BB0_110:\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_111\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tsub.s!\t5, r1, r2\n\tjump.ge\t@.BB0_113\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_117\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_116\n.BB0_119:\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_112[0], r0, r4\n\tjump\t@.BB0_91\n.BB0_42:\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.eq\t@.BB0_421\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tjump\t@.BB0_61\n.BB0_32:\n\tsub.s!\t@CPI0_34[0], r2, r4\n\tjump.eq\t@.BB0_224\n\tsub.s!\t@CPI0_35[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tjump\t@.BB0_235\n.BB0_53:\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.eq\t@.BB0_469\n\tsub.s!\t@CPI0_14[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n\tjump\t@.BB0_61\n.BB0_425:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_427\n\tadd\t8, r0, r1\n\tsload\tr1, r2\n\tand\t255, r2, r3\n\tsub.s!\t4, r3, r4\n\tjump.gt\t@.BB0_113\n\tsub.s!\t4, r3, r4\n\tjump.eq\t@.BB0_137\n\tsub.s\t256, r0, r4\n\tand\tr2, r4, r2\n\tadd\t1, r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tst.1\t128, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_59[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_60[0], r0, r4\n.BB0_91:\n\tjump\t@.BB0_174\n.BB0_65:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_4[0], r2, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_68\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r6\n\tadd\t6, r0, r1\n\tsload\tr1, r5\n\tsstore\tr1, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_116[0], r0, r4\n.BB0_174:\n.BB0_175:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_70:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_273:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_54[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_54[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_54[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r7\n\tsub.s!\t@CPI0_53[0], r7, r4\n\tjump.gt\t@.BB0_79\n\tshl.s\t5, r7, r6\n\tadd\t191, r6, r5\n\tsub.s\t32, r0, r4\n\tand\tr5, r4, r5\n\tsub.s!\t@CPI0_53[0], r5, r8\n\tjump.gt\t@.BB0_79\n\tst.1\t64, r5\n\tst.1\t128, r7\n\tadd\t36, r2, r5\n\tadd\tr6, r5, r6\n\tsub!\tr6, r3, r8\n\tjump.gt\t@.BB0_2\n\tsub!\tr7, r0, r7\n\tjump.ne\t@.BB0_281\n.BB0_283:\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_284\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tsub.s!\t4, r1, r2\n\tjump.gt\t@.BB0_113\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_117\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_70\n\tadd\t9, r0, stack-[4]\n\tadd\t32784, r0, stack-[3]\n\tadd\t32781, r0, stack-[2]\n\tadd\t1, r0, stack-[1]\n\tadd\tr0, r0, stack-[9]\n.BB0_299:\n\tld.1\t128, r1\n\tsub.s!\tstack-[9], r1, r1\n\tjump.le\t@.BB0_94\n\tadd\tstack-[9], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r0, r2\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_303\n\tadd\tr0, r0, r3\n.BB0_305:\n\tadd\tr3, r0, stack-[10]\n\tshl.s\t5, r3, r2\n\tadd\t32, r2, stack-[7]\n\tadd\tstack-[7], r1, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_4[0], r1, r1\n\tjump.eq\t@.BB0_311\n\tld.1\t128, r1\n\tsub.s!\tstack-[9], r1, r1\n\tadd\tstack-[10], r0, r3\n\tjump.le\t@.BB0_94\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_94\n\tadd\tstack-[7], r1, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n.BB0_311:\n\tld.1\t128, r1\n\tsub.s!\tstack-[9], r1, r1\n\tadd\tstack-[10], r0, r3\n\tjump.le\t@.BB0_94\n\tadd\t1, r3, r3\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tld.1\tr1, r4\n\tsub!\tr3, r4, r2\n\tjump.lt\t@.BB0_305\n.BB0_303:\n\tadd\tr4, r0, stack-[10]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\t@CPI0_93[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tadd\t1, r2, stack-[9]\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r1\n\tsub!\tstack-[9], r1, r1\n\tjump.lt\t@.BB0_299\n\tjump\t@.BB0_70\n.BB0_206:\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tsub.s!\t4, r1, r2\n\tjump.gt\t@.BB0_113\n\tsub.s!\t3, r1, r1\n\tjump.ne\t@.BB0_137\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_140\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_140\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_213\n\tld.1\t64, r1\n\tadd\t@CPI0_99[0], r0, r2\n\tjump\t@.BB0_118\n.BB0_458:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tsub.s!\t4, r1, r2\n\tjump.gt\t@.BB0_113\n\tjump\t@.BB0_460\n.BB0_55:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\t1, r1, r1\n\tjump\t@.BB0_61\n.BB0_59:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tjump\t@.BB0_61\n.BB0_236:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_61\n.BB0_239:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tjump\t@.BB0_61\n.BB0_124:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r7\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r6\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r5\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_127\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_129\n.BB0_96:\n\tadd\t@CPI0_113[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_80\n.BB0_130:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_134\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tsub.s!\t4, r1, r2\n\tjump.le\t@.BB0_136\n.BB0_113:\n\tadd\t@CPI0_113[0], r0, r1\n\tst.1\t0, r1\n\tadd\t33, r0, r1\n\tjump\t@.BB0_80\n.BB0_453:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_235:\n\tand\t@CPI0_4[0], r1, r1\n\tjump\t@.BB0_460\n.BB0_74:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_54[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_54[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_54[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_114[0], r5, r4\n\tjump.ge\t@.BB0_79\n\tshl.s\t5, r5, r4\n\tadd\t191, r4, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_53[0], r6, r7\n\tjump.gt\t@.BB0_79\n\tst.1\t64, r6\n\tst.1\t128, r5\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r3\n\tjump.eq\t@.BB0_86\n\tadd\t160, r0, r3\n.BB0_85:\n\tptr.add\tr1, r2, r5\n\tld\tr5, r5\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB0_85\n.BB0_86:\n\tsload\tr0, r1\n\tand\t@CPI0_4[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_89\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_88\n.BB0_90:\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_115[0], r0, r4\n\tjump\t@.BB0_91\n.BB0_421:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tjump\t@.BB0_61\n.BB0_224:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t224, r0, r2\n\tst.1\t64, r2\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\t192, r2\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_96[0], r3, r2\n\tjump.le\t@.BB0_229\n.BB0_79:\n\tadd\t@CPI0_113[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_80:\n\tst.1\t4, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_469:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n.BB0_61:\n\tsload\tr1, r1\n.BB0_460:\n\tst.1\t128, r1\n\tadd\t@CPI0_50[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_427:\n\tjump\t@.BB0_127\n.BB0_316:\n.BB0_68:\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r2\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_129:\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tsstore\tr1, r5\n\tadd\t4, r0, r3\n\tsstore\tr3, r6\n\tadd\t7, r0, r1\n\tsstore\tr1, r7\n\tadd\t8, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r4\n\tand\tr2, r4, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_111[0], r0, r4\n\tjump\t@.BB0_175\n.BB0_134:\n\tjump\t@.BB0_127\n.BB0_465:\n.BB0_222:\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r5\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_182:\n.BB0_127:\n\tadd\t@CPI0_51[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_52[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_136:\n\tsub.s!\t3, r1, r1\n\tjump.ne\t@.BB0_137\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[8]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t10, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_140\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_4[0], r1, r1\n\tjump.ne\t@.BB0_143\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_146\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tadd\t3, r0, r2\n\tadd\tr2, r0, stack-[4]\n\tsload\tr2, r2\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_148\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tor\tstack-[10], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_96[0], r1, r1\n\tjump.gt\t@.BB0_79\n\tadd\tstack-[6], r0, r2\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\t64, r2, r3\n\tadd\t96, r0, r1\n\tadd\tr3, r0, stack-[3]\n\tst.1\tr3, r1\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[9], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r2\n\tld.1\tr2, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r2\n\tld.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[9]\n\tsub.s!\t@CPI0_53[0], r3, r2\n\tjump.gt\t@.BB0_79\n\tadd\t2, r1, r2\n\tsload\tr2, r3\n\tadd\tstack-[9], r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsstore\tr2, r1\n\tadd\tr3, r0, stack-[3]\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_156\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr2, r1, r1\n\tadd\tstack-[9], r0, r4\n\tadd\t31, r4, r3\n\tshr.s\t5, r3, r3\n\tadd\tr2, r3, r2\n\tand!\t31, r4, r3\n\tjump.eq\t@.BB0_160\n\tshl.s\t3, r3, r3\n\tsub\t256, r3, r3\n\tsub.s\t1, r2, r4\n\tsload\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r3\n\tsstore\tr4, r3\n.BB0_160:\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_156\n.BB0_162:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_162\n.BB0_156:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tshr.s\t5, r3, r2\n\tld\tr1, r1\n\tsub.s!\t32, r3, r3\n\tadd\tstack-[7], r0, r10\n\tjump.lt\t@.BB0_164\n\tsub.s\t1, r0, r3\n\tadd\tr0, r0, r4\n.BB0_163:\n\tadd\tr0, r0, r5\n\tadd\tr10, r0, r7\n\tadd\tr0, r0, r6\n.BB0_165:\n\tld.1.inc\tr7, r8, r7\n\tsub!\tr8, r0, r8\n\tadd\t0, r0, r8\n\tadd.ne\t1, r0, r8\n\tshl.s\t3, r5, r9\n\tshl\tr8, r9, r8\n\tshl\t255, r9, r9\n\txor\tr9, r3, r9\n\tand\tr6, r9, r6\n\tor\tr8, r6, r6\n\tsub.s!\t31, r5, r8\n\tadd\t1, r5, r5\n\tjump.lt\t@.BB0_165\n\tadd\tr4, r1, r5\n\tsstore\tr5, r6\n\tadd\t1024, r10, r10\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_163\n.BB0_164:\n\tsub.s\t32, r0, r3\n\tand\tstack-[9], r3, r3\n\tsub!\tstack-[9], r3, r3\n\tjump.eq\t@.BB0_169\n\tadd\tstack-[9], r0, r3\n\tand!\t31, r3, r3\n\tadd\tr0, r0, r4\n\tadd\tr10, r0, r9\n\tjump.eq\t@.BB0_177\n\tsub.s\t1, r0, r5\n\tadd\tr0, r0, r6\n\tadd\tr0, r0, r4\n.BB0_176:\n\tld.1.inc\tr9, r7, r9\n\tsub!\tr7, r0, r7\n\tadd\t0, r0, r7\n\tadd.ne\t1, r0, r7\n\tshl.s\t3, r6, r8\n\tshl\tr7, r8, r7\n\tshl\t255, r8, r8\n\txor\tr8, r5, r8\n\tand\tr4, r8, r4\n\tor\tr7, r4, r4\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_176\n.BB0_177:\n\tadd\tr1, r2, r1\n\tsstore\tr1, r4\n.BB0_169:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_96\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_96\n\tadd\t1, r1, r6\n\tadd\tstack-[4], r0, r3\n\tsstore\tr3, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_109[0], r0, r4\n\tjump\t@.BB0_173\n.BB0_137:\n\tadd\t@CPI0_104[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_105[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_140:\n\tld.1\t64, r1\n\tadd\t@CPI0_106[0], r0, r2\n.BB0_118:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_100[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_229:\n\tld\tr1, r1\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tsload\tr1, r2\n\tst.1.inc\tr3, r2, r4\n\tadd\tr4, r0, stack-[9]\n\tadd\t1, r1, r2\n\tsload\tr2, r2\n\tst.1\tr4, r2\n\tadd\t2, r1, r1\n\tadd\tr3, r0, stack-[8]\n\tnear_call\tr0, @copy_array_from_storage_to_memory_array_bool_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t32, r0, r3\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\tstack-[9], r0, r3\n\tld.1\tr3, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tld.1\tr2, r2\n\tadd\t96, r1, r3\n\tadd\tstack-[10], r0, r4\n\tst.1\tr3, r4\n\tadd\t128, r1, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t160, r1, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_232\n\tadd\tr0, r0, r5\n.BB0_231:\n\tadd\t32, r2, r2\n\tld.1\tr2, r6\n\tsub!\tr6, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tst.1.inc\tr3, r6, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_231\n.BB0_232:\n\tsub\tr3, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_468:\n\tand\t@CPI0_2[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tjump\t@.BB0_174\n.BB0_281:\n\tadd\t160, r0, r7\n\tadd\t@CPI0_54[0], r0, r8\n\tjump\t@.BB0_282\n.BB0_294:\n\tst.1.inc\tr7, r9, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r6, r9\n\tjump.ge\t@.BB0_283\n.BB0_282:\n\tptr.add\tr1, r5, r9\n\tld\tr9, r9\n\tsub.s!\t@CPI0_53[0], r9, r10\n\tjump.gt\t@.BB0_2\n\tadd\tr9, r2, r10\n\tadd\t67, r10, r9\n\tsub!\tr9, r3, r11\n\tadd\tr0, r0, r11\n\tadd.ge\tr8, r0, r11\n\tand\t@CPI0_54[0], r9, r9\n\tsub!\tr9, r0, r12\n\tadd\tr0, r0, r12\n\tadd.lt\tr8, r0, r12\n\tsub.s!\t@CPI0_54[0], r9, r9\n\tadd.ne\tr11, r0, r12\n\tsub!\tr12, r0, r9\n\tjump.ne\t@.BB0_2\n\tadd\t36, r10, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r11\n\tsub.s!\t@CPI0_53[0], r11, r9\n\tjump.gt\t@.BB0_79\n\tshl.s\t5, r11, r12\n\tadd\t63, r12, r9\n\tand\tr9, r4, r13\n\tld.1\t64, r9\n\tadd\tr9, r13, r13\n\tsub!\tr13, r9, r14\n\tadd\t0, r0, r14\n\tadd.lt\t1, r0, r14\n\tsub.s!\t@CPI0_53[0], r13, r15\n\tjump.gt\t@.BB0_79\n\tand!\t1, r14, r14\n\tjump.ne\t@.BB0_79\n\tst.1\t64, r13\n\tst.1\tr9, r11\n\tadd\t68, r10, r10\n\tadd\tr12, r10, r11\n\tsub!\tr11, r3, r12\n\tjump.gt\t@.BB0_2\n\tsub!\tr10, r11, r12\n\tjump.ge\t@.BB0_294\n\tadd\tr9, r0, r12\n.BB0_293:\n\tptr.add\tr1, r10, r13\n\tld\tr13, r13\n\tadd\t32, r12, r12\n\tst.1\tr12, r13\n\tadd\t32, r10, r10\n\tsub!\tr10, r11, r13\n\tjump.lt\t@.BB0_293\n\tjump\t@.BB0_294\n.BB0_213:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tmul\t@CPI0_97[0], r2, r1, r3\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_215\n\tdiv\tr1, r2, r2, r3\n\tsub.s!\t@CPI0_97[0], r2, r2\n\tjump.ne\t@.BB0_96\n.BB0_215:\n\tadd\t5, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsload\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_96\n\tsub.s\t1, r0, stack-[7]\n\tsub.s!\tstack-[7], r3, r1\n\tjump.eq\t@.BB0_96\n\tadd\tr3, r0, stack-[6]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r2\n\tadd\t1, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[7], r1, r2\n\tjump.eq\t@.BB0_96\n\tadd\t1, r1, r6\n\tadd\tstack-[8], r0, r1\n\tsstore\tr1, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_98[0], r0, r4\n.BB0_173:\n\tadd\tstack-[10], r0, r5\n\tjump\t@.BB0_174\n.BB0_249:\n\tadd\t160, r0, r5\n\tadd\t@CPI0_54[0], r0, r6\n.BB0_250:\n\tsub\tr3, r2, r7\n\tsub.s!\t160, r7, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr6, r0, r8\n\tand\t@CPI0_54[0], r7, r7\n\tsub!\tr7, r0, r9\n\tadd\tr0, r0, r9\n\tadd.gt\tr6, r0, r9\n\tsub.s!\t@CPI0_54[0], r7, r7\n\tadd.ne\tr8, r0, r9\n\tsub!\tr9, r0, r7\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_94[0], r7, r8\n\tjump.gt\t@.BB0_79\n\tadd\t160, r7, r8\n\tst.1\t64, r8\n\tptr.add\tr1, r2, r8\n\tld\tr8, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr7, r8, r8\n\tadd\t32, r2, r9\n\tptr.add\tr1, r9, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tadd\t64, r2, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tadd\t64, r7, r9\n\tst.1\tr9, r8\n\tadd\t96, r2, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tadd\t96, r7, r9\n\tst.1\tr9, r8\n\tadd\t128, r2, r8\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tadd\t128, r7, r9\n\tst.1\tr9, r8\n\tst.1.inc\tr5, r7, r5\n\tadd\t160, r2, r2\n\tsub!\tr2, r4, r7\n\tjump.lt\t@.BB0_250\n\tjump\t@.BB0_251\n.BB0_443:\n\tjump\t@.BB0_89\n.BB0_111:\n\tjump\t@.BB0_89\n.BB0_284:\n.BB0_89:\n\tld.1\t64, r2\n\tadd\t@CPI0_51[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_117:\n\tld.1\t64, r1\n\tadd\t@CPI0_104[0], r0, r2\n\tjump\t@.BB0_118\n.BB0_88:\n\tadd\t9, r0, stack-[9]\n\tadd\t32784, r0, stack-[7]\n\tsub.s\t1, r0, stack-[6]\n\tadd\tr0, r0, r2\n.BB0_92:\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t128, r2\n\tadd\tstack-[10], r0, r9\n\tsub!\tr2, r9, r2\n\tjump.le\t@.BB0_94\n\tld\tr1, r1\n\tsload\tr1, r1\n\tshl.s\t5, r9, r2\n\tadd\t160, r2, r2\n\tld.1\tr2, r2\n\tadd\tr2, r1, r10\n\tand\t@CPI0_54[0], r10, r3\n\tand\t@CPI0_54[0], r2, r4\n\tsub!\tr3, r4, r5\n\tadd\t@CPI0_54[0], r0, r8\n\tadd\tr0, r0, r5\n\tadd.lt\tr8, r0, r5\n\tadd\tr0, r0, r6\n\tadd.gt\tr8, r0, r6\n\txor\tr3, r4, r3\n\tsub!\tr10, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr8, r0, r4\n\tsub.s!\t@CPI0_54[0], r3, r7\n\tadd.ne\tr4, r0, r6\n\tadd\tr10, r0, stack-[8]\n\tsub!\tr10, r2, r2\n\tadd\tr0, r0, r2\n\tadd.ge\tr8, r0, r2\n\tsub.s!\t@CPI0_54[0], r3, r3\n\tadd.ne\tr2, r0, r5\n\tsub.s!\tstack-[6], r1, r2\n\tadd\tr0, r0, r2\n\tadd.gt\tr8, r0, r2\n\tand\t@CPI0_54[0], r1, r3\n\tsub.s!\t@CPI0_54[0], r3, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr8, r0, r4\n\txor\t@CPI0_54[0], r3, r3\n\tsub.s!\t@CPI0_54[0], r3, r3\n\tadd.ne\tr2, r0, r4\n\tsub!\tr5, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tshr.s\t255, r1, r1\n\tand\tr1, r2, r1\n\tsub!\tr6, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr4, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tand\tr3, r2, r2\n\tand\t1, r2, r2\n\tor!\tr1, r2, r1\n\tjump.ne\t@.BB0_96\n\tst.1\t0, r9\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r2\n\tadd\t1, r2, r2\n\tld.1\t128, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_92\n\tjump\t@.BB0_90\n.BB0_188:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t11, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_4[0], r1, r1\n\tjump.ne\t@.BB0_143\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t9, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_192\n.BB0_146:\n\tld.1\t64, r1\n\tadd\t@CPI0_110[0], r0, r2\n\tjump\t@.BB0_118\n.BB0_256:\n\tld.1\t64, r1\n\tadd\t@CPI0_51[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t4, r1, r3\n\tst.1\tr3, r2\n\tjump\t@.BB0_10\n.BB0_143:\n\tld.1\t64, r1\n\tadd\t@CPI0_107[0], r0, r2\n\tjump\t@.BB0_118\n.BB0_390:\n\tsub.s!\t1, r3, r2\n\tadd\tr0, r0, stack-[9]\n\tjump.ne\t@.BB0_420\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n\tadd\t1, r0, r3\n\tsload\tr3, r3\n\tand!\t1, r3, r3\n\tadd\t0, r0, r3\n\tadd.eq\t1, r0, r3\n\txor\tr2, r3, r2\n\tand!\t1, r2, r2\n\tadd\tr0, r0, stack-[9]\n\tjump.eq\t@.BB0_397\n.BB0_420:\n\tld.1\t64, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_92[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_397:\n\tsub.s!\t2, r1, r1\n\tadd\tstack-[7], r0, r2\n\tadd\tstack-[6], r0, r3\n\tjump.lt\t@.BB0_94\n\tadd\t64, r3, r1\n\tadd\t1, r0, r4\n\tadd\tr4, r0, stack-[9]\n\tst.1\tr1, r4\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_399\n.BB0_94:\n\tadd\t@CPI0_113[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_80\n.BB0_258:\n\tsub!\tr2, r0, r1\n\tadd\tstack-[5], r0, r6\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_265\n\tadd\t11, r0, stack-[7]\n\tadd\t32784, r0, stack-[6]\n\tadd\tr0, r0, r3\n.BB0_266:\n\tadd\tr3, r0, stack-[10]\n\tshl.s\t5, r3, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t96, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r5\n\tld.1.inc\tr5, r2, r3\n\tand\t@CPI0_4[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r4\n\tand\t@CPI0_2[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr1, r2\n\tld.1\tr3, r2\n\tadd\t1, r1, r3\n\tsstore\tr3, r2\n\tadd\t64, r5, r2\n\tld.1\tr2, r2\n\tadd\t2, r1, r3\n\tsstore\tr3, r2\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tadd\t3, r1, r3\n\tsstore\tr3, r2\n\tadd\t4, r1, r1\n\tadd\t128, r5, r2\n\tld.1\tr2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r3\n\tadd\t1, r3, r3\n\tld.1\t128, r1\n\tsub!\tr3, r1, r2\n\tjump.lt\t@.BB0_266\n\tadd\tstack-[4], r0, r2\n\tsload\tr2, r6\n.BB0_265:\n\tsub!\tr1, r6, r2\n\tjump.eq\t@.BB0_263\n\tadd\tr1, r6, r6\n\tsub!\tr6, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_96\n.BB0_262:\n\tadd\tstack-[4], r0, r1\n\tsstore\tr1, r6\n.BB0_263:\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tjump\t@.BB0_174\n.BB0_447:\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_450\n\tadd\t10, r0, stack-[9]\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r3\n.BB0_451:\n\tadd\tr3, r0, stack-[10]\n\tshl.s\t5, r3, r1\n\tadd\t160, r1, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r3\n\tadd\t1, r3, r3\n\tsstore\tr1, r3\n\tld.1\t128, r1\n\tsub!\tr3, r1, r2\n\tjump.lt\t@.BB0_451\n.BB0_450:\n\tadd\t3, r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_56[0], r0, r4\n\tjump\t@.BB0_91\n.BB0_116:\n\tadd\t10, r0, stack-[9]\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r2\n.BB0_120:\n\tadd\tr2, r0, stack-[10]\n\tshl.s\t5, r2, r1\n\tadd\t160, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tld.1\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tld.1\t128, r1\n\tsub.s!\tstack-[10], r1, r1\n\tjump.le\t@.BB0_94\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[10], r0, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsstore\tr1, r0\n\tadd\t1, r2, r2\n\tld.1\t128, r1\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_120\n\tjump\t@.BB0_119\n.BB0_399:\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, stack-[4]\n\txor\tstack-[4], r1, r1\n\tand\t1, r1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_53[0], r2, r2\n\tjump.gt\t@.BB0_79\n\tadd\t2, r1, r2\n\tsload\tr2, r3\n\tadd\tstack-[10], r0, r1\n\tadd\tr2, r0, stack-[8]\n\tsstore\tr2, r1\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_404\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr2, r1, r1\n\tadd\tstack-[10], r0, r4\n\tadd\t31, r4, r3\n\tshr.s\t5, r3, r3\n\tadd\tr2, r3, r2\n\tand!\t31, r4, r3\n\tjump.eq\t@.BB0_408\n\tshl.s\t3, r3, r3\n\tsub\t256, r3, r3\n\tsub.s\t1, r2, r4\n\tsload\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r3\n\tsstore\tr4, r3\n.BB0_408:\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_404\n.BB0_410:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_410\n.BB0_404:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_61[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tshr.s\t5, r3, r2\n\tld\tr1, r1\n\tsub.s!\t32, r3, r3\n\tadd\tstack-[7], r0, r9\n\tadd\tstack-[4], r0, r10\n\tjump.lt\t@.BB0_412\n\tadd\tr0, r0, r3\n.BB0_411:\n\tadd\tr0, r0, r4\n\tadd\tr9, r0, r6\n\tadd\tr0, r0, r5\n.BB0_413:\n\tld.1.inc\tr6, r7, r6\n\tsub!\tr7, r0, r7\n\tadd\t0, r0, r7\n\tadd.ne\t1, r0, r7\n\tshl.s\t3, r4, r8\n\tshl\tr7, r8, r7\n\tshl\t255, r8, r8\n\txor\tr8, r10, r8\n\tand\tr5, r8, r5\n\tor\tr7, r5, r5\n\tsub.s!\t31, r4, r7\n\tadd\t1, r4, r4\n\tjump.lt\t@.BB0_413\n\tadd\tr3, r1, r4\n\tsstore\tr4, r5\n\tadd\t1024, r9, r9\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_411\n.BB0_412:\n\tadd\tstack-[10], r0, r4\n\tand\tstack-[5], r4, r3\n\tsub!\tr4, r3, r3\n\tjump.eq\t@.BB0_420\n\tadd\tstack-[10], r0, r3\n\tand!\t31, r3, r4\n\tadd\tr0, r0, r3\n\tadd\tr9, r0, r8\n\tadd\tstack-[4], r0, r9\n\tjump.eq\t@.BB0_418\n\tadd\tr0, r0, r5\n\tadd\tr0, r0, r3\n.BB0_417:\n\tld.1.inc\tr8, r6, r8\n\tsub!\tr6, r0, r6\n\tadd\t0, r0, r6\n\tadd.ne\t1, r0, r6\n\tshl.s\t3, r5, r7\n\tshl\tr6, r7, r6\n\tshl\t255, r7, r7\n\txor\tr7, r9, r7\n\tand\tr3, r7, r3\n\tor\tr6, r3, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_417\n.BB0_418:\n\tadd\tr1, r2, r1\n\tjump\t@.BB0_419\n.BB0_192:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[6], r1, r1\n\tjump.ne\t@.BB0_197\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[5], r1, r1\n\tjump.ne\t@.BB0_197\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_96\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r2\n\tor\tstack-[10], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_96\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_55[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\t1, r1, r1\n\tadd\tstack-[9], r0, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_102[0], r0, r4\n\tjump\t@.BB0_173\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_148:\n\tld.1\t64, r1\n\tadd\t@CPI0_108[0], r0, r2\n\tjump\t@.BB0_118\n.BB0_197:\n\tld.1\t64, r1\n\tadd\t@CPI0_101[0], r0, r2\n\tjump\t@.BB0_118\n.func_end0:\n\ncopy_array_from_storage_to_memory_array_bool_dyn:\n.func_begin1:\n\tnop\tstack+=[3]\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr3, r0, stack-[1]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r2\n\tadd\tstack-[1], r0, r8\n\tsub.s!\t32, r8, r1\n\tadd\tr0, r0, r6\n\tadd\tstack-[2], r0, r7\n\tjump.lt\t@.BB1_5\n\tadd\tr0, r0, r6\n.BB1_4:\n\tadd\t992, r7, r4\n\tsload\tr2, r3\n\tsub.s!\t@CPI1_2[0], r3, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\tst.1\tr4, r5\n\tand!\t@CPI1_3[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t960, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_4[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t928, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_5[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t896, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_6[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t864, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_7[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t832, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_8[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t800, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_9[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t768, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_10[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t736, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_11[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t704, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_12[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t672, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_13[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t640, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_14[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t608, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_15[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t576, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_16[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t544, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_17[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t512, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_18[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t480, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_19[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t448, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_20[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t416, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_21[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t384, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_22[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t352, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_23[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t320, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_24[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t288, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_25[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t256, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_26[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t224, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_27[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t192, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_28[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t160, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_29[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t128, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_30[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t96, r7, r5\n\tst.1\tr5, r4\n\tand!\t@CPI1_31[0], r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t64, r7, r5\n\tst.1\tr5, r4\n\tand!\t65280, r3, r4\n\tadd\t0, r0, r4\n\tadd.ne\t1, r0, r4\n\tadd\t32, r7, r5\n\tst.1\tr5, r4\n\tand!\t255, r3, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1\tr7, r3\n\tadd\t1, r2, r2\n\tadd\t1024, r7, r7\n\tadd\t32, r6, r6\n\tor\t31, r6, r3\n\tsub!\tr3, r8, r3\n\tjump.lt\t@.BB1_4\n.BB1_5:\n\tsload\tr2, r2\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_7\n\tand!\t255, r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tor\t1, r6, r6\n.BB1_7:\n\tsub!\tr6, r8, r3\n\tadd\tstack-[3], r0, r1\n\tjump.ge\t@.BB1_9\n\tand!\t65280, r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_9:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_11\n\tand!\t@CPI1_31[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_11:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_13\n\tand!\t@CPI1_30[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_13:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_15\n\tand!\t@CPI1_29[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_15:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_17\n\tand!\t@CPI1_28[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_17:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_19\n\tand!\t@CPI1_27[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_19:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_21\n\tand!\t@CPI1_26[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_21:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_23\n\tand!\t@CPI1_25[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_23:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_25\n\tand!\t@CPI1_24[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_25:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_27\n\tand!\t@CPI1_23[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_27:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_29\n\tand!\t@CPI1_22[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_29:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_31\n\tand!\t@CPI1_21[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_31:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_33\n\tand!\t@CPI1_20[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_33:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_35\n\tand!\t@CPI1_19[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_35:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_37\n\tand!\t@CPI1_18[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_37:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_39\n\tand!\t@CPI1_17[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_39:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_41\n\tand!\t@CPI1_16[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_41:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_43\n\tand!\t@CPI1_15[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_43:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_45\n\tand!\t@CPI1_14[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_45:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_47\n\tand!\t@CPI1_13[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_47:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_49\n\tand!\t@CPI1_12[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_49:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_51\n\tand!\t@CPI1_11[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_51:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_53\n\tand!\t@CPI1_10[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_53:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_55\n\tand!\t@CPI1_9[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_55:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_57\n\tand!\t@CPI1_8[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_57:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_59\n\tand!\t@CPI1_7[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_59:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_61\n\tand!\t@CPI1_6[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_61:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_63\n\tand!\t@CPI1_5[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_63:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_65\n\tand!\t@CPI1_4[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_65:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_67\n\tand!\t@CPI1_3[0], r2, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r6, r6\n.BB1_67:\n\tsub!\tr6, r8, r3\n\tjump.ge\t@.BB1_69\n\tsub.s!\t@CPI1_2[0], r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\tst.1.inc\tr7, r2, r7\n.BB1_69:\n\tsub\tr7, r1, r2\n\tadd\t31, r2, r3\n\tsub.s\t32, r0, r2\n\tand\tr3, r2, r2\n\tadd\tr2, r1, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_32[0], r4, r3\n\tjump.gt\t@.BB1_71\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_71\n\tst.1\t64, r4\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_71:\n\tadd\t@CPI1_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_34[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__sha3:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_3:\nCPI2_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_6:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_7:\n\t.cell 13710277464781854216000659759875001615964737203828340066645871065499466465280\nCPI0_8:\nCPI1_34:\n\t.cell 2852213850513516153367582212096\nCPI0_9:\n\t.cell 2403998627\nCPI0_10:\n\t.cell 3275704572\nCPI0_11:\n\t.cell 3964151982\nCPI0_12:\n\t.cell 4166992029\nCPI0_13:\n\t.cell 4166992030\nCPI0_14:\n\t.cell 4191013934\nCPI0_15:\n\t.cell 3964151983\nCPI0_16:\n\t.cell 4076725131\nCPI0_17:\n\t.cell 3611495866\nCPI0_18:\n\t.cell 3611495867\nCPI0_19:\n\t.cell 3859175338\nCPI0_20:\n\t.cell 3275704573\nCPI0_21:\n\t.cell 3589862214\nCPI0_22:\n\t.cell 3047014557\nCPI0_23:\n\t.cell 3151214731\nCPI0_24:\n\t.cell 3151214732\nCPI0_25:\n\t.cell 3207476927\nCPI0_26:\n\t.cell 3047014558\nCPI0_27:\n\t.cell 3151023566\nCPI0_28:\n\t.cell 2403998628\nCPI0_29:\n\t.cell 2489201778\nCPI0_30:\n\t.cell 2605471629\nCPI0_31:\n\t.cell 1448978411\nCPI0_32:\n\t.cell 1891013755\nCPI0_33:\n\t.cell 2088264322\nCPI0_34:\n\t.cell 2088264323\nCPI0_35:\n\t.cell 2376452955\nCPI0_36:\n\t.cell 1891013756\nCPI0_37:\n\t.cell 1901074598\nCPI0_38:\n\t.cell 1448978412\nCPI0_39:\n\t.cell 1652035068\nCPI0_40:\n\t.cell 1701058523\nCPI0_41:\n\t.cell 412130343\nCPI0_42:\n\t.cell 1237959576\nCPI0_43:\n\t.cell 1237959577\nCPI0_44:\n\t.cell 1417424771\nCPI0_45:\n\t.cell 412130344\nCPI0_46:\n\t.cell 707662624\nCPI0_47:\n\t.cell 141731647\nCPI0_48:\n\t.cell 225679885\nCPI0_49:\n\t.cell 397774476\nCPI0_50:\n\t.cell 2535301202817642044428229017600\nCPI0_51:\n\t.cell 7938186097999196165550678859506685896924014503924332068426884830790147899392\nCPI0_52:\n\t.cell 2852213852874699394802404818944\nCPI0_53:\nCPI1_32:\n\t.cell 18446744073709551615\nCPI0_54:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_55:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_56:\n\t.cell -6958444664702244941047388513155726215090806387919042780098194870483797322145\nCPI0_57:\n\t.cell -33874747640196211266355063995343138032711933993694674899894651906481002119168\nCPI0_58:\n\t.cell 5387515050969974956360988622848\nCPI0_59:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_60:\n\t.cell 51412953305431909507640787890046265553369531461573411160675681545632973087214\nCPI0_61:\nCPI1_1:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_62:\nCPI1_2:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_63:\nCPI1_3:\n\t.cell 450546001518488004043740862689444221536008393703282834321009581329618042880\nCPI0_64:\nCPI1_4:\n\t.cell 1759945318431593765795862744880641490375032787903448571566443677068820480\nCPI0_65:\nCPI1_5:\n\t.cell 6874786400123413147640088847190005821777471827747845982681420613550080\nCPI0_66:\nCPI1_6:\n\t.cell 26854634375482082607969097059335960241318249327140023369849299271680\nCPI0_67:\nCPI1_7:\n\t.cell 104900915529226885187379285388031094692649411434140716288473825280\nCPI0_68:\nCPI1_8:\n\t.cell 409769201286042520263200333546996463643161763414612173001850880\nCPI0_69:\nCPI1_9:\n\t.cell 1600660942523603594778126302917954936106100638338328800788480\nCPI0_70:\nCPI1_10:\n\t.cell 6252581806732826542102055870773261469164455618509096878080\nCPI0_71:\nCPI1_11:\n\t.cell 24424147682550103680086155745208052613923654759801159680\nCPI0_72:\nCPI1_12:\n\t.cell 95406826884961342500336545879718955523139276405473280\nCPI0_73:\nCPI1_13:\n\t.cell 372682917519380244141939632342652170012262798458880\nCPI0_74:\nCPI1_14:\n\t.cell 1455792646560079078679451688838485039110401556480\nCPI0_75:\nCPI1_15:\n\t.cell 5686690025625308901091608159525332184025006080\nCPI0_76:\nCPI1_16:\n\t.cell 22213632912598862894889094373145828843847680\nCPI0_77:\nCPI1_17:\n\t.cell 86772003564839308183160524895100893921280\nCPI0_78:\nCPI1_18:\n\t.cell 338953138925153547590470800371487866880\nCPI0_79:\nCPI1_19:\n\t.cell 1324035698926381045275276563951124480\nCPI0_80:\nCPI1_20:\n\t.cell 5172014448931175958106549077934080\nCPI0_81:\nCPI1_21:\n\t.cell 20203181441137406086353707335680\nCPI0_82:\nCPI1_22:\n\t.cell 78918677504442992524819169280\nCPI0_83:\nCPI1_23:\n\t.cell 308276084001730439550074880\nCPI0_84:\nCPI1_24:\n\t.cell 1204203453131759529492480\nCPI0_85:\nCPI1_25:\n\t.cell 4703919738795935662080\nCPI0_86:\nCPI1_26:\n\t.cell 18374686479671623680\nCPI0_87:\nCPI1_27:\n\t.cell 71776119061217280\nCPI0_88:\nCPI1_28:\n\t.cell 280375465082880\nCPI0_89:\nCPI1_29:\n\t.cell 1095216660480\nCPI0_90:\nCPI1_30:\n\t.cell 4278190080\nCPI0_91:\nCPI1_31:\n\t.cell 16711680\nCPI0_92:\n\t.cell 2535301200456458802993406410752\nCPI0_93:\n\t.cell 23421165351016381362149548888777630798708404150099601815379915086420120628182\nCPI0_94:\n\t.cell 18446744073709551455\nCPI0_95:\n\t.cell 54120053531457046033740486229663372939204870087732995861485782615853070233289\nCPI0_96:\n\t.cell 18446744073709551519\nCPI0_97:\n\t.cell 1000000\nCPI0_98:\n\t.cell 27287981018526149377272312858819148776940164037048591374570748742250015208783\nCPI0_99:\n\t.cell 23601248041653332577971775179110793191585437609555957758563182438956247547904\nCPI0_100:\n\t.cell 316912650057057350374175801344\nCPI0_101:\n\t.cell -36721812988139427200375897400426562602006879668374759964336044076817119707136\nCPI0_102:\n\t.cell -25692972856010089863345100522178030381239218500697747311560163879061491327549\nCPI0_103:\n\t.cell 42737067544930503743005253048679105266416541395974896542964835760294863044608\nCPI0_104:\n\t.cell -20723713424705196339675482542920501820331328790638138860401966363631994011648\nCPI0_105:\n\t.cell 316912652418240591808998408192\nCPI0_106:\n\t.cell 53286958953028104095826360012896700314070586713779123126019375536085185593344\nCPI0_107:\n\t.cell 10325341419188075996657249912883476629341446721891708858966833221745177001984\nCPI0_108:\n\t.cell 8960283831579571082061833871385429073369311915774096560645610344718673117184\nCPI0_109:\n\t.cell 15300828045421534618845011967000132051256722747854175989352862478112001974820\nCPI0_110:\n\t.cell -17632002736725588639901922776131426314451530212610151625038047592450390753280\nCPI0_111:\n\t.cell 18140401626326185895582449458235805921865321497424457441909399283610684404543\nCPI0_112:\n\t.cell -41563771898648700106924172610078340114156040346600760779880249137286699715004\nCPI0_113:\nCPI1_33:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_114:\n\t.cell 18446744073709551616\nCPI0_115:\n\t.cell -24697985451461232449880016583564582022299105343197332375968119133569389771297\nCPI0_116:\n\t.cell -12084509292625776083881800071635406589700386397082730143302871701730416819826\nCPI0_117:\n\t.cell 12676506010546435359988911177728\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "addNewFan(address,uint256,uint256)": "62780dfc",
            "advanceStage()": "c33f48fd",
            "attendMatch(uint256,address)": "bbd0cdce",
            "becomeSympathizer()": "70b6947c",
            "changeNumberOfSeasonIds(address[])": "d5f8f346",
            "changeSeat(address,uint256,uint256,uint256,uint256)": "656417db",
            "deleteNumberOfSeasonIds(address[])": "547c2f83",
            "getMaxAvailableSeats(uint256)": "8f4a1ba4",
            "getNumberOfCurrentFans()": "0d739a0d",
            "getNumberOfMaxFans()": "f85f409e",
            "getNumberOfMaxSeats()": "e60657aa",
            "getNumberOfSympathizer()": "bf2e36bf",
            "getNumberOfZones()": "bbd3b88c",
            "getSeasonNumber()": "945e3472",
            "getSeasonPass(address)": "7c786283",
            "getSeasonStages()": "ec4828af",
            "getSeat(uint256)": "17b58e8c",
            "getSeatOfFan(address)": "0872a73f",
            "getSeatOwner(uint256)": "d7430dbb",
            "getSympathizerFee()": "f9cdcc2e",
            "isEven(uint256)": "2a2e1320",
            "modifyAvailableSeats(int256[])": "49c9c399",
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "setSeatAvailability(uint256[][])": "b59dc09e",
            "setSeatInfo((address,uint256,uint256,uint256,uint256)[],bool)": "9b4c578d",
            "setSympathizerFee(uint256)": "18909c28",
            "startNewSeason(uint256,uint256,uint256)": "565da7ec",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 1:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 2:\"src/contracts/SeasonPassManager.sol\"\nobject \"SeasonPassManager_1297\" {\n    code {\n        {\n            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"SeasonPassManager_1297\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 160)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n            let value := mload(_1)\n            let value_1 := mload(add(_1, 32))\n            let value_2 := mload(add(_1, 64))\n            let value_3 := mload(add(_1, 96))\n            let value_4 := mload(add(_1, 128))\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 2:5289:5299  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                let _2 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(64)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(_2, shl(224, 0x1e4fbdf7))\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_2, 4), /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(_2, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 36)\n            }\n            let _3 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), /** @src 2:5289:5299  \"msg.sender\" */ caller()))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _4 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 2:5289:5299  \"msg.sender\" */ caller())\n            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n            sstore(1, value)\n            sstore(/** @src 2:5349:5383  \"numberOfMaxFans = numberOfMaxFans_\" */ 0x02, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value_1)\n            sstore(/** @src 2:5393:5429  \"numberOfMaxSeats = numberOfMaxSeats_\" */ 0x04, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value_2)\n            sstore(/** @src 2:5439:5469  \"numberOfZones = numberOfZones_\" */ 0x07, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value_3)\n            sstore(/** @src 2:5479:5511  \"sympathizerFee = sympathizerFee_\" */ 0x06, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value_4)\n            sstore(/** @src 2:5521:5551  \"seasonStages = Stages.RENEWALS\" */ 0x08, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ or(and(sload(/** @src 2:5521:5551  \"seasonStages = Stages.RENEWALS\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ not(255)), 1))\n            let _5 := datasize(\"SeasonPassManager_1297_deployed\")\n            codecopy(_4, dataoffset(\"SeasonPassManager_1297_deployed\"), _5)\n            return(_4, _5)\n        }\n    }\n    /// @use-src 0:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 1:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 2:\"src/contracts/SeasonPassManager.sol\"\n    object \"SeasonPassManager_1297_deployed\" {\n        code {\n            {\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0872a73f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_31688(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 2:16447:16461  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(_1, sload(/** @src 2:16447:16474  \"s_SeasonPasses[fan_].seatId\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), /** @src 2:16447:16474  \"s_SeasonPasses[fan_].seatId\" */ 1)))\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(_1, 32)\n                    }\n                    case 0x0d739a0d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _4 := sload(/** @src 2:15335:15354  \"numberOfCurrentFans\" */ 0x03)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let memPos := mload(_2)\n                        mstore(memPos, _4)\n                        return(memPos, 32)\n                    }\n                    case 0x17b58e8c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let memPtr := mload(_2)\n                        finalize_allocation_31689(memPtr)\n                        mstore(memPtr, 0)\n                        mstore(add(memPtr, 32), 0)\n                        mstore(add(memPtr, _2), 0)\n                        mstore(add(memPtr, 96), 0)\n                        mstore(add(memPtr, 128), 0)\n                        mstore(0, calldataload(_3))\n                        mstore(32, /** @src 2:16149:16156  \"s_Seats\" */ 0x0b)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let dataSlot := keccak256(0, _2)\n                        let memPtr_1 := mload(_2)\n                        finalize_allocation_31689(memPtr_1)\n                        let cleaned := and(sload(dataSlot), sub(shl(160, 1), 1))\n                        mstore(memPtr_1, cleaned)\n                        let _5 := sload(add(dataSlot, 1))\n                        let _6 := add(memPtr_1, 32)\n                        mstore(_6, _5)\n                        let _7 := sload(add(dataSlot, 2))\n                        let _8 := add(memPtr_1, _2)\n                        mstore(_8, _7)\n                        let _9 := sload(add(dataSlot, 3))\n                        let _10 := add(memPtr_1, 96)\n                        mstore(_10, _9)\n                        let _11 := sload(add(dataSlot, _3))\n                        let _12 := add(memPtr_1, 128)\n                        mstore(_12, _11)\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, cleaned)\n                        mstore(add(memPos_1, 32), mload(_6))\n                        mstore(add(memPos_1, _2), mload(_8))\n                        mstore(add(memPos_1, 96), mload(_10))\n                        mstore(add(memPos_1, 128), mload(_12))\n                        return(memPos_1, 160)\n                    }\n                    case 0x18909c28 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(_3)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _13 := sload(/** @src 2:7115:7129  \"sympathizerFee\" */ 0x06)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        sstore(/** @src 2:7115:7129  \"sympathizerFee\" */ 0x06, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value)\n                        /// @src 2:7178:7279  \"SeasonPass_UpdatedSympathizerFee(...\"\n                        log3(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:7178:7279  \"SeasonPass_UpdatedSympathizerFee(...\" */ 0xe54868fe099badb3cefe6e406fea76657c55adaa5de7e4d1f02167b58b11818e, _13, value)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x2a2e1320 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret := fun_isEven(calldataload(_3))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, iszero(iszero(ret)))\n                        return(memPos_2, 32)\n                    }\n                    case 0x49c9c399 {\n                        if callvalue() { revert(0, 0) }\n                        let _14 := 32\n                        if slt(add(calldatasize(), not(3)), _14) { revert(0, 0) }\n                        let offset := calldataload(_3)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let _15 := calldataload(add(_3, offset))\n                        let _16 := 36\n                        let _17 := array_allocation_size_array_int256_dyn(_15)\n                        let memPtr_2 := mload(_2)\n                        finalize_allocation(memPtr_2, _17)\n                        let dst := memPtr_2\n                        mstore(memPtr_2, _15)\n                        dst := add(memPtr_2, _14)\n                        let srcEnd := add(add(offset, shl(5, _15)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n                        let src := add(offset, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _14) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _14)\n                        }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:6746:6756  \"uint i = 0\"\n                        let var_i := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                        /// @src 2:6741:6951  \"for (uint i = 0; i < variationOfAvailableSeats.length; i++) {...\"\n                        for { }\n                        /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1\n                        /// @src 2:6746:6756  \"uint i = 0\"\n                        {\n                            /// @src 2:6796:6799  \"i++\"\n                            var_i := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ add(/** @src 2:6796:6799  \"i++\" */ var_i, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1)\n                        }\n                        /// @src 2:6796:6799  \"i++\"\n                        {\n                            /// @src 2:6758:6794  \"i < variationOfAvailableSeats.length\"\n                            if iszero(lt(var_i, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:6762:6794  \"variationOfAvailableSeats.length\" */ memPtr_2)))\n                            /// @src 2:6758:6794  \"i < variationOfAvailableSeats.length\"\n                            { break }\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(0, var_i)\n                            /// @src 2:6872:6891  \"s_MaxAvailableSeats\"\n                            let _18 := 0x09\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(_14, /** @src 2:6872:6891  \"s_MaxAvailableSeats\" */ _18)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            let _19 := sload(keccak256(0, _2))\n                            let _20 := mload(/** @src 2:6898:6926  \"variationOfAvailableSeats[i]\" */ memory_array_index_access_int256_dyn(memPtr_2, var_i))\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            let sum := add(_19, _20)\n                            let _21 := slt(sum, _20)\n                            let _22 := slt(_19, 0)\n                            if or(and(iszero(_22), _21), and(_22, iszero(_21)))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_3, 0x11)\n                                revert(0, _16)\n                            }\n                            mstore(0, var_i)\n                            mstore(_14, /** @src 2:6872:6891  \"s_MaxAvailableSeats\" */ _18)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            sstore(keccak256(0, _2), sum)\n                        }\n                        /// @src 2:6965:7001  \"SeasonPass_UpdatedSeatAvailability()\"\n                        log1(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:6965:7001  \"SeasonPass_UpdatedSeatAvailability()\" */ 0xc9656f8489dc26504b173a59b758f064fbd974cfb6eefcaea966becb3932c5df)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x547c2f83 {\n                        if callvalue() { revert(0, 0) }\n                        let _23 := abi_decode_array_address_dyn(calldatasize())\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let value_1 := and(sload(/** @src 2:4935:4947  \"seasonStages\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_1, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 2:9323:9338  \"Stages.RENEWALS\"\n                        let _24 := 1\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        let expr := /** @src 2:4935:4956  \"seasonStages < stage_\" */ lt(value_1, /** @src 2:9323:9338  \"Stages.RENEWALS\" */ 1)\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        if expr\n                        {\n                            expr := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                        }\n                        /// @src 2:4934:5001  \"(seasonStages < stage_ && possibleAfter_) || seasonStages != stage_\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 2:4979:5001  \"seasonStages != stage_\" */ iszero(eq(value_1, /** @src 2:9323:9338  \"Stages.RENEWALS\" */ 1))\n                        }\n                        /// @src 2:4917:5075  \"if (...\"\n                        if expr_1\n                        {\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            let _25 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            mstore(_25, shl(224, 0xd22ecb3b))\n                            revert(_25, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        /// @src 2:9362:9372  \"uint i = 0\"\n                        let var_i_1 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                        /// @src 2:9357:9514  \"for (uint i = 0; i < fans_.length; i++) {...\"\n                        for { }\n                        /** @src 2:9323:9338  \"Stages.RENEWALS\" */ _24\n                        /// @src 2:9362:9372  \"uint i = 0\"\n                        {\n                            /// @src 2:9392:9395  \"i++\"\n                            var_i_1 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ add(/** @src 2:9392:9395  \"i++\" */ var_i_1, /** @src 2:9323:9338  \"Stages.RENEWALS\" */ _24)\n                        }\n                        /// @src 2:9392:9395  \"i++\"\n                        {\n                            /// @src 2:9374:9390  \"i < fans_.length\"\n                            if iszero(lt(var_i_1, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:9378:9390  \"fans_.length\" */ _23)))\n                            /// @src 2:9374:9390  \"i < fans_.length\"\n                            { break }\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            let _26 := sub(shl(160, 1), 1)\n                            mstore(0, and(mload(/** @src 2:9426:9434  \"fans_[i]\" */ memory_array_index_access_int256_dyn(_23, var_i_1)), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _26))\n                            /// @src 2:9411:9425  \"s_SeasonPasses\"\n                            let _27 := 0x0a\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            let _28 := 0x20\n                            mstore(_28, /** @src 2:9411:9425  \"s_SeasonPasses\" */ _27)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            sstore(keccak256(0, _2), 0)\n                            mstore(0, and(mload(/** @src 2:9483:9491  \"fans_[i]\" */ memory_array_index_access_int256_dyn(_23, var_i_1)), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _26))\n                            mstore(_28, /** @src 2:9411:9425  \"s_SeasonPasses\" */ _27)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            sstore(/** @src 2:9468:9499  \"s_SeasonPasses[fans_[i]].seatId\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), /** @src 2:9323:9338  \"Stages.RENEWALS\" */ _24), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0)\n                        }\n                        /// @src 2:9528:9572  \"SeasonPass_DeletedOldNumberOfSeasonPassIds()\"\n                        log1(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:9528:9572  \"SeasonPass_DeletedOldNumberOfSeasonPassIds()\" */ 0xa41bbd204712ea9be93267b44c5544db8229fd7cec900aac719f55291d557644)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x565da7ec {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value_2 := calldataload(_3)\n                        let value_3 := calldataload(36)\n                        let value_4 := calldataload(68)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        sstore(1, /** @src 2:7711:7725  \"seasonNumber++\" */ increment_uint256(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(1)))\n                        sstore(/** @src 2:7735:7769  \"numberOfMaxFans = numberOfMaxFans_\" */ 0x02, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value_2)\n                        sstore(_3, value_3)\n                        sstore(/** @src 2:7825:7855  \"numberOfZones = numberOfZones_\" */ 0x07, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value_4)\n                        sstore(/** @src 2:7865:7895  \"seasonStages = Stages.RENEWALS\" */ 0x08, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ or(and(sload(/** @src 2:7865:7895  \"seasonStages = Stages.RENEWALS\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ not(255)), 1))\n                        /// @src 2:7910:8034  \"SeasonPass_NewSeasonStarted(...\"\n                        log4(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:7910:8034  \"SeasonPass_NewSeasonStarted(...\" */ 0x281b1a7ce2124fa9ef9db114787c7095aa305f54a1f01cb99292600edc2eb33f, value_2, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ value_3, /** @src 2:7910:8034  \"SeasonPass_NewSeasonStarted(...\" */ value_4)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x62780dfc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0 := abi_decode_address_31688()\n                        let value_5 := calldataload(36)\n                        let value_6 := calldataload(68)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let value_7 := and(sload(/** @src 2:4935:4947  \"seasonStages\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_7, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 36)\n                        }\n                        /// @src 2:12805:12820  \"Stages.NEW_FANS\"\n                        let _29 := 3\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        let expr_2 := /** @src 2:4935:4956  \"seasonStages < stage_\" */ lt(value_7, /** @src 2:12805:12820  \"Stages.NEW_FANS\" */ _29)\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        if expr_2\n                        {\n                            expr_2 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1\n                        }\n                        /// @src 2:4934:5001  \"(seasonStages < stage_ && possibleAfter_) || seasonStages != stage_\"\n                        let expr_3 := expr_2\n                        if iszero(expr_2)\n                        {\n                            expr_3 := /** @src 2:4979:5001  \"seasonStages != stage_\" */ iszero(eq(value_7, /** @src 2:12805:12820  \"Stages.NEW_FANS\" */ _29))\n                        }\n                        /// @src 2:4917:5075  \"if (...\"\n                        if expr_3\n                        {\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            let _30 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            mstore(_30, shl(224, 0xd22ecb3b))\n                            revert(_30, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        let _31 := sub(shl(160, 1), 1)\n                        let _32 := and(value0, _31)\n                        mstore(0, _32)\n                        let _33 := 32\n                        mstore(_33, /** @src 2:12842:12856  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _34 := 1\n                        /// @src 2:12838:12935  \"if (s_SeasonPasses[fan_].seatId != 0) {...\"\n                        if /** @src 2:12842:12874  \"s_SeasonPasses[fan_].seatId != 0\" */ iszero(iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:12842:12869  \"s_SeasonPasses[fan_].seatId\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), _34))))\n                        /// @src 2:12838:12935  \"if (s_SeasonPasses[fan_].seatId != 0) {...\"\n                        {\n                            /// @src 2:12897:12924  \"SeasonPass_FanAddedBefore()\"\n                            let _35 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:12897:12924  \"SeasonPass_FanAddedBefore()\"\n                            mstore(_35, shl(224, 0x75cf5997))\n                            revert(_35, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, value_5)\n                        mstore(_33, /** @src 2:12948:12955  \"s_Seats\" */ 0x0b)\n                        /// @src 2:12944:13048  \"if (s_Seats[seatId_].seatOwner != address(0)) {...\"\n                        if /** @src 2:12948:12988  \"s_Seats[seatId_].seatOwner != address(0)\" */ iszero(iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ and(sload(keccak256(0, _2)), _31)))\n                        /// @src 2:12944:13048  \"if (s_Seats[seatId_].seatOwner != address(0)) {...\"\n                        {\n                            /// @src 2:13011:13037  \"SeasonPass_SeatIsNotFree()\"\n                            let _36 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:13011:13037  \"SeasonPass_SeatIsNotFree()\"\n                            mstore(_36, shl(224, 0x16d3efa7))\n                            revert(_36, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, value_6)\n                        mstore(_33, /** @src 2:13061:13080  \"s_MaxAvailableSeats\" */ 0x09)\n                        /// @src 2:13057:13153  \"if (s_MaxAvailableSeats[zone_] == 0) {...\"\n                        if /** @src 2:13061:13092  \"s_MaxAvailableSeats[zone_] == 0\" */ iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(keccak256(0, _2)))\n                        /// @src 2:13057:13153  \"if (s_MaxAvailableSeats[zone_] == 0) {...\"\n                        {\n                            /// @src 2:13115:13142  \"SeasonPass_MaxSeatsInZone()\"\n                            let _37 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:13115:13142  \"SeasonPass_MaxSeatsInZone()\"\n                            mstore(_37, shl(225, 0x6c8251ef))\n                            revert(_37, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        let _38 := sload(/** @src 2:12805:12820  \"Stages.NEW_FANS\" */ _29)\n                        /// @src 2:13162:13267  \"if (numberOfCurrentFans >= numberOfMaxFans) {...\"\n                        if /** @src 2:13166:13204  \"numberOfCurrentFans >= numberOfMaxFans\" */ iszero(lt(_38, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:13189:13204  \"numberOfMaxFans\" */ 0x02)))\n                        /// @src 2:13162:13267  \"if (numberOfCurrentFans >= numberOfMaxFans) {...\"\n                        {\n                            /// @src 2:13227:13256  \"SeasonPass_MaximumFansAdded()\"\n                            let _39 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:13227:13256  \"SeasonPass_MaximumFansAdded()\"\n                            mstore(_39, shl(224, 0x13cf5747))\n                            revert(_39, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, value_5)\n                        mstore(_33, /** @src 2:12948:12955  \"s_Seats\" */ 0x0b)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _40 := keccak256(0, _2)\n                        sstore(_40, or(and(sload(_40), shl(160, 0xffffffffffffffffffffffff)), _32))\n                        /// @src 2:13321:13352  \"SeasonPass memory newSeasonPass\"\n                        let zero_struct_SeasonPass_mpos := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ allocate_and_zero_memory_struct_struct_SeasonPass()\n                        mstore(zero_struct_SeasonPass_mpos, sload(/** @src 2:12805:12820  \"Stages.NEW_FANS\" */ _29))\n                        /// @src 2:13422:13442  \"newSeasonPass.seatId\"\n                        let _41 := add(zero_struct_SeasonPass_mpos, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _33)\n                        mstore(_41, value_5)\n                        mstore(0, _32)\n                        mstore(_33, /** @src 2:12842:12856  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let dataSlot_1 := keccak256(0, _2)\n                        sstore(dataSlot_1, mload(zero_struct_SeasonPass_mpos))\n                        sstore(add(dataSlot_1, _34), mload(_41))\n                        let memberSlot := add(dataSlot_1, /** @src 2:13189:13204  \"numberOfMaxFans\" */ 0x02)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _42 := mload(add(zero_struct_SeasonPass_mpos, _2))\n                        let length := mload(_42)\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 36)\n                        }\n                        if gt(length, 18446744073709551616)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 36)\n                        }\n                        let oldLen := sload(memberSlot)\n                        sstore(memberSlot, length)\n                        if lt(length, oldLen)\n                        {\n                            mstore(0, memberSlot)\n                            let data := keccak256(0, _33)\n                            let deleteStart := add(data, shr(5, add(length, 31)))\n                            let deleteEnd := add(data, shr(5, add(oldLen, 31)))\n                            let _43 := and(length, 31)\n                            if iszero(iszero(_43))\n                            {\n                                let _44 := not(0)\n                                let _45 := add(deleteStart, _44)\n                                sstore(_45, and(shr(shl(/** @src 2:12805:12820  \"Stages.NEW_FANS\" */ _29, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sub(_33, _43)), _44), sload(_45)))\n                            }\n                            let start := deleteStart\n                            for { } lt(start, deleteEnd) { start := add(start, _34) }\n                            { sstore(start, 0) }\n                        }\n                        let srcPtr := add(_42, _33)\n                        mstore(0, memberSlot)\n                        let data_1 := keccak256(0, _33)\n                        let fullSlots := shr(5, length)\n                        let i := 0\n                        for { } lt(i, fullSlots) { i := add(i, _34) }\n                        {\n                            let dstSlotValue := 0\n                            let j := 0\n                            for { } lt(j, _33) { j := add(j, _34) }\n                            {\n                                dstSlotValue := update_byte_slice_dynamic1(dstSlotValue, j, iszero(iszero(mload(srcPtr))))\n                                srcPtr := add(srcPtr, _33)\n                            }\n                            sstore(add(data_1, i), dstSlotValue)\n                        }\n                        let _46 := and(length, not(31))\n                        let spill := sub(length, _46)\n                        if iszero(eq(length, _46))\n                        {\n                            let dstSlotValue_1 := 0\n                            let j_1 := 0\n                            for { } lt(j_1, spill) { j_1 := add(j_1, _34) }\n                            {\n                                dstSlotValue_1 := update_byte_slice_dynamic1(dstSlotValue_1, j_1, iszero(iszero(mload(srcPtr))))\n                                srcPtr := add(srcPtr, _33)\n                            }\n                            sstore(add(data_1, fullSlots), dstSlotValue_1)\n                        }\n                        mstore(0, value_6)\n                        mstore(_33, /** @src 2:13061:13080  \"s_MaxAvailableSeats\" */ 0x09)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let dataSlot_2 := keccak256(0, _2)\n                        sstore(dataSlot_2, /** @src 2:13509:13537  \"s_MaxAvailableSeats[zone_]--\" */ decrement_uint256(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:13509:13537  \"s_MaxAvailableSeats[zone_]--\" */ dataSlot_2)))\n                        /// @src 2:13547:13568  \"numberOfCurrentFans++\"\n                        let _47 := increment_uint256(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:12805:12820  \"Stages.NEW_FANS\" */ _29))\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        sstore(/** @src 2:12805:12820  \"Stages.NEW_FANS\" */ _29, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _47)\n                        /// @src 2:13583:13627  \"SeasonPass_NewFan(fan_, numberOfCurrentFans)\"\n                        log3(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:13583:13627  \"SeasonPass_NewFan(fan_, numberOfCurrentFans)\" */ 0x21d3f636f7858c1a273768fd4a734f1d284edb19ab018d83636e6994ed0d6224, _32, _47)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x656417db {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_31688()\n                        let value_8 := calldataload(36)\n                        let value_9 := calldataload(68)\n                        let value_10 := calldataload(100)\n                        let value_11 := calldataload(132)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let value_12 := and(sload(/** @src 2:4935:4947  \"seasonStages\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_12, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 36)\n                        }\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        let expr_4 := /** @src 2:4935:4956  \"seasonStages < stage_\" */ lt(value_12, /** @src 2:10814:10833  \"Stages.SEAT_CHANGES\" */ 2)\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        if expr_4\n                        {\n                            expr_4 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1\n                        }\n                        /// @src 2:4934:5001  \"(seasonStages < stage_ && possibleAfter_) || seasonStages != stage_\"\n                        let expr_5 := expr_4\n                        if iszero(expr_4)\n                        {\n                            expr_5 := /** @src 2:4979:5001  \"seasonStages != stage_\" */ iszero(eq(value_12, /** @src 2:10814:10833  \"Stages.SEAT_CHANGES\" */ 2))\n                        }\n                        /// @src 2:4917:5075  \"if (...\"\n                        if expr_5\n                        {\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            let _48 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            mstore(_48, shl(224, 0xd22ecb3b))\n                            revert(_48, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        let _49 := sub(shl(160, 1), 1)\n                        let _50 := and(value0_1, _49)\n                        mstore(0, _50)\n                        let _51 := 32\n                        mstore(_51, /** @src 2:10855:10869  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:10851:10959  \"if (s_SeasonPasses[fanAddress_].seatId == 0) {...\"\n                        if /** @src 2:10855:10894  \"s_SeasonPasses[fanAddress_].seatId == 0\" */ iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:10855:10889  \"s_SeasonPasses[fanAddress_].seatId\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), 1)))\n                        /// @src 2:10851:10959  \"if (s_SeasonPasses[fanAddress_].seatId == 0) {...\"\n                        {\n                            /// @src 2:10917:10948  \"SeasonPass_FanHasNoSeasonPass()\"\n                            let _52 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:10917:10948  \"SeasonPass_FanHasNoSeasonPass()\"\n                            mstore(_52, shl(225, 0x2f3e2959))\n                            revert(_52, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, value_10)\n                        mstore(_51, /** @src 2:10972:10979  \"s_Seats\" */ 0x0b)\n                        /// @src 2:10968:11075  \"if (s_Seats[newSeatId_].seatOwner != address(0)) {...\"\n                        if /** @src 2:10972:11015  \"s_Seats[newSeatId_].seatOwner != address(0)\" */ iszero(iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ and(sload(keccak256(0, _2)), _49)))\n                        /// @src 2:10968:11075  \"if (s_Seats[newSeatId_].seatOwner != address(0)) {...\"\n                        {\n                            /// @src 2:11038:11064  \"SeasonPass_SeatIsNotFree()\"\n                            let _53 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:11038:11064  \"SeasonPass_SeatIsNotFree()\"\n                            mstore(_53, /** @src 2:13011:13037  \"SeasonPass_SeatIsNotFree()\" */ shl(224, 0x16d3efa7))\n                            /// @src 2:11038:11064  \"SeasonPass_SeatIsNotFree()\"\n                            revert(_53, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, value_11)\n                        mstore(_51, /** @src 2:11088:11107  \"s_MaxAvailableSeats\" */ 0x09)\n                        /// @src 2:11084:11185  \"if (s_MaxAvailableSeats[newZoneId_] == 0) {...\"\n                        if /** @src 2:11088:11124  \"s_MaxAvailableSeats[newZoneId_] == 0\" */ iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(keccak256(0, _2)))\n                        /// @src 2:11084:11185  \"if (s_MaxAvailableSeats[newZoneId_] == 0) {...\"\n                        {\n                            /// @src 2:11147:11174  \"SeasonPass_MaxSeatsInZone()\"\n                            let _54 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:11147:11174  \"SeasonPass_MaxSeatsInZone()\"\n                            mstore(_54, /** @src 2:13115:13142  \"SeasonPass_MaxSeatsInZone()\" */ shl(225, 0x6c8251ef))\n                            /// @src 2:11147:11174  \"SeasonPass_MaxSeatsInZone()\"\n                            revert(_54, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, _50)\n                        mstore(_51, /** @src 2:10855:10869  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(0, sload(/** @src 2:11219:11253  \"s_SeasonPasses[fanAddress_].seatId\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), 1)))\n                        mstore(_51, /** @src 2:10972:10979  \"s_Seats\" */ 0x0b)\n                        /// @src 2:11211:11273  \"s_Seats[s_SeasonPasses[fanAddress_].seatId].zone != oldZoneId_\"\n                        let _55 := eq(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:11211:11259  \"s_Seats[s_SeasonPasses[fanAddress_].seatId].zone\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), 1)), /** @src 2:11211:11273  \"s_Seats[s_SeasonPasses[fanAddress_].seatId].zone != oldZoneId_\" */ value_9)\n                        /// @src 2:11211:11337  \"s_Seats[s_SeasonPasses[fanAddress_].seatId].zone != oldZoneId_ ||...\"\n                        let expr_6 := /** @src 2:11211:11273  \"s_Seats[s_SeasonPasses[fanAddress_].seatId].zone != oldZoneId_\" */ iszero(_55)\n                        /// @src 2:11211:11337  \"s_Seats[s_SeasonPasses[fanAddress_].seatId].zone != oldZoneId_ ||...\"\n                        if _55\n                        {\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(0, _50)\n                            mstore(_51, /** @src 2:10855:10869  \"s_SeasonPasses\" */ 0x0a)\n                            /// @src 2:11211:11337  \"s_Seats[s_SeasonPasses[fanAddress_].seatId].zone != oldZoneId_ ||...\"\n                            expr_6 := /** @src 2:11289:11337  \"s_SeasonPasses[fanAddress_].seatId != oldSeatId_\" */ iszero(eq(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:11289:11323  \"s_SeasonPasses[fanAddress_].seatId\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), 1)), /** @src 2:11289:11337  \"s_SeasonPasses[fanAddress_].seatId != oldSeatId_\" */ value_8))\n                        }\n                        /// @src 2:11194:11414  \"if (...\"\n                        if expr_6\n                        {\n                            /// @src 2:11369:11403  \"SeasonPass_WrongInformationGiven()\"\n                            let _56 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:11369:11403  \"SeasonPass_WrongInformationGiven()\"\n                            mstore(_56, shl(225, 0x5768185f))\n                            revert(_56, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, value_8)\n                        mstore(_51, /** @src 2:10972:10979  \"s_Seats\" */ 0x0b)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _57 := keccak256(0, _2)\n                        let _58 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(_57, and(sload(_57), _58))\n                        mstore(0, value_9)\n                        mstore(_51, /** @src 2:11088:11107  \"s_MaxAvailableSeats\" */ 0x09)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let dataSlot_3 := keccak256(0, _2)\n                        sstore(dataSlot_3, /** @src 2:11475:11508  \"s_MaxAvailableSeats[oldZoneId_]++\" */ increment_uint256(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:11475:11508  \"s_MaxAvailableSeats[oldZoneId_]++\" */ dataSlot_3)))\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(0, value_10)\n                        mstore(_51, /** @src 2:10972:10979  \"s_Seats\" */ 0x0b)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _59 := keccak256(0, _2)\n                        sstore(_59, or(and(sload(_59), _58), _50))\n                        mstore(0, value_11)\n                        mstore(_51, /** @src 2:11088:11107  \"s_MaxAvailableSeats\" */ 0x09)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let dataSlot_4 := keccak256(0, _2)\n                        sstore(dataSlot_4, /** @src 2:11571:11604  \"s_MaxAvailableSeats[newZoneId_]--\" */ decrement_uint256(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:11571:11604  \"s_MaxAvailableSeats[newZoneId_]--\" */ dataSlot_4)))\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(0, _50)\n                        mstore(_51, /** @src 2:10855:10869  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        sstore(/** @src 2:11614:11648  \"s_SeasonPasses[fanAddress_].seatId\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), 1), value_10)\n                        /// @src 2:11676:11710  \"SeasonPass_ChangeSeat(fanAddress_)\"\n                        log2(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:11676:11710  \"SeasonPass_ChangeSeat(fanAddress_)\" */ 0xc7324aee87c9dfe69717d1eb6e1174b61b348523698e7e4a9f917ccb8f8f5dc3, _50)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x70b6947c {\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_13 := and(sload(/** @src 2:4935:4947  \"seasonStages\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_13, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        let expr_7 := /** @src 2:4935:4956  \"seasonStages < stage_\" */ lt(value_13, /** @src 2:12069:12084  \"Stages.NEW_FANS\" */ 3)\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        if expr_7\n                        {\n                            expr_7 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1\n                        }\n                        /// @src 2:4934:5001  \"(seasonStages < stage_ && possibleAfter_) || seasonStages != stage_\"\n                        let expr_8 := expr_7\n                        if iszero(expr_7)\n                        {\n                            expr_8 := /** @src 2:4979:5001  \"seasonStages != stage_\" */ iszero(eq(value_13, /** @src 2:12069:12084  \"Stages.NEW_FANS\" */ 3))\n                        }\n                        /// @src 2:4917:5075  \"if (...\"\n                        if expr_8\n                        {\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            let _60 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            mstore(_60, shl(224, 0xd22ecb3b))\n                            revert(_60, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        mstore(0, /** @src 2:12138:12148  \"msg.sender\" */ caller())\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(0x20, /** @src 2:12123:12137  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let dataSlot_5 := keccak256(0, _2)\n                        /// @src 2:12123:12161  \"s_SeasonPasses[msg.sender].seatId != 0\"\n                        let _61 := iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:12123:12156  \"s_SeasonPasses[msg.sender].seatId\" */ add(/** @src 2:12123:12149  \"s_SeasonPasses[msg.sender]\" */ dataSlot_5, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1)))\n                        /// @src 2:12123:12223  \"s_SeasonPasses[msg.sender].seatId != 0 ||...\"\n                        let expr_9 := /** @src 2:12123:12161  \"s_SeasonPasses[msg.sender].seatId != 0\" */ iszero(_61)\n                        /// @src 2:12123:12223  \"s_SeasonPasses[msg.sender].seatId != 0 ||...\"\n                        if _61\n                        {\n                            expr_9 := /** @src 2:12177:12223  \"s_SeasonPasses[msg.sender].idOfSeasonPass != 0\" */ iszero(iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(dataSlot_5)))\n                        }\n                        /// @src 2:12106:12293  \"if (...\"\n                        if expr_9\n                        {\n                            /// @src 2:12255:12282  \"SeasonPass_FanAddedBefore()\"\n                            let _62 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:12255:12282  \"SeasonPass_FanAddedBefore()\"\n                            mstore(_62, /** @src 2:12897:12924  \"SeasonPass_FanAddedBefore()\" */ shl(224, 0x75cf5997))\n                            /// @src 2:12255:12282  \"SeasonPass_FanAddedBefore()\"\n                            revert(_62, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        /// @src 2:12303:12396  \"if (msg.value < sympathizerFee) {...\"\n                        if /** @src 2:12307:12333  \"msg.value < sympathizerFee\" */ lt(/** @src 2:12307:12316  \"msg.value\" */ callvalue(), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:12319:12333  \"sympathizerFee\" */ 0x06))\n                        /// @src 2:12303:12396  \"if (msg.value < sympathizerFee) {...\"\n                        {\n                            /// @src 2:12356:12385  \"SeasonPass_NotEnoughETHSent()\"\n                            let _63 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:12356:12385  \"SeasonPass_NotEnoughETHSent()\"\n                            mstore(_63, shl(230, 13678421))\n                            revert(_63, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        let _64 := sload(1)\n                        /// @src 2:4396:4403  \"1000000\"\n                        let _65 := 0x0f4240\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let product := mul(_64, /** @src 2:4396:4403  \"1000000\" */ _65)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        if iszero(or(iszero(_64), eq(/** @src 2:4396:4403  \"1000000\" */ _65, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ div(product, _64))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 2:12462:12541  \"seasonNumber *...\"\n                        let expr_10 := checked_add_uint256(product, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(5))\n                        /// @src 2:4396:4403  \"1000000\"\n                        let sum_1 := add(expr_10, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1)\n                        /// @src 2:4396:4403  \"1000000\"\n                        if gt(expr_10, sum_1)\n                        {\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(0, 0x24)\n                        }\n                        mstore(0, /** @src 2:12138:12148  \"msg.sender\" */ caller())\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(0x20, /** @src 2:12123:12137  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        sstore(keccak256(0, _2), sum_1)\n                        /// @src 2:12567:12588  \"numberOfSympathizer++\"\n                        let _66 := increment_uint256(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(5))\n                        sstore(5, _66)\n                        /// @src 2:12603:12661  \"SeasonPass_NewSympathizer(msg.sender, numberOfSympathizer)\"\n                        log3(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:12603:12661  \"SeasonPass_NewSympathizer(msg.sender, numberOfSympathizer)\" */ 0x3c54732e566c2a9da22c2aa07c9e17e362623bf8e7abded1f8d8883761e3b54f, /** @src 2:12138:12148  \"msg.sender\" */ caller(), /** @src 2:12603:12661  \"SeasonPass_NewSympathizer(msg.sender, numberOfSympathizer)\" */ _66)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _67 := sload(0)\n                        sstore(0, and(_67, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ and(_67, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x7c786283 {\n                        if callvalue() { revert(0, 0) }\n                        let _68 := 32\n                        if slt(add(calldatasize(), not(3)), _68) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_31688()\n                        pop(allocate_and_zero_memory_struct_struct_SeasonPass())\n                        mstore(0, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(_68, /** @src 2:15998:16012  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let dataSlot_6 := keccak256(0, _2)\n                        let memPtr_3 := mload(_2)\n                        finalize_allocation_31698(memPtr_3)\n                        mstore(memPtr_3, sload(dataSlot_6))\n                        let _69 := 1\n                        let _70 := sload(add(dataSlot_6, 1))\n                        let _71 := add(memPtr_3, _68)\n                        mstore(_71, _70)\n                        let _72 := copy_array_from_storage_to_memory_array_bool_dyn(add(dataSlot_6, 2))\n                        let _73 := add(memPtr_3, _2)\n                        mstore(_73, _72)\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _68)\n                        let tail := add(memPos_3, 128)\n                        mstore(add(memPos_3, _68), mload(memPtr_3))\n                        mstore(add(memPos_3, _2), mload(_71))\n                        let memberValue0 := mload(_73)\n                        mstore(add(memPos_3, 96), 96)\n                        let pos := tail\n                        let length_1 := mload(memberValue0)\n                        mstore(tail, length_1)\n                        pos := add(memPos_3, 160)\n                        let srcPtr_1 := add(memberValue0, _68)\n                        let i_1 := 0\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, _69) }\n                        {\n                            mstore(pos, iszero(iszero(mload(srcPtr_1))))\n                            pos := add(pos, _68)\n                            srcPtr_1 := add(srcPtr_1, _68)\n                        }\n                        return(memPos_3, sub(pos, memPos_3))\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned_1 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, cleaned_1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x8f4a1ba4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(_3))\n                        mstore(32, /** @src 2:15811:15830  \"s_MaxAvailableSeats\" */ 0x09)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _74 := sload(keccak256(0, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _74)\n                        return(memPos_5, 32)\n                    }\n                    case 0x945e3472 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _75 := sload(/** @src 2:15021:15033  \"seasonNumber\" */ 0x01)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, _75)\n                        return(memPos_6, 32)\n                    }\n                    case 0x9b4c578d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let offset_1 := calldataload(_3)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(0, 0) }\n                        let _76 := calldataload(add(_3, offset_1))\n                        let _77 := array_allocation_size_array_int256_dyn(_76)\n                        let memPtr_4 := mload(_2)\n                        finalize_allocation(memPtr_4, _77)\n                        let dst_1 := memPtr_4\n                        mstore(memPtr_4, _76)\n                        let _78 := 0x20\n                        dst_1 := add(memPtr_4, _78)\n                        let _79 := 0xa0\n                        let srcEnd_1 := add(add(offset_1, mul(_76, 0xa0)), 36)\n                        if gt(srcEnd_1, calldatasize()) { revert(0, 0) }\n                        let src_1 := add(offset_1, 36)\n                        for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _79) }\n                        {\n                            if slt(sub(calldatasize(), src_1), _79) { revert(0, 0) }\n                            let memPtr_5 := mload(_2)\n                            finalize_allocation_31689(memPtr_5)\n                            mstore(memPtr_5, abi_decode_address(src_1))\n                            mstore(add(memPtr_5, _78), calldataload(add(src_1, _78)))\n                            mstore(add(memPtr_5, _2), calldataload(add(src_1, _2)))\n                            let _80 := 96\n                            mstore(add(memPtr_5, _80), calldataload(add(src_1, _80)))\n                            let _81 := 128\n                            mstore(add(memPtr_5, _81), calldataload(add(src_1, _81)))\n                            mstore(dst_1, memPtr_5)\n                            dst_1 := add(dst_1, _78)\n                        }\n                        let value_14 := calldataload(36)\n                        let _82 := iszero(iszero(value_14))\n                        if iszero(eq(value_14, _82)) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _83 := sload(_3)\n                        /// @src 2:5933:5937  \"true\"\n                        let _84 := 0x01\n                        /// @src 2:5915:6394  \"if (isDeleting == true) {...\"\n                        switch /** @src 2:5919:5937  \"isDeleting == true\" */ eq(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _82, /** @src 2:5933:5937  \"true\" */ _84)\n                        case /** @src 2:5915:6394  \"if (isDeleting == true) {...\" */ 0 {\n                            /// @src 2:6154:6160  \"uint i\"\n                            let var_i_2 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                            /// @src 2:6149:6262  \"for (uint i; i < seatInfo.length; i++) {...\"\n                            for { }\n                            /** @src 2:5933:5937  \"true\" */ _84\n                            /// @src 2:6154:6160  \"uint i\"\n                            {\n                                /// @src 2:6183:6186  \"i++\"\n                                var_i_2 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ add(/** @src 2:6183:6186  \"i++\" */ var_i_2, /** @src 2:5933:5937  \"true\" */ _84)\n                            }\n                            /// @src 2:6183:6186  \"i++\"\n                            {\n                                /// @src 2:6162:6181  \"i < seatInfo.length\"\n                                if iszero(lt(var_i_2, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:6166:6181  \"seatInfo.length\" */ memPtr_4)))\n                                /// @src 2:6162:6181  \"i < seatInfo.length\"\n                                { break }\n                                /// @src 2:6236:6247  \"seatInfo[i]\"\n                                let _85 := mload(memory_array_index_access_int256_dyn(memPtr_4, var_i_2))\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                let _86 := 96\n                                mstore(0, mload(/** @src 2:6214:6232  \"seatInfo[i].seatId\" */ add(/** @src 2:6214:6225  \"seatInfo[i]\" */ mload(memory_array_index_access_int256_dyn(memPtr_4, var_i_2)), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _86)))\n                                mstore(_78, /** @src 2:6206:6213  \"s_Seats\" */ 0x0b)\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                let dataSlot_7 := keccak256(0, _2)\n                                sstore(dataSlot_7, or(and(sload(dataSlot_7), shl(160, 0xffffffffffffffffffffffff)), and(mload(_85), sub(shl(160, 1), 1))))\n                                sstore(add(dataSlot_7, /** @src 2:5933:5937  \"true\" */ _84), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(add(_85, _78)))\n                                sstore(add(dataSlot_7, 2), mload(add(_85, _2)))\n                                sstore(add(dataSlot_7, 3), mload(add(_85, _86)))\n                                sstore(add(dataSlot_7, _3), mload(add(_85, 128)))\n                            }\n                            /// @src 2:6279:6294  \"seatInfo.length\"\n                            let expr_11 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:6279:6294  \"seatInfo.length\" */ memPtr_4)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            let _87 := sload(_3)\n                            /// @src 2:6275:6384  \"if (seatInfo.length != numberOfMaxSeats) {...\"\n                            if /** @src 2:6279:6314  \"seatInfo.length != numberOfMaxSeats\" */ iszero(eq(expr_11, _87))\n                            /// @src 2:6275:6384  \"if (seatInfo.length != numberOfMaxSeats) {...\"\n                            {\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                sstore(_3, /** @src 2:6334:6369  \"numberOfMaxSeats += seatInfo.length\" */ checked_add_uint256(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _87, expr_11))\n                            }\n                        }\n                        default /// @src 2:5915:6394  \"if (isDeleting == true) {...\"\n                        {\n                            /// @src 2:5958:5964  \"uint i\"\n                            let var_i_3 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                            /// @src 2:5953:6070  \"for (uint i; i < seatInfo.length; i++) {...\"\n                            for { }\n                            /** @src 2:5933:5937  \"true\" */ _84\n                            /// @src 2:5958:5964  \"uint i\"\n                            {\n                                /// @src 2:5987:5990  \"i++\"\n                                var_i_3 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ add(/** @src 2:5987:5990  \"i++\" */ var_i_3, /** @src 2:5933:5937  \"true\" */ _84)\n                            }\n                            /// @src 2:5987:5990  \"i++\"\n                            {\n                                /// @src 2:5966:5985  \"i < seatInfo.length\"\n                                if iszero(lt(var_i_3, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:5970:5985  \"seatInfo.length\" */ memPtr_4)))\n                                /// @src 2:5966:5985  \"i < seatInfo.length\"\n                                { break }\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                mstore(0, mload(/** @src 2:6018:6036  \"seatInfo[i].seatId\" */ add(/** @src 2:6018:6029  \"seatInfo[i]\" */ mload(memory_array_index_access_int256_dyn(memPtr_4, var_i_3)), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 96)))\n                                mstore(_78, /** @src 2:6010:6017  \"s_Seats\" */ 0x0b)\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                sstore(/** @src 2:6010:6051  \"s_Seats[seatInfo[i].seatId].rowSeatNumber\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, _2), _3), 0)\n                            }\n                            let _88 := mload(/** @src 2:6103:6118  \"seatInfo.length\" */ memPtr_4)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            let _89 := sload(_3)\n                            let diff := sub(_89, _88)\n                            if gt(diff, _89)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_3, 0x11)\n                                revert(0, 36)\n                            }\n                            sstore(_3, diff)\n                        }\n                        /// @src 2:6408:6513  \"SeasonPass_NumberOfSeatsModified(...\"\n                        log3(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:6408:6513  \"SeasonPass_NumberOfSeatsModified(...\" */ 0x77a6dd625818e34858e891b2d5fd349ffb267406c2493cb9eb89226a916b2ec9, _83, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(_3))\n                        return(0, 0)\n                    }\n                    case 0xb59dc09e {\n                        if callvalue() { revert(0, 0) }\n                        let _90 := 32\n                        if slt(add(calldatasize(), not(3)), _90) { revert(0, 0) }\n                        let offset_2 := calldataload(_3)\n                        let _91 := 0xffffffffffffffff\n                        if gt(offset_2, _91) { revert(0, 0) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                        let _92 := calldataload(add(_3, offset_2))\n                        let _93 := 36\n                        let _94 := array_allocation_size_array_int256_dyn(_92)\n                        let memPtr_6 := mload(_2)\n                        finalize_allocation(memPtr_6, _94)\n                        let dst_2 := memPtr_6\n                        mstore(memPtr_6, _92)\n                        dst_2 := add(memPtr_6, _90)\n                        let _95 := 5\n                        let srcEnd_2 := add(add(offset_2, shl(5, _92)), 36)\n                        if gt(srcEnd_2, calldatasize()) { revert(0, 0) }\n                        let src_2 := add(offset_2, 36)\n                        for { } lt(src_2, srcEnd_2) { src_2 := add(src_2, _90) }\n                        {\n                            let innerOffset := calldataload(src_2)\n                            if gt(innerOffset, _91) { revert(0, 0) }\n                            let _96 := add(offset_2, innerOffset)\n                            if iszero(slt(add(_96, 67), calldatasize())) { revert(0, 0) }\n                            let _97 := calldataload(add(_96, _93))\n                            let _98 := 68\n                            let _99 := array_allocation_size_array_int256_dyn(_97)\n                            let memPtr_7 := mload(_2)\n                            finalize_allocation(memPtr_7, _99)\n                            let dst_3 := memPtr_7\n                            mstore(memPtr_7, _97)\n                            dst_3 := add(memPtr_7, _90)\n                            let srcEnd_3 := add(add(_96, shl(_95, _97)), _98)\n                            if gt(srcEnd_3, calldatasize()) { revert(0, 0) }\n                            let src_3 := add(_96, _98)\n                            for { } lt(src_3, srcEnd_3) { src_3 := add(src_3, _90) }\n                            {\n                                mstore(dst_3, calldataload(src_3))\n                                dst_3 := add(dst_3, _90)\n                            }\n                            mstore(dst_2, memPtr_7)\n                            dst_2 := add(dst_2, _90)\n                        }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let value_15 := and(sload(/** @src 2:4935:4947  \"seasonStages\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_15, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 36)\n                        }\n                        /// @src 2:9836:9851  \"Stages.RENEWALS\"\n                        let _100 := 1\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        let expr_12 := /** @src 2:4935:4956  \"seasonStages < stage_\" */ lt(value_15, /** @src 2:9836:9851  \"Stages.RENEWALS\" */ _100)\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        if expr_12\n                        {\n                            expr_12 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                        }\n                        /// @src 2:4934:5001  \"(seasonStages < stage_ && possibleAfter_) || seasonStages != stage_\"\n                        let expr_13 := expr_12\n                        if iszero(expr_12)\n                        {\n                            expr_13 := /** @src 2:4979:5001  \"seasonStages != stage_\" */ iszero(eq(value_15, /** @src 2:9836:9851  \"Stages.RENEWALS\" */ _100))\n                        }\n                        /// @src 2:4917:5075  \"if (...\"\n                        if expr_13\n                        {\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            let _101 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            mstore(_101, shl(224, 0xd22ecb3b))\n                            revert(_101, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        /// @src 2:9875:9881  \"uint j\"\n                        let var_j := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                        /// @src 2:9870:10273  \"for (uint j; j < numberOfZones; j++) {...\"\n                        for { }\n                        /** @src 2:9836:9851  \"Stages.RENEWALS\" */ _100\n                        /// @src 2:9875:9881  \"uint j\"\n                        {\n                            /// @src 2:9902:9905  \"j++\"\n                            var_j := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ add(/** @src 2:9902:9905  \"j++\" */ var_j, /** @src 2:9836:9851  \"Stages.RENEWALS\" */ _100)\n                        }\n                        /// @src 2:9902:9905  \"j++\"\n                        {\n                            /// @src 2:9883:9900  \"j < numberOfZones\"\n                            if iszero(lt(var_j, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:9887:9900  \"numberOfZones\" */ 0x07)))\n                            /// @src 2:9883:9900  \"j < numberOfZones\"\n                            { break }\n                            /// @src 2:9926:9936  \"uint i = 0\"\n                            let var_i_4 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                            /// @src 2:9921:10151  \"for (uint i = 0; i < freeSeatIds_[j].length; i++) {...\"\n                            for { }\n                            /** @src 2:9836:9851  \"Stages.RENEWALS\" */ _100\n                            /// @src 2:9926:9936  \"uint i = 0\"\n                            {\n                                /// @src 2:9966:9969  \"i++\"\n                                var_i_4 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ add(/** @src 2:9966:9969  \"i++\" */ var_i_4, /** @src 2:9836:9851  \"Stages.RENEWALS\" */ _100)\n                            }\n                            /// @src 2:9966:9969  \"i++\"\n                            {\n                                /// @src 2:9938:9964  \"i < freeSeatIds_[j].length\"\n                                if iszero(lt(var_i_4, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:9942:9957  \"freeSeatIds_[j]\" */ mload(memory_array_index_access_int256_dyn(memPtr_6, var_j)))))\n                                /// @src 2:9938:9964  \"i < freeSeatIds_[j].length\"\n                                { break }\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                mstore(0, mload(/** @src 2:10001:10019  \"freeSeatIds_[j][i]\" */ memory_array_index_access_int256_dyn(/** @src 2:10001:10016  \"freeSeatIds_[j]\" */ mload(memory_array_index_access_int256_dyn(memPtr_6, var_j)), /** @src 2:10001:10019  \"freeSeatIds_[j][i]\" */ var_i_4)))\n                                /// @src 2:9993:10000  \"s_Seats\"\n                                let _102 := 0x0b\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                mstore(_90, /** @src 2:9993:10000  \"s_Seats\" */ _102)\n                                /// @src 2:9989:10137  \"if (s_Seats[freeSeatIds_[j][i]].seatOwner != address(0)) {...\"\n                                if /** @src 2:9993:10044  \"s_Seats[freeSeatIds_[j][i]].seatOwner != address(0)\" */ iszero(iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ and(sload(keccak256(0, _2)), sub(shl(160, 1), 1))))\n                                /// @src 2:9989:10137  \"if (s_Seats[freeSeatIds_[j][i]].seatOwner != address(0)) {...\"\n                                {\n                                    /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                    mstore(0, mload(/** @src 2:10076:10094  \"freeSeatIds_[j][i]\" */ memory_array_index_access_int256_dyn(/** @src 2:10076:10091  \"freeSeatIds_[j]\" */ mload(memory_array_index_access_int256_dyn(memPtr_6, var_j)), /** @src 2:10076:10094  \"freeSeatIds_[j][i]\" */ var_i_4)))\n                                    /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                    mstore(_90, /** @src 2:9993:10000  \"s_Seats\" */ _102)\n                                    /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                    let _103 := keccak256(0, _2)\n                                    sstore(_103, and(sload(_103), shl(160, 0xffffffffffffffffffffffff)))\n                                }\n                            }\n                            let length_2 := mload(/** @src 2:10189:10204  \"freeSeatIds_[j]\" */ mload(memory_array_index_access_int256_dyn(memPtr_6, var_j)))\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(0, var_j)\n                            mstore(_90, /** @src 2:10164:10183  \"s_MaxAvailableSeats\" */ 0x09)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            sstore(keccak256(0, _2), length_2)\n                            /// @src 2:10230:10262  \"SeasonPass_SetSeatAvailability()\"\n                            log1(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:10230:10262  \"SeasonPass_SetSeatAvailability()\" */ 0x33c7e8e9c337d719cb5b77e234738909700babd754500921e7e7c6def37eebd6)\n                        }\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xbbd0cdce {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value_16 := calldataload(36)\n                        if iszero(eq(value_16, and(value_16, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:1554:1555  \"_\"\n                        let _104 := fun_attendMatch_inner(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ calldataload(_3), /** @src 0:1554:1555  \"_\" */ value_16)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, iszero(iszero(_104)))\n                        return(memPos_7, 32)\n                    }\n                    case 0xbbd3b88c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _105 := sload(/** @src 2:15549:15562  \"numberOfZones\" */ 0x07)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _105)\n                        return(memPos_8, 32)\n                    }\n                    case 0xbf2e36bf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _106 := sload(/** @src 2:14915:14934  \"numberOfSympathizer\" */ 0x05)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, _106)\n                        return(memPos_9, 32)\n                    }\n                    case 0xc33f48fd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _107 := sload(/** @src 2:8104:8116  \"seasonStages\" */ 0x08)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let value_17 := and(_107, 0xff)\n                        if iszero(lt(value_17, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 2:8100:8206  \"if (seasonStages == Stages.REGULAR_SEASON) {...\"\n                        if /** @src 2:8104:8141  \"seasonStages == Stages.REGULAR_SEASON\" */ eq(value_17, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        /// @src 2:8100:8206  \"if (seasonStages == Stages.REGULAR_SEASON) {...\"\n                        {\n                            /// @src 2:8164:8195  \"SeasonPass_CalledInWrongStage()\"\n                            let _108 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:8164:8195  \"SeasonPass_CalledInWrongStage()\"\n                            mstore(_108, /** @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\" */ shl(224, 0xd22ecb3b))\n                            /// @src 2:8164:8195  \"SeasonPass_CalledInWrongStage()\"\n                            revert(_108, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        /// @src 2:4396:4403  \"1000000\"\n                        let sum_2 := add(value_17, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1)\n                        /// @src 2:4396:4403  \"1000000\"\n                        if gt(value_17, sum_2)\n                        {\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(0, 0x24)\n                        }\n                        if iszero(lt(sum_2, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 0x24)\n                        }\n                        let _109 := and(sum_2, 0xff)\n                        sstore(/** @src 2:8104:8116  \"seasonStages\" */ 0x08, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ or(and(_107, not(255)), _109))\n                        /// @src 2:8278:8319  \"SeasonPass_AdvancedTheStage(seasonStages)\"\n                        let _110 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                        /// @src 2:8278:8319  \"SeasonPass_AdvancedTheStage(seasonStages)\"\n                        log1(_110, sub(abi_encode_enum_Stages(_110, _109), _110), 0x71aab34a415059d532f4e24230661509e798c64363e2ccac9035e079eb4061ee)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xd5f8f346 {\n                        if callvalue() { revert(0, 0) }\n                        let _111 := abi_decode_array_address_dyn(calldatasize())\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let value_18 := and(sload(/** @src 2:4935:4947  \"seasonStages\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0xff)\n                        if iszero(lt(value_18, 5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 2:8769:8784  \"Stages.RENEWALS\"\n                        let _112 := 1\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        let expr_14 := /** @src 2:4935:4956  \"seasonStages < stage_\" */ lt(value_18, /** @src 2:8769:8784  \"Stages.RENEWALS\" */ 1)\n                        /// @src 2:4935:4974  \"seasonStages < stage_ && possibleAfter_\"\n                        if expr_14\n                        {\n                            expr_14 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                        }\n                        /// @src 2:4934:5001  \"(seasonStages < stage_ && possibleAfter_) || seasonStages != stage_\"\n                        let expr_15 := expr_14\n                        if iszero(expr_14)\n                        {\n                            expr_15 := /** @src 2:4979:5001  \"seasonStages != stage_\" */ iszero(eq(value_18, /** @src 2:8769:8784  \"Stages.RENEWALS\" */ 1))\n                        }\n                        /// @src 2:4917:5075  \"if (...\"\n                        if expr_15\n                        {\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            let _113 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:5033:5064  \"SeasonPass_CalledInWrongStage()\"\n                            mstore(_113, shl(224, 0xd22ecb3b))\n                            revert(_113, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3)\n                        }\n                        /// @src 2:8807:8819  \"fans_.length\"\n                        let expr_16 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:8807:8819  \"fans_.length\" */ _111)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _114 := sload(/** @src 2:8822:8837  \"numberOfMaxFans\" */ 0x02)\n                        /// @src 2:8803:8987  \"if (fans_.length > numberOfMaxFans) {...\"\n                        if /** @src 2:8807:8837  \"fans_.length > numberOfMaxFans\" */ gt(expr_16, _114)\n                        /// @src 2:8803:8987  \"if (fans_.length > numberOfMaxFans) {...\"\n                        {\n                            /// @src 2:8860:8976  \"SeasonPass_MoreSeasonPassesThanExpected(...\"\n                            let _115 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 2:8860:8976  \"SeasonPass_MoreSeasonPassesThanExpected(...\"\n                            mstore(_115, shl(224, 0xb51b9281))\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(/** @src 2:8860:8976  \"SeasonPass_MoreSeasonPassesThanExpected(...\" */ add(_115, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3), expr_16)\n                            mstore(add(/** @src 2:8860:8976  \"SeasonPass_MoreSeasonPassesThanExpected(...\" */ _115, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 36), _114)\n                            /// @src 2:8860:8976  \"SeasonPass_MoreSeasonPassesThanExpected(...\"\n                            revert(_115, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 68)\n                        }\n                        /// @src 2:9001:9007  \"uint i\"\n                        let var_i_5 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n                        /// @src 2:8996:9104  \"for (uint i; i < fans_.length; i++) {...\"\n                        for { }\n                        /** @src 2:8769:8784  \"Stages.RENEWALS\" */ _112\n                        /// @src 2:9001:9007  \"uint i\"\n                        {\n                            /// @src 2:9027:9030  \"i++\"\n                            var_i_5 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ add(/** @src 2:9027:9030  \"i++\" */ var_i_5, /** @src 2:8769:8784  \"Stages.RENEWALS\" */ _112)\n                        }\n                        /// @src 2:9027:9030  \"i++\"\n                        {\n                            /// @src 2:9009:9025  \"i < fans_.length\"\n                            if iszero(lt(var_i_5, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:9013:9025  \"fans_.length\" */ _111)))\n                            /// @src 2:9009:9025  \"i < fans_.length\"\n                            { break }\n                            /// @src 2:4396:4403  \"1000000\"\n                            let sum_3 := add(var_i_5, /** @src 2:8769:8784  \"Stages.RENEWALS\" */ _112)\n                            /// @src 2:4396:4403  \"1000000\"\n                            if gt(var_i_5, sum_3)\n                            {\n                                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_3, 0x11)\n                                revert(0, 0x24)\n                            }\n                            mstore(0, and(mload(/** @src 2:9061:9069  \"fans_[i]\" */ memory_array_index_access_int256_dyn(_111, var_i_5)), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 2:9046:9060  \"s_SeasonPasses\" */ 0x0a)\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            sstore(keccak256(0, _2), sum_3)\n                        }\n                        sstore(/** @src 2:9113:9147  \"numberOfCurrentFans = fans_.length\" */ 0x03, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(/** @src 2:9135:9147  \"fans_.length\" */ _111))\n                        /// @src 2:9162:9203  \"SeasonPass_UpdatedNumberOfSeasonPassIds()\"\n                        log1(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 2:9162:9203  \"SeasonPass_UpdatedNumberOfSeasonPassIds()\" */ 0xf09da8ee8132f2040bb5fd71c05e9d4635de62be74f8660e709ff94f6e45565f)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xd7430dbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(_3))\n                        mstore(32, /** @src 2:16262:16269  \"s_Seats\" */ 0x0b)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let cleaned_2 := and(sload(keccak256(0, _2)), sub(shl(160, 1), 1))\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, cleaned_2)\n                        return(memPos_10, 32)\n                    }\n                    case 0xe60657aa {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _116 := sload(_3)\n                        let memPos_11 := mload(_2)\n                        mstore(memPos_11, _116)\n                        return(memPos_11, 32)\n                    }\n                    case 0xec4828af {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_19 := and(sload(/** @src 2:15648:15660  \"seasonStages\" */ 0x08), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0xff)\n                        let memPos_12 := mload(_2)\n                        return(memPos_12, sub(abi_encode_enum_Stages(memPos_12, value_19), memPos_12))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_31688()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let _117 := sub(shl(160, 1), 1)\n                        let _118 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_3, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _117)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _118)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            let _119 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(_2)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(_119, shl(224, 0x1e4fbdf7))\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            mstore(/** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_119, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _3), 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(_119, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 36)\n                        }\n                        let _120 := sload(0)\n                        sstore(0, or(and(_120, shl(160, 0xffffffffffffffffffffffff)), _118))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ and(_120, _117), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _118)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xf85f409e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _121 := sload(/** @src 2:15226:15241  \"numberOfMaxFans\" */ 0x02)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let memPos_13 := mload(_2)\n                        mstore(memPos_13, _121)\n                        return(memPos_13, 32)\n                    }\n                    case 0xf9cdcc2e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _122 := sload(/** @src 2:15122:15136  \"sympathizerFee\" */ 0x06)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let memPos_14 := mload(_2)\n                        mstore(memPos_14, _122)\n                        return(memPos_14, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address_31688() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address(offset) -> value\n            {\n                value := calldataload(offset)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_31689(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_31698(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_int256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_decode_array_address_dyn(dataEnd) -> value0\n            {\n                let _1 := 32\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let offset := calldataload(4)\n                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                if iszero(slt(add(offset, 35), dataEnd))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                let _2 := calldataload(add(4, offset))\n                let _3 := array_allocation_size_array_int256_dyn(_2)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                let dst := memPtr\n                mstore(memPtr, _2)\n                dst := add(memPtr, 32)\n                let srcEnd := add(add(offset, shl(5, _2)), 36)\n                if gt(srcEnd, dataEnd)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                let src := add(offset, 36)\n                for { } lt(src, srcEnd) { src := add(src, _1) }\n                {\n                    mstore(dst, abi_decode_address(src))\n                    dst := add(dst, _1)\n                }\n                value0 := memPtr\n            }\n            function abi_encode_enum_Stages(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                if iszero(lt(value0, 5))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0x24)\n                }\n                mstore(headStart, value0)\n            }\n            /// @ast-id 1167 @src 2:14401:14569  \"function isEven(uint256 seasonNumber_) public pure returns (bool) {...\"\n            function fun_isEven(var_seasonNumber) -> var\n            {\n                /// @src 2:14477:14541  \"if (seasonNumber_ % 2 == 0) {...\"\n                if /** @src 2:14481:14503  \"seasonNumber_ % 2 == 0\" */ iszero(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ and(var_seasonNumber, 1))\n                /// @src 2:14477:14541  \"if (seasonNumber_ % 2 == 0) {...\"\n                {\n                    /// @src 2:14519:14530  \"return true\"\n                    var := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 1\n                    /// @src 2:14519:14530  \"return true\"\n                    leave\n                }\n                /// @src 2:14550:14562  \"return false\"\n                var := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n            function memory_array_index_access_int256_dyn_31751(baseRef) -> addr\n            {\n                if iszero(mload(baseRef))\n                {\n                    mstore(/** @src 2:14019:14020  \"0\" */ 0x00, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(/** @src 2:14019:14020  \"0\" */ 0x00, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0x24)\n                }\n                addr := add(baseRef, 32)\n            }\n            function memory_array_index_access_int256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function allocate_and_zero_memory_struct_struct_SeasonPass() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_31698(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                mstore(add(memPtr_1, 64), 96)\n            }\n            function update_byte_slice_dynamic1(value, shiftBytes, toInsert) -> result\n            {\n                let shiftBits := shl(3, shiftBytes)\n                result := or(and(value, not(shl(shiftBits, 255))), shl(shiftBits, and(toInsert, 255)))\n            }\n            function decrement_uint256(value) -> ret\n            {\n                if iszero(value)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, not(0))\n            }\n            /// @src 2:4396:4403  \"1000000\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_array_bool_dyn(slot) -> memPtr\n            {\n                let _1 := 64\n                memPtr := mload(64)\n                let pos := memPtr\n                let length := sload(slot)\n                mstore(memPtr, length)\n                let _2 := 0x20\n                pos := add(memPtr, _2)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ slot)\n                let srcPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ _2)\n                let itemCounter := /** @src -1:-1:-1 */ 0\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                for { }\n                lt(add(itemCounter, 31), length)\n                {\n                    itemCounter := add(itemCounter, _2)\n                }\n                {\n                    let data := sload(srcPtr)\n                    mstore(pos, iszero(iszero(and(data, 0xff))))\n                    mstore(add(pos, _2), iszero(iszero(and(shr(8, data), 0xff))))\n                    mstore(add(pos, _1), iszero(iszero(and(shr(16, data), 0xff))))\n                    let _3 := 96\n                    mstore(add(pos, _3), iszero(iszero(and(shr(24, data), 0xff))))\n                    let _4 := 128\n                    mstore(add(pos, _4), iszero(iszero(and(shr(_2, data), 0xff))))\n                    let _5 := 160\n                    mstore(add(pos, _5), iszero(iszero(and(shr(40, data), 0xff))))\n                    let _6 := 192\n                    mstore(add(pos, _6), iszero(iszero(and(shr(48, data), 0xff))))\n                    mstore(add(pos, 224), iszero(iszero(and(shr(56, data), 0xff))))\n                    mstore(add(pos, 256), iszero(iszero(and(shr(_1, data), 0xff))))\n                    mstore(add(pos, 288), iszero(iszero(and(shr(72, data), 0xff))))\n                    mstore(add(pos, 320), iszero(iszero(and(shr(80, data), 0xff))))\n                    mstore(add(pos, 352), iszero(iszero(and(shr(88, data), 0xff))))\n                    mstore(add(pos, 384), iszero(iszero(and(shr(_3, data), 0xff))))\n                    mstore(add(pos, 416), iszero(iszero(and(shr(104, data), 0xff))))\n                    mstore(add(pos, 448), iszero(iszero(and(shr(112, data), 0xff))))\n                    mstore(add(pos, 480), iszero(iszero(and(shr(120, data), 0xff))))\n                    mstore(add(pos, 512), iszero(iszero(and(shr(_4, data), 0xff))))\n                    mstore(add(pos, 544), iszero(iszero(and(shr(136, data), 0xff))))\n                    mstore(add(pos, 576), iszero(iszero(and(shr(144, data), 0xff))))\n                    mstore(add(pos, 608), iszero(iszero(and(shr(152, data), 0xff))))\n                    mstore(add(pos, 640), iszero(iszero(and(shr(_5, data), 0xff))))\n                    mstore(add(pos, 672), iszero(iszero(and(shr(168, data), 0xff))))\n                    mstore(add(pos, 704), iszero(iszero(and(shr(176, data), 0xff))))\n                    mstore(add(pos, 736), iszero(iszero(and(shr(184, data), 0xff))))\n                    mstore(add(pos, 768), iszero(iszero(and(shr(_6, data), 0xff))))\n                    mstore(add(pos, 800), iszero(iszero(and(shr(200, data), 0xff))))\n                    mstore(add(pos, 832), iszero(iszero(and(shr(208, data), 0xff))))\n                    mstore(add(pos, 864), iszero(iszero(and(shr(216, data), 0xff))))\n                    mstore(add(pos, 896), iszero(iszero(and(shr(224, data), 0xff))))\n                    mstore(add(pos, 928), iszero(iszero(and(shr(232, data), 0xff))))\n                    mstore(add(pos, 960), iszero(iszero(and(shr(240, data), 0xff))))\n                    mstore(add(pos, 992), iszero(iszero(shr(248, data))))\n                    pos := add(pos, 1024)\n                    srcPtr := add(srcPtr, 1)\n                }\n                let data_1 := sload(srcPtr)\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(data_1, 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(8, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(16, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(24, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(_2, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(40, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(48, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(56, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(64, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(72, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(80, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(88, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(96, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(104, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(112, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(120, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(128, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(136, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(144, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(152, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(160, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(168, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(176, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(184, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(192, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(200, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(208, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(216, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(224, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(232, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(and(shr(240, data_1), 0xff))))\n                    pos := add(pos, _2)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    mstore(pos, iszero(iszero(shr(248, data_1))))\n                    pos := add(pos, _2)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            /// @src 2:13791:14395  \"function attendMatch(...\"\n            function fun_attendMatch_inner(var_match, var_fan) -> var\n            {\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                let _1 := and(var_fan, sub(shl(160, 1), 1))\n                mstore(0, _1)\n                let _2 := 0x20\n                mstore(_2, /** @src 2:13928:13942  \"s_SeasonPasses\" */ 0x0a)\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                let converted := copy_array_from_storage_to_memory_array_bool_dyn(/** @src 2:13928:13969  \"s_SeasonPasses[fan_].matchesGoneToStadium\" */ add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, 0x40), /** @src 2:13928:13969  \"s_SeasonPasses[fan_].matchesGoneToStadium\" */ 2))\n                /// @src 2:13983:14046  \"!aux[match_] || (match_ == 1 && aux[0] != isEven(seasonNumber))\"\n                let expr := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ iszero(mload(/** @src 2:13984:13995  \"aux[match_]\" */ memory_array_index_access_int256_dyn(converted, var_match)))\n                /// @src 2:13983:14046  \"!aux[match_] || (match_ == 1 && aux[0] != isEven(seasonNumber))\"\n                if /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ iszero(expr)\n                /// @src 2:13983:14046  \"!aux[match_] || (match_ == 1 && aux[0] != isEven(seasonNumber))\"\n                {\n                    /// @src 2:14000:14045  \"match_ == 1 && aux[0] != isEven(seasonNumber)\"\n                    let expr_1 := /** @src 2:14000:14011  \"match_ == 1\" */ eq(var_match, /** @src 2:14010:14011  \"1\" */ 0x01)\n                    /// @src 2:14000:14045  \"match_ == 1 && aux[0] != isEven(seasonNumber)\"\n                    if expr_1\n                    {\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let cleaned := iszero(iszero(mload(/** @src 2:14015:14021  \"aux[0]\" */ memory_array_index_access_int256_dyn_31751(converted))))\n                        /// @src 2:14000:14045  \"match_ == 1 && aux[0] != isEven(seasonNumber)\"\n                        expr_1 := /** @src 2:14015:14045  \"aux[0] != isEven(seasonNumber)\" */ iszero(eq(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ cleaned, iszero(iszero(/** @src 2:14025:14045  \"isEven(seasonNumber)\" */ fun_isEven(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:14010:14011  \"1\" */ 0x01))))))\n                    }\n                    /// @src 2:13983:14046  \"!aux[match_] || (match_ == 1 && aux[0] != isEven(seasonNumber))\"\n                    expr := expr_1\n                }\n                /// @src 2:13979:14367  \"if (!aux[match_] || (match_ == 1 && aux[0] != isEven(seasonNumber))) {...\"\n                if expr\n                {\n                    /// @src 2:14076:14077  \"1\"\n                    let _3 := 0x01\n                    /// @src 2:14062:14332  \"if (match_ == 1) {...\"\n                    switch /** @src 2:14066:14077  \"match_ == 1\" */ eq(var_match, /** @src 2:14076:14077  \"1\" */ _3)\n                    case /** @src 2:14062:14332  \"if (match_ == 1) {...\" */ 0 {\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(0, _1)\n                        mstore(_2, /** @src 2:13928:13942  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:14261:14302  \"s_SeasonPasses[fan_].matchesGoneToStadium\"\n                        let _4 := add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, 0x40), /** @src 2:13928:13969  \"s_SeasonPasses[fan_].matchesGoneToStadium\" */ 2)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        if iszero(lt(var_match, sload(_4)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        mstore(0, _4)\n                        let data := keccak256(0, _2)\n                        let slot := add(data, shr(5, var_match))\n                        let _5 := sload(slot)\n                        let shiftBits := and(shl(3, var_match), 248)\n                        sstore(slot, or(and(_5, not(shl(shiftBits, 255))), shl(shiftBits, /** @src 2:14076:14077  \"1\" */ _3)))\n                    }\n                    default /// @src 2:14062:14332  \"if (match_ == 1) {...\"\n                    {\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        if iszero(lt(/** @src 2:14076:14077  \"1\" */ _3, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(converted)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        mstore(add(converted, 0x40), /** @src 2:14076:14077  \"1\" */ _3)\n                        /// @src 2:14137:14157  \"isEven(seasonNumber)\"\n                        let _6 := fun_isEven(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sload(/** @src 2:14076:14077  \"1\" */ _3))\n                        /// @src 2:14128:14157  \"aux[0] = isEven(seasonNumber)\"\n                        let _7 := memory_array_index_access_int256_dyn_31751(converted)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        mstore(_7, iszero(iszero(_6)))\n                        mstore(0, _1)\n                        mstore(_2, /** @src 2:13928:13942  \"s_SeasonPasses\" */ 0x0a)\n                        /// @src 2:14175:14216  \"s_SeasonPasses[fan_].matchesGoneToStadium\"\n                        let _8 := add(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ keccak256(0, 0x40), /** @src 2:13928:13969  \"s_SeasonPasses[fan_].matchesGoneToStadium\" */ 2)\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        let length := mload(converted)\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        if gt(length, 18446744073709551616)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let oldLen := sload(_8)\n                        sstore(_8, length)\n                        if lt(length, oldLen)\n                        {\n                            mstore(0, _8)\n                            let data_1 := keccak256(0, _2)\n                            let deleteStart := add(data_1, shr(5, add(length, 31)))\n                            let deleteEnd := add(data_1, shr(5, add(oldLen, 31)))\n                            let _9 := and(length, 31)\n                            if iszero(iszero(_9))\n                            {\n                                let _10 := not(0)\n                                let _11 := add(deleteStart, _10)\n                                sstore(_11, and(shr(shl(3, sub(_2, _9)), _10), sload(_11)))\n                            }\n                            let start := deleteStart\n                            for { }\n                            lt(start, deleteEnd)\n                            {\n                                start := add(start, /** @src 2:14076:14077  \"1\" */ _3)\n                            }\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            { sstore(start, 0) }\n                        }\n                        let srcPtr := add(converted, _2)\n                        mstore(0, _8)\n                        let data_2 := keccak256(0, _2)\n                        let fullSlots := shr(5, length)\n                        let i := 0\n                        for { }\n                        lt(i, fullSlots)\n                        {\n                            i := add(i, /** @src 2:14076:14077  \"1\" */ _3)\n                        }\n                        /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                        {\n                            let dstSlotValue := 0\n                            let j := 0\n                            for { }\n                            lt(j, _2)\n                            {\n                                j := add(j, /** @src 2:14076:14077  \"1\" */ _3)\n                            }\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            {\n                                dstSlotValue := update_byte_slice_dynamic1(dstSlotValue, j, iszero(iszero(mload(srcPtr))))\n                                srcPtr := add(srcPtr, _2)\n                            }\n                            sstore(add(data_2, i), dstSlotValue)\n                        }\n                        let _12 := and(length, not(31))\n                        let spill := sub(length, _12)\n                        if iszero(eq(length, _12))\n                        {\n                            let dstSlotValue_1 := 0\n                            let j_1 := 0\n                            for { }\n                            lt(j_1, spill)\n                            {\n                                j_1 := add(j_1, /** @src 2:14076:14077  \"1\" */ _3)\n                            }\n                            /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                            {\n                                dstSlotValue_1 := update_byte_slice_dynamic1(dstSlotValue_1, j_1, iszero(iszero(mload(srcPtr))))\n                                srcPtr := add(srcPtr, _2)\n                            }\n                            sstore(add(data_2, fullSlots), dstSlotValue_1)\n                        }\n                    }\n                    /// @src 2:14345:14356  \"return true\"\n                    var := /** @src 2:14076:14077  \"1\" */ _3\n                    /// @src 2:14345:14356  \"return true\"\n                    leave\n                }\n                /// @src 2:14376:14388  \"return false\"\n                var := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 0\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                let cleaned := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ cleaned, /** @src 1:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    let _1 := /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ mload(64)\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(_1, shl(224, 0x118cdaa7))\n                    /// @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 1:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(_1, /** @src 2:329:16483  \"contract SeasonPassManager is Ownable {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220d7c492cf34a0898ca9f95959b987bde61d25a6f1bd1ee509f059dad8576850cd64736f6c63430008180033\"\n    }\n}\n",
        "hash": "010003c35e70c72f276ce86d94f833880fd1dfcbe317a640cc890c024154e730",
        "factoryDependencies": {}
      }
    },
    "src/contracts/TicketManager.sol": {
      "TicketManager": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "seasonPassManager_",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TicketManager_ForbiddenAccess",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TicketManager_MaxSeatsInZone",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "length",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "maxFans",
                "type": "uint256"
              }
            ],
            "name": "TicketManager_MoreSeasonPassesThanExpected",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TicketManager_NotEnoughETHSent",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TicketManager_NotOwnerOfSeasonPass",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TicketManager_SeatNotPossibleToFree",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TicketManager_WrongInformationGiven",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "numberOfCurrentMatch",
                "type": "uint256"
              }
            ],
            "name": "TicketManager_AdvancedToNextMatch",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "seatId",
                "type": "uint256"
              }
            ],
            "name": "TicketManager_BoughtTicket",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "seatId",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "zone",
                "type": "uint256"
              }
            ],
            "name": "TicketManager_FreedSeat",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "TicketManager_SetNewSeason",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256[]",
                "name": "prizes",
                "type": "uint256[]"
              }
            ],
            "name": "TicketManager_TicketPrizesChanged",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint256[]",
                "name": "newPrices",
                "type": "uint256[]"
              }
            ],
            "name": "advanceMatch",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "seatId_",
                "type": "uint256"
              }
            ],
            "name": "buyTicket",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "seatOwner",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "zone",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "row",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "seatId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "rowSeatNumber",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct SeasonPassManager.Seat",
                "name": "",
                "type": "tuple"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "seatId_",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "buyer",
                "type": "address"
              }
            ],
            "name": "buyTicketFromWeb",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "seatOwner",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "zone",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "row",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "seatId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "rowSeatNumber",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct SeasonPassManager.Seat",
                "name": "",
                "type": "tuple"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "freeTheSeat",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "seatId_",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "owner_",
                "type": "address"
              }
            ],
            "name": "freeTheSeatFromWeb",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "setNewSeason",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seasonPassManager_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketManager_ForbiddenAccess\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketManager_MaxSeatsInZone\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFans\",\"type\":\"uint256\"}],\"name\":\"TicketManager_MoreSeasonPassesThanExpected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketManager_NotEnoughETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketManager_NotOwnerOfSeasonPass\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketManager_SeatNotPossibleToFree\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TicketManager_WrongInformationGiven\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfCurrentMatch\",\"type\":\"uint256\"}],\"name\":\"TicketManager_AdvancedToNextMatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"}],\"name\":\"TicketManager_BoughtTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"zone\",\"type\":\"uint256\"}],\"name\":\"TicketManager_FreedSeat\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"TicketManager_SetNewSeason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256[]\",\"name\":\"prizes\",\"type\":\"uint256[]\"}],\"name\":\"TicketManager_TicketPrizesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"newPrices\",\"type\":\"uint256[]\"}],\"name\":\"advanceMatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seatId_\",\"type\":\"uint256\"}],\"name\":\"buyTicket\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seatOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zone\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"row\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rowSeatNumber\",\"type\":\"uint256\"}],\"internalType\":\"struct SeasonPassManager.Seat\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seatId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"buyTicketFromWeb\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seatOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"zone\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"row\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seatId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rowSeatNumber\",\"type\":\"uint256\"}],\"internalType\":\"struct SeasonPassManager.Seat\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freeTheSeat\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seatId_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"freeTheSeatFromWeb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setNewSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Carlos Alba\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Smart Contract that manages a season pass ticket for live events.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract uses Blockchain technology to manage a the ticket section of the match\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/TicketManager.sol\":\"TicketManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/contracts/SeasonPassManager.sol\":{\"keccak256\":\"0x36ea5e0d83943eb1d75bcbe1e59460d4f74e564935d8972956012de64f638d20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee190fcaef3dd07b66649bf28eaa9352a91c1926ca4269dfc2e4d9063b9f4529\",\"dweb:/ipfs/Qma3bUJeGSZa5s4eEh2b8T75Ei4QQujy3gVhHBccZz4EU6\"]},\"src/contracts/TicketManager.sol\":{\"keccak256\":\"0x0e75769ad9f96df72fb541b2cace7a4eac6307c06cf24cb086cfaf316c092a41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a787f67498ce38c0f689f0f290cca964fb3fce11f8aa9b7c24c61b8f22382465\",\"dweb:/ipfs/QmTWii6pSaJK2ZstD3Z5wpFEG8jvaeCdvzQkRWejtX9CxX\"]}},\"version\":1}",
          "solc_version": "0.8.24",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.0"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TicketManager.sol:TicketManager\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.le\t@.BB0_15\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.le\t@.BB0_21\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_125\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.eq\t@.BB0_154\n\tsub.s!\t@CPI0_13[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r2\n\tsload\tr2, r4\n\tadd\t@CPI0_21[0], r0, r2\n\tst.1\t128, r2\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t132, r2\n\tcontext.gas_left\tr5\n\tand\t@CPI0_2[0], r4, r2\n\tsub.s!\t4, r2, r4\n\tadd\tr2, r0, stack-[6]\n\tjump.ne\t@.BB0_165\n\tptr.add\tr1, r3, r1\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_171\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t159, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_227\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_227:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r3\n\tsub.s!\t@CPI0_2[0], r3, r1\n\tjump.le\t@.BB0_9\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_15:\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.gt\t@.BB0_18\n\tsub.s!\t@CPI0_19[0], r2, r4\n\tjump.eq\t@.BB0_26\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r3\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tst.1\t192, r0\n\tst.1\t224, r0\n\tst.1\t256, r0\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t288, r1\n\tadd\tr3, r0, stack-[6]\n\tst.1\t292, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_60\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t160, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tjump\t@.BB0_70\n.BB0_9:\n\tcontext.caller\tr6\n\tsub!\tr6, r0, r1\n\tjump.ne\t@.BB0_11\n\tld.1\t64, r1\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_42[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_21:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_89\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_2[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_97\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_100\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t160, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tjump\t@.BB0_110\n.BB0_11:\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tr3, r0, stack-[6]\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_4[0], r1, r1\n\tand\t@CPI0_2[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t1, r0, r1\n\tsstore\tr1, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_125:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tadd\t@CPI0_25[0], r0, r5\n\tsub!\tr4, r3, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_25[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_25[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r5\n\tsub.s!\t@CPI0_34[0], r5, r4\n\tjump.ge\t@.BB0_130\n\tshl.s\t5, r5, r4\n\tadd\t191, r4, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_26[0], r6, r7\n\tjump.gt\t@.BB0_130\n\tst.1\t64, r6\n\tst.1\t128, r5\n\tadd\t36, r2, r2\n\tadd\tr4, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r3\n\tjump.eq\t@.BB0_136\n\tadd\t160, r0, r3\n.BB0_135:\n\tptr.add\tr1, r2, r5\n\tld\tr5, r5\n\tst.1.inc\tr3, r5, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB0_135\n.BB0_136:\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_137\n\tadd\t1, r0, r3\n\tsload\tr3, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_140\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_49\n.BB0_154:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r6\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_158\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_161\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r0\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_26:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r6\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI0_2[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t288, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n\tst.1\t160, r0\n\tst.1\t192, r0\n\tst.1\t224, r0\n\tst.1\t256, r0\n\tcontext.caller\tr1\n\tsload\tr0, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_30\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t288, r1\n\tst.1\t292, r6\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_33\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t160, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tjump\t@.BB0_43\n.BB0_82:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_84\n\tand\t@CPI0_3[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_124\n.BB0_89:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr1\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_91\n\tadd\t1, r0, r3\n\tsstore\tr3, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_41[0], r0, r4\n\tjump\t@.BB0_124\n.BB0_165:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr1, r0, r5\n\tshl.s\t192, r5, r1\n\tor\t@CPI0_22[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_166\n.BB0_171:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_225\n\tadd\tr0, r0, r5\n.BB0_173:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_173\n.BB0_225:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_175\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_175:\n\tadd\t159, r3, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_23[0], r1, r4\n\tsub.s!\t@CPI0_24[0], r4, r4\n\tjump.ge\t@.BB0_176\n.BB0_130:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_49:\n\tst.1\t4, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_60:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t160, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_220\n\tadd\tr0, r0, r7\n.BB0_62:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t288, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_62\n.BB0_220:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_64\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t288, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_64:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_65\n.BB0_70:\n\tadd\t31, r4, r1\n\tand\t480, r1, r1\n\tadd\t288, r1, r5\n\tst.1\t64, r5\n\tsub.s!\t160, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\t448, r1, r2\n\tst.1\t64, r2\n\tld.1\t288, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\tr5, r2\n\tadd\t320, r1, r3\n\tld.1\t320, r2\n\tst.1\tr3, r2\n\tadd\t352, r1, r3\n\tld.1\t352, r4\n\tst.1\tr3, r4\n\tadd\t384, r1, r3\n\tld.1\t384, r4\n\tst.1\tr3, r4\n\tadd\t416, r1, r1\n\tld.1\t416, r3\n\tst.1\tr1, r3\n\tadd\t4, r0, r3\n\tsload\tr3, r4\n\tsub!\tr2, r4, r4\n\tjump.ge\t@.BB0_48\n\tst.1\t0, r3\n\tadd\t@CPI0_35[0], r2, r2\n\tsload\tr2, r2\n\tcontext.get_context_u128\tr3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_75\n\tld.1\t64, r1\n\tadd\t@CPI0_44[0], r0, r2\n\tjump\t@.BB0_54\n.BB0_176:\n\tadd\t@CPI0_25[0], r0, r4\n\tsub.s!\t32, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_25[0], r3, r6\n\tsub!\tr6, r0, r7\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_25[0], r6, r6\n\tadd.ne\tr5, r0, r4\n\tst.1\t64, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1\t128, r6\n\tsub.s!\t@CPI0_26[0], r6, r4\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r5\n\tadd\t128, r6, r7\n\tsub\tr5, r7, r4\n\tadd\t@CPI0_25[0], r0, r8\n\tsub.s!\t96, r4, r9\n\tadd\tr0, r0, r9\n\tadd.lt\tr8, r0, r9\n\tand\t@CPI0_25[0], r4, r4\n\tsub!\tr4, r0, r10\n\tadd.le\tr0, r0, r8\n\tsub.s!\t@CPI0_25[0], r4, r4\n\tadd.ne\tr9, r0, r8\n\tsub!\tr8, r0, r4\n\tjump.ne\t@.BB0_2\n\tsub.s!\t@CPI0_27[0], r1, r4\n\tjump.gt\t@.BB0_130\n\tadd\t96, r1, r4\n\tst.1\t64, r4\n\tld.1\tr7, r4\n\tst.1.inc\tr1, r4, r4\n\tadd\t160, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr4, r8\n\tadd\t192, r6, r6\n\tld.1\tr6, r6\n\tsub.s!\t@CPI0_26[0], r6, r8\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r7, r6\n\tadd\t31, r6, r7\n\tadd\t@CPI0_25[0], r0, r8\n\tsub!\tr7, r5, r9\n\tadd\tr0, r0, r9\n\tadd.ge\tr8, r0, r9\n\tand\t@CPI0_25[0], r7, r7\n\tand\t@CPI0_25[0], r5, r10\n\tsub!\tr7, r10, r11\n\tadd.ge\tr0, r0, r8\n\txor\tr7, r10, r7\n\tsub.s!\t@CPI0_25[0], r7, r7\n\tadd.ne\tr9, r0, r8\n\tsub!\tr8, r0, r7\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr6, r8, r6\n\tsub.s!\t@CPI0_26[0], r8, r7\n\tjump.gt\t@.BB0_130\n\tshl.s\t5, r8, r7\n\tadd\t63, r7, r9\n\tand\tr9, r2, r9\n\tld.1\t64, r2\n\tadd\tr2, r9, r9\n\tsub!\tr9, r2, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI0_26[0], r9, r11\n\tjump.gt\t@.BB0_130\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB0_130\n\tst.1\t64, r9\n\tst.1\tr2, r8\n\tadd\tr7, r6, r7\n\tsub!\tr7, r5, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr8, r0, r5\n\tjump.eq\t@.BB0_177\n\tadd\tr2, r0, r5\n.BB0_190:\n\tld.1.inc\tr6, r8, r6\n\tsub!\tr8, r0, r9\n\tadd\t0, r0, r9\n\tadd.ne\t1, r0, r9\n\tsub!\tr8, r9, r9\n\tjump.ne\t@.BB0_2\n\tadd\t32, r5, r5\n\tst.1\tr5, r8\n\tsub!\tr6, r7, r8\n\tjump.lt\t@.BB0_190\n.BB0_177:\n\tadd\t64, r1, r1\n\tst.1\tr1, r2\n\tld.1\tr4, r1\n\tld.1\t64, r4\n\tadd\t@CPI0_28[0], r0, r2\n\tst.1.inc\tr4, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr4, r0, stack-[4]\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[6], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_192\n\tsub.s!\t160, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tjump\t@.BB0_202\n.BB0_97:\n.BB0_91:\n\tadd\t@CPI0_33[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_158:\n.BB0_84:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t132, r5\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_30:\n\tadd\t@CPI0_33[0], r0, r2\n\tst.1\t288, r2\n\tst.1\t292, r1\n\tadd\t@CPI0_43[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_166:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_226\n\tadd\tr0, r0, r6\n.BB0_168:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_168\n.BB0_226:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_170\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_170:\n\tjump\t@.BB0_42\n.BB0_65:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_219\n\tadd\tr0, r0, r6\n.BB0_67:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_67\n.BB0_219:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_69\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_69:\n.BB0_42:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_100:\n\tadd\tr6, r0, stack-[5]\n\tadd\tr5, r0, stack-[6]\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t160, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_222\n\tadd\tr0, r0, r7\n.BB0_102:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_102\n.BB0_222:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_104\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_104:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[5], r0, r6\n\tjump.eq\t@.BB0_105\n.BB0_110:\n\tadd\t31, r4, r1\n\tand\t480, r1, r1\n\tadd\t128, r1, r7\n\tst.1\t64, r7\n\tsub.s!\t160, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\t288, r1, r2\n\tst.1\t64, r2\n\tld.1\t128, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\tr7, r2\n\tadd\t160, r1, r4\n\tld.1\t160, r2\n\tst.1\tr4, r2\n\tadd\t192, r1, r2\n\tld.1\t192, r3\n\tst.1\tr2, r3\n\tadd\t224, r1, r2\n\tld.1\t224, r3\n\tst.1\tr2, r3\n\tadd\t256, r1, r1\n\tld.1\t256, r2\n\tst.1\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_118\n\tld.1\tr7, r1\n\txor\tr1, r6, r1\n\tand!\t@CPI0_2[0], r1, r1\n\tjump.ne\t@.BB0_118\n\tadd\tr4, r0, stack-[3]\n\tst.1\t0, r5\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[6]\n\tadd\tr7, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[2]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_48\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[2], r1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_2[0], r1, r1\n\tjump.ne\t@.BB0_118\n\tld.1\tr3, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[5]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[1], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_48\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r5\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tstack-[5], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r6\n\tcontext.gas_left\tr1\n.BB0_123:\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_32[0], r0, r4\n\tjump\t@.BB0_124\n.BB0_161:\n\tand\t@CPI0_3[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n.BB0_124:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_33:\n\tadd\tr6, r0, stack-[5]\n\tadd\tr5, r0, stack-[6]\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_43[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t160, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_218\n\tadd\tr0, r0, r7\n.BB0_35:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t288, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_35\n.BB0_218:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_37\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t288, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_37:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[5], r0, r6\n\tjump.eq\t@.BB0_38\n.BB0_43:\n\tadd\t31, r4, r1\n\tand\t480, r1, r1\n\tadd\t288, r1, r4\n\tst.1\t64, r4\n\tsub.s!\t160, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\t448, r1, r2\n\tst.1\t64, r2\n\tld.1\t288, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1\tr4, r2\n\tadd\t320, r1, r2\n\tld.1\t320, r3\n\tst.1\tr2, r3\n\tadd\t352, r1, r2\n\tld.1\t352, r3\n\tst.1\tr2, r3\n\tadd\t384, r1, r2\n\tld.1\t384, r3\n\tst.1\tr2, r3\n\tadd\t416, r1, r1\n\tld.1\t416, r2\n\tst.1\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_53\n\tst.1\t0, r6\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[6]\n\tadd\tr6, r0, stack-[5]\n\tadd\tr4, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[2]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_48\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[4], r0, r5\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[2], r1, r1\n\tsload\tr1, r2\n\tld.1\tr5, r1\n\txor\tr1, r2, r2\n\tand!\t@CPI0_2[0], r2, r2\n\tjump.ne\t@.BB0_53\n\txor\tr1, r3, r1\n\tand!\t@CPI0_2[0], r1, r1\n\tjump.eq\t@.BB0_53\n\tst.1\t0, r4\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r2\n\tsload\tr2, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tnear_call\tr0, @update_storage_value_address_to_address, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[4], r0, r2\n\tjump\t@.BB0_56\n.BB0_105:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_221\n\tadd\tr0, r0, r6\n.BB0_107:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_107\n.BB0_221:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_109\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_109:\n\tjump\t@.BB0_42\n.BB0_38:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_217\n\tadd\tr0, r0, r6\n.BB0_40:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_40\n.BB0_217:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_42\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_42\n.BB0_75:\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_76\n.BB0_53:\n\tld.1\t64, r1\n\tadd\t@CPI0_45[0], r0, r2\n\tjump\t@.BB0_54\n.BB0_137:\n\tld.1\t64, r2\n\tadd\t@CPI0_33[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_76:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[2]\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[3]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_48\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r1, r1\n\tsload\tr1, r2\n\tld.1\tr3, r1\n\txor\tr1, r2, r2\n\tand!\t@CPI0_2[0], r2, r2\n\tjump.ne\t@.BB0_53\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[3]\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_53\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r2\n\tsload\tr2, r2\n\tnear_call\tr0, @storage_array_index_access_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r3\n\tnear_call\tr0, @update_storage_value_address_to_address, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[5], r0, r2\n.BB0_56:\n\tnear_call\tr0, @abi_encode_struct_Seat, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_140:\n\tadd\t1, r1, r5\n\tsstore\tr3, r5\n\tld.1\t128, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_141\n.BB0_142:\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_37[0], r0, r4\n\tjump\t@.BB0_124\n.BB0_141:\n\tadd\tr3, r0, stack-[6]\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.gt\t@.BB0_130\n\tadd\t4, r0, r2\n\tsload\tr2, r4\n\tsstore\tr2, r1\n\tsub!\tr1, r4, r3\n\tjump.ge\t@.BB0_146\n\tadd\t@CPI0_35[0], r1, r3\n\tadd\t@CPI0_35[0], r4, r4\n\tsub!\tr3, r4, r5\n\tjump.ge\t@.BB0_146\n.BB0_147:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r4, r5\n\tjump.lt\t@.BB0_147\n.BB0_146:\n\tst.1\t0, r2\n\tadd\t160, r0, r2\n\tadd\tr0, r0, r3\n.BB0_148:\n\tld.1.inc\tr2, r4, r2\n\tadd\t@CPI0_35[0], r3, r5\n\tsstore\tr5, r4\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_148\n\tadd\t160, r0, r3\n\tld.1\t64, r2\n\tadd\tr0, r0, r4\n\tadd\tr2, r0, r5\n.BB0_150:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr5, r6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_150\n\tsub\tr5, r2, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_36[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r5\n\tjump\t@.BB0_142\n.BB0_192:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t160, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t160, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_224\n\tadd\tr0, r0, r7\n.BB0_194:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_194\n.BB0_224:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_196\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[4], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_196:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_197\n.BB0_202:\n\tadd\t31, r4, r1\n\tand\t480, r1, r1\n\tadd\tstack-[4], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.gt\t@.BB0_130\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_130\n\tadd\tstack-[6], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t160, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t@CPI0_29[0], r1, r1\n\tjump.gt\t@.BB0_130\n\tadd\tstack-[6], r0, r1\n\tadd\t160, r1, r1\n\tst.1\t64, r1\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[6], r0, r4\n\tst.1.inc\tr4, r1, r2\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tadd\tstack-[4], r0, r3\n\tadd\t64, r3, r1\n\tld.1\tr1, r1\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\t96, r3, r1\n\tld.1\tr1, r1\n\tadd\t96, r4, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r1\n\tadd\t128, r4, r1\n\tadd\t128, r3, r2\n\tld.1\tr2, r2\n\tst.1\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_118\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\tstack-[5], r1, r1\n\tjump.ne\t@.BB0_118\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t1, r0, r2\n\tadd\tr2, r0, stack-[1]\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_48\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_2[0], r1, r1\n\tjump.ne\t@.BB0_118\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand\t@CPI0_2[0], r3, stack-[6]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[1], r0, r2\n\tsload\tr2, r3\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr3, r0, stack-[5]\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_48\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tstack-[6], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r6\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r5\n\tcontext.gas_left\tr1\n\tjump\t@.BB0_123\n.BB0_48:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tjump\t@.BB0_49\n.BB0_118:\n\tld.1\t64, r1\n\tadd\t@CPI0_39[0], r0, r2\n.BB0_54:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_40[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_197:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_223\n\tadd\tr0, r0, r6\n.BB0_199:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_199\n.BB0_223:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_201\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_201:\n\tjump\t@.BB0_42\n.func_end0:\n\nabi_encode_struct_Seat:\n.func_begin1:\n\tld.1.inc\tr2, r3, r4\n\tand\t@CPI1_0[0], r3, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tld.1\tr3, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tadd\t96, r1, r4\n\tst.1\tr4, r3\n\tadd\t128, r2, r2\n\tld.1\tr2, r2\n\tadd\t128, r1, r3\n\tst.1\tr3, r2\n\tadd\t160, r1, r1\n\tret\n.func_end1:\n\nstorage_array_index_access_address_dyn:\n.func_begin2:\n\tnop\tstack+=[1]\n\tsload\tr1, r3\n\tadd\tr2, r0, stack-[1]\n\tsub!\tr3, r2, r2\n\tjump.le\t@.BB2_1\n\tst.1\t0, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_3\n\tld\tr1, r1\n\tadd\tstack-[1], r1, r1\n\tadd\tr0, r0, r2\n\tret\n.BB2_1:\n\tadd\t@CPI2_0[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_1[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nupdate_storage_value_address_to_address:\n.func_begin3:\n\tshl.s\t3, r2, r2\n\tshl\t@CPI3_0[0], r2, r4\n\tsub.s\t1, r0, r5\n\txor\tr4, r5, r4\n\tsub.s!\t255, r2, r6\n\tadd.le\tr4, r0, r5\n\tand\t@CPI3_0[0], r3, r3\n\tshl\tr3, r2, r2\n\tadd.gt\tr0, r0, r2\n\tsload\tr1, r3\n\tand\tr3, r5, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tret\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r3\n\tsub.s!\t@CPI4_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_2:\nCPI4_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI1_0:\nCPI3_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_5:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_6:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_7:\n\t.cell 13710277464781854216000659759875001615964737203828340066645871065499466465280\nCPI0_8:\nCPI2_1:\n\t.cell 2852213850513516153367582212096\nCPI0_9:\n\t.cell 2395445781\nCPI0_10:\n\t.cell 3536811597\nCPI0_11:\n\t.cell 3536811598\nCPI0_12:\n\t.cell 4076725131\nCPI0_13:\n\t.cell 4081432201\nCPI0_14:\n\t.cell 2395445782\nCPI0_15:\n\t.cell 2712000144\nCPI0_16:\n\t.cell 1901074597\nCPI0_17:\n\t.cell 1901074598\nCPI0_18:\n\t.cell 2376452955\nCPI0_19:\n\t.cell 1252316773\nCPI0_20:\n\t.cell 1742566602\nCPI0_21:\n\t.cell 56299494774993437149827173271125835136392905345189914532284260949934911520768\nCPI0_22:\n\t.cell 2852213852874699394802404818944\nCPI0_23:\n\t.cell -18446744073709551616\nCPI0_24:\n\t.cell -18446744073709551488\nCPI0_25:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_26:\n\t.cell 18446744073709551615\nCPI0_27:\n\t.cell 18446744073709551519\nCPI0_28:\n\t.cell 10723978658513792157388419520723327992919542136812398807411008468590123810816\nCPI0_29:\n\t.cell 18446744073709551455\nCPI0_30:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_31:\nCPI2_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_32:\n\t.cell 12880736780864050127612384030016148095502951204605041888389108572334849929622\nCPI0_33:\n\t.cell 7938186097999196165550678859506685896924014503924332068426884830790147899392\nCPI0_34:\n\t.cell 18446744073709551616\nCPI0_35:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_36:\n\t.cell 1349042044924083190962862732224397247921587672007554118224452672648679842462\nCPI0_37:\n\t.cell -39154079422029882226727035532483737869818419048028156328498978164097752218368\nCPI0_38:\nCPI2_0:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_39:\n\t.cell -33936571866373961107724516858336510405537150609638711870221448932261181259776\nCPI0_40:\n\t.cell 316912650057057350374175801344\nCPI0_41:\n\t.cell -49920283800377768977781478483584631500925578430288256026169801633322685504721\nCPI0_42:\n\t.cell 2535301202817642044428229017600\nCPI0_43:\n\t.cell 2852213855826178446595933077504\nCPI0_44:\n\t.cell -35659458230836516274113108886947640320725616494278947128639374954406701170688\nCPI0_45:\n\t.cell -14337566568022661701288525621393416173603533085274004019659035337378146287616\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "advanceMatch(uint256[])": "d2cf764e",
            "buyTicket(uint256)": "67dd74ca",
            "buyTicketFromWeb(uint256,address)": "4aa4d665",
            "freeTheSeat()": "f345b689",
            "freeTheSeatFromWeb(uint256,address)": "a1a5d690",
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "setNewSeason()": "8ec79a16",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 1:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 3:\"src/contracts/TicketManager.sol\"\nobject \"TicketManager_1673\" {\n    code {\n        {\n            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"TicketManager_1673\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n            let value := mload(_1)\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(value, _2)\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 3:1625:1635  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                let _4 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(64)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(_4, shl(224, 0x1e4fbdf7))\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_4, 4), /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(_4, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36)\n            }\n            let _5 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n            let _6 := not(sub(shl(160, 1), 1))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ or(and(_5, _6), /** @src 3:1625:1635  \"msg.sender\" */ caller()))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _7 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(_5, _2), /** @src 3:1625:1635  \"msg.sender\" */ caller())\n            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n            sstore(/** @src 3:1647:1704  \"seasonPassManager = SeasonPassManager(seasonPassManager_)\" */ 0x02, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ or(and(sload(/** @src 3:1647:1704  \"seasonPassManager = SeasonPassManager(seasonPassManager_)\" */ 0x02), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _6), _3))\n            sstore(/** @src 3:1737:1738  \"1\" */ 0x01, 0x01)\n            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n            let _8 := datasize(\"TicketManager_1673_deployed\")\n            codecopy(_7, dataoffset(\"TicketManager_1673_deployed\"), _8)\n            return(_7, _8)\n        }\n    }\n    /// @use-src 0:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 1:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 3:\"src/contracts/TicketManager.sol\"\n    object \"TicketManager_1673_deployed\" {\n        code {\n            {\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x4aa4d665 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(0, 0) }\n                        let value := calldataload(_2)\n                        let value1 := abi_decode_address()\n                        pop(allocate_and_zero_memory_struct_struct_Seat())\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let _3 := sub(shl(160, 1), 1)\n                        let cleaned := and(sload(/** @src 3:3137:3154  \"seasonPassManager\" */ 0x02), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _3)\n                        /// @src 3:3137:3171  \"seasonPassManager.getSeat(seatId_)\"\n                        let _4 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                        /// @src 3:3137:3171  \"seasonPassManager.getSeat(seatId_)\"\n                        mstore(_4, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ shl(226, 0x05ed63a3))\n                        mstore(/** @src 3:3137:3171  \"seasonPassManager.getSeat(seatId_)\" */ add(_4, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2), value)\n                        /// @src 3:3137:3171  \"seasonPassManager.getSeat(seatId_)\"\n                        let _5 := staticcall(gas(), cleaned, _4, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36, /** @src 3:3137:3171  \"seasonPassManager.getSeat(seatId_)\" */ _4, 160)\n                        if iszero(_5)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 3:3137:3171  \"seasonPassManager.getSeat(seatId_)\"\n                        let expr_mpos := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0\n                        /// @src 3:3137:3171  \"seasonPassManager.getSeat(seatId_)\"\n                        if _5\n                        {\n                            let _6 := 160\n                            if gt(160, returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_4, _6)\n                            expr_mpos := abi_decode_struct_Seat_fromMemory(_4, add(_4, _6))\n                        }\n                        /// @src 3:3199:3300  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr := /** @src 3:3199:3222  \"seat.rowSeatNumber == 0\" */ iszero(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(/** @src 3:3199:3217  \"seat.rowSeatNumber\" */ add(expr_mpos, 128)))\n                        /// @src 3:3199:3300  \"seat.rowSeatNumber == 0 ||...\"\n                        if iszero(expr)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            mstore(0, value)\n                            mstore(32, /** @src 3:3238:3251  \"s_TicketSeats\" */ 0x03)\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let dataSlot := keccak256(0, _1)\n                            /// @src 3:3238:3282  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\"\n                            let _7, _8 := storage_array_index_access_address_dyn(dataSlot, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(1))\n                            let value_1 := and(shr(shl(/** @src 3:3238:3251  \"s_TicketSeats\" */ 0x03, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _8), sload(/** @src 3:3238:3282  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\" */ _7)), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _3)\n                            /// @src 3:3199:3300  \"seat.rowSeatNumber == 0 ||...\"\n                            expr := /** @src 3:3238:3300  \"s_TicketSeats[seatId_][numberOfCurrentMatch] != seat.seatOwner\" */ iszero(eq(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ value_1, and(mload(/** @src 3:3286:3300  \"seat.seatOwner\" */ expr_mpos), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _3)))\n                        }\n                        /// @src 3:3199:3339  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 3:3316:3339  \"buyer == seat.seatOwner\" */ eq(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(/** @src 3:3316:3339  \"buyer == seat.seatOwner\" */ value1, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _3), and(mload(/** @src 3:3325:3339  \"seat.seatOwner\" */ expr_mpos), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _3))\n                        }\n                        /// @src 3:3182:3429  \"if (...\"\n                        if expr_1\n                        {\n                            /// @src 3:3371:3418  \"TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner()\"\n                            let _9 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                            /// @src 3:3371:3418  \"TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner()\"\n                            mstore(_9, shl(224, 0xe04d3993))\n                            revert(_9, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2)\n                        }\n                        mstore(0, value)\n                        mstore(32, /** @src 3:3438:3451  \"s_TicketSeats\" */ 0x03)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let dataSlot_1 := keccak256(0, _1)\n                        /// @src 3:3438:3482  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\"\n                        let _10, _11 := storage_array_index_access_address_dyn(dataSlot_1, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(1))\n                        /// @src 3:3438:3490  \"s_TicketSeats[seatId_][numberOfCurrentMatch] = buyer\"\n                        update_storage_value_address_to_address(_10, _11, value1)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_struct_Seat(memPos, expr_mpos), memPos))\n                    }\n                    case 0x67dd74ca {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_2 := calldataload(_2)\n                        pop(allocate_and_zero_memory_struct_struct_Seat())\n                        let _12 := sub(shl(160, 1), 1)\n                        let cleaned_1 := and(sload(/** @src 3:2378:2395  \"seasonPassManager\" */ 0x02), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _12)\n                        /// @src 3:2378:2412  \"seasonPassManager.getSeat(seatId_)\"\n                        let _13 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                        /// @src 3:2378:2412  \"seasonPassManager.getSeat(seatId_)\"\n                        mstore(_13, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ shl(226, 0x05ed63a3))\n                        mstore(/** @src 3:2378:2412  \"seasonPassManager.getSeat(seatId_)\" */ add(_13, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2), value_2)\n                        /// @src 3:2378:2412  \"seasonPassManager.getSeat(seatId_)\"\n                        let _14 := staticcall(gas(), cleaned_1, _13, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36, /** @src 3:2378:2412  \"seasonPassManager.getSeat(seatId_)\" */ _13, 160)\n                        if iszero(_14)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let pos_1 := mload(_1)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 3:2378:2412  \"seasonPassManager.getSeat(seatId_)\"\n                        let expr_mpos_1 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0\n                        /// @src 3:2378:2412  \"seasonPassManager.getSeat(seatId_)\"\n                        if _14\n                        {\n                            let _15 := 160\n                            if gt(160, returndatasize()) { _15 := returndatasize() }\n                            finalize_allocation(_13, _15)\n                            expr_mpos_1 := abi_decode_struct_Seat_fromMemory(_13, add(_13, _15))\n                        }\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let _16 := mload(/** @src 3:2460:2469  \"seat.zone\" */ add(expr_mpos_1, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 32))\n                        if iszero(lt(_16, sload(_2)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_2, 0x32)\n                            revert(0, 36)\n                        }\n                        mstore(0, _2)\n                        /// @src 3:2423:2536  \"if (msg.value < currentPricesPerZone[seat.zone]) {...\"\n                        if /** @src 3:2427:2470  \"msg.value < currentPricesPerZone[seat.zone]\" */ lt(/** @src 3:2427:2436  \"msg.value\" */ callvalue(), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, _16)))\n                        /// @src 3:2423:2536  \"if (msg.value < currentPricesPerZone[seat.zone]) {...\"\n                        {\n                            /// @src 3:2493:2525  \"TicketManager_NotEnoughETHSent()\"\n                            let _17 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                            /// @src 3:2493:2525  \"TicketManager_NotEnoughETHSent()\"\n                            mstore(_17, shl(225, 0x5894bb1f))\n                            revert(_17, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2)\n                        }\n                        /// @src 3:2563:2664  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr_2 := /** @src 3:2563:2586  \"seat.rowSeatNumber == 0\" */ iszero(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(/** @src 3:2563:2581  \"seat.rowSeatNumber\" */ add(expr_mpos_1, 128)))\n                        /// @src 3:2563:2664  \"seat.rowSeatNumber == 0 ||...\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            mstore(0, value_2)\n                            mstore(32, 3)\n                            let dataSlot_2 := keccak256(0, _1)\n                            /// @src 3:2602:2646  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\"\n                            let _18, _19 := storage_array_index_access_address_dyn(dataSlot_2, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(1))\n                            let value_3 := and(shr(shl(3, _19), sload(/** @src 3:2602:2646  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\" */ _18)), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _12)\n                            /// @src 3:2563:2664  \"seat.rowSeatNumber == 0 ||...\"\n                            expr_2 := /** @src 3:2602:2664  \"s_TicketSeats[seatId_][numberOfCurrentMatch] != seat.seatOwner\" */ iszero(eq(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ value_3, and(mload(/** @src 3:2650:2664  \"seat.seatOwner\" */ expr_mpos_1), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _12)))\n                        }\n                        /// @src 3:2563:2708  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr_3 := expr_2\n                        if iszero(expr_2)\n                        {\n                            expr_3 := /** @src 3:2680:2708  \"msg.sender == seat.seatOwner\" */ eq(/** @src 3:2680:2690  \"msg.sender\" */ caller(), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(mload(/** @src 3:2694:2708  \"seat.seatOwner\" */ expr_mpos_1), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _12))\n                        }\n                        /// @src 3:2546:2798  \"if (...\"\n                        if expr_3\n                        {\n                            /// @src 3:2740:2787  \"TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner()\"\n                            let _20 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                            /// @src 3:2740:2787  \"TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner()\"\n                            mstore(_20, /** @src 3:3371:3418  \"TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner()\" */ shl(224, 0xe04d3993))\n                            /// @src 3:2740:2787  \"TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner()\"\n                            revert(_20, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2)\n                        }\n                        mstore(0, value_2)\n                        mstore(32, 3)\n                        let dataSlot_3 := keccak256(0, _1)\n                        /// @src 3:2808:2852  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\"\n                        let _21, _22 := storage_array_index_access_address_dyn(dataSlot_3, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(1))\n                        /// @src 3:2808:2865  \"s_TicketSeats[seatId_][numberOfCurrentMatch] = msg.sender\"\n                        update_storage_value_address_to_address(_21, _22, /** @src 3:2855:2865  \"msg.sender\" */ caller())\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let memPos_1 := mload(_1)\n                        return(memPos_1, sub(abi_encode_struct_Seat(memPos_1, expr_mpos_1), memPos_1))\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let _23 := sload(0)\n                        sstore(0, and(_23, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(_23, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned_2 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, cleaned_2)\n                        return(memPos_2, 32)\n                    }\n                    case 0x8ec79a16 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        sstore(/** @src 3:1827:1828  \"1\" */ 0x01, 0x01)\n                        /// @src 3:1843:1871  \"TicketManager_SetNewSeason()\"\n                        log1(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, 0, /** @src 3:1843:1871  \"TicketManager_SetNewSeason()\" */ 0x91a21ee2d5f51cafcc545a7020d3fb01612efba631ef928db96bbb09e3f2e32f)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xa1a5d690 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(0, 0) }\n                        let value_4 := calldataload(_2)\n                        let value1_1 := abi_decode_address()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let _24 := sub(shl(160, 1), 1)\n                        let cleaned_3 := and(sload(/** @src 3:3725:3742  \"seasonPassManager\" */ 0x02), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _24)\n                        /// @src 3:3725:3759  \"seasonPassManager.getSeat(seatId_)\"\n                        let _25 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                        /// @src 3:3725:3759  \"seasonPassManager.getSeat(seatId_)\"\n                        mstore(_25, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ shl(226, 0x05ed63a3))\n                        mstore(/** @src 3:3725:3759  \"seasonPassManager.getSeat(seatId_)\" */ add(_25, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2), value_4)\n                        /// @src 3:3725:3759  \"seasonPassManager.getSeat(seatId_)\"\n                        let _26 := staticcall(gas(), cleaned_3, _25, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36, /** @src 3:3725:3759  \"seasonPassManager.getSeat(seatId_)\" */ _25, 160)\n                        if iszero(_26)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let pos_2 := mload(_1)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 3:3725:3759  \"seasonPassManager.getSeat(seatId_)\"\n                        let expr_mpos_2 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0\n                        /// @src 3:3725:3759  \"seasonPassManager.getSeat(seatId_)\"\n                        if _26\n                        {\n                            let _27 := 160\n                            if gt(160, returndatasize()) { _27 := returndatasize() }\n                            finalize_allocation(_25, _27)\n                            expr_mpos_2 := abi_decode_struct_Seat_fromMemory(_25, add(_25, _27))\n                        }\n                        /// @src 3:3786:3849  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr_4 := /** @src 3:3786:3809  \"seat.rowSeatNumber == 0\" */ iszero(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(/** @src 3:3786:3804  \"seat.rowSeatNumber\" */ add(expr_mpos_2, 128)))\n                        /// @src 3:3786:3849  \"seat.rowSeatNumber == 0 ||...\"\n                        if iszero(expr_4)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let cleaned_4 := and(mload(/** @src 3:3825:3839  \"seat.seatOwner\" */ expr_mpos_2), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _24)\n                            /// @src 3:3786:3849  \"seat.rowSeatNumber == 0 ||...\"\n                            expr_4 := /** @src 3:3825:3849  \"seat.seatOwner != owner_\" */ iszero(eq(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ cleaned_4, and(/** @src 3:3825:3849  \"seat.seatOwner != owner_\" */ value1_1, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _24)))\n                        }\n                        /// @src 3:3786:3923  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr_5 := expr_4\n                        if iszero(expr_4)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            mstore(0, value_4)\n                            mstore(32, /** @src 3:3865:3878  \"s_TicketSeats\" */ 0x03)\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let dataSlot_4 := keccak256(0, _1)\n                            /// @src 3:3865:3909  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\"\n                            let _28, _29 := storage_array_index_access_address_dyn(dataSlot_4, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(1))\n                            /// @src 3:3786:3923  \"seat.rowSeatNumber == 0 ||...\"\n                            expr_5 := /** @src 3:3865:3923  \"s_TicketSeats[seatId_][numberOfCurrentMatch] != address(0)\" */ iszero(iszero(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(shr(shl(/** @src 3:3865:3878  \"s_TicketSeats\" */ 0x03, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _29), sload(/** @src 3:3865:3909  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\" */ _28)), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _24)))\n                        }\n                        /// @src 3:3769:4003  \"if (...\"\n                        if expr_5\n                        {\n                            /// @src 3:3955:3992  \"TicketManager_SeatNotPossibleToFree()\"\n                            let _30 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                            /// @src 3:3955:3992  \"TicketManager_SeatNotPossibleToFree()\"\n                            mstore(_30, shl(224, 0xb4f894bd))\n                            revert(_30, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2)\n                        }\n                        let cleaned_5 := and(mload(/** @src 3:4059:4073  \"seat.seatOwner\" */ expr_mpos_2), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _24)\n                        mstore(0, value_4)\n                        mstore(32, /** @src 3:4012:4025  \"s_TicketSeats\" */ 0x03)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let dataSlot_5 := keccak256(0, _1)\n                        /// @src 3:4012:4056  \"s_TicketSeats[seatId_][numberOfCurrentMatch]\"\n                        let _31, _32 := storage_array_index_access_address_dyn(dataSlot_5, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(1))\n                        /// @src 3:4012:4073  \"s_TicketSeats[seatId_][numberOfCurrentMatch] = seat.seatOwner\"\n                        update_storage_value_address_to_address(_31, _32, cleaned_5)\n                        /// @src 3:4088:4131  \"TicketManager_FreedSeat(seatId_, seat.zone)\"\n                        log3(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, 0, /** @src 3:4088:4131  \"TicketManager_FreedSeat(seatId_, seat.zone)\" */ 0x1c7a3d18edfe9c7c8b150f6025d2ad7c334b4e727b436fca70839d00421e3196, value_4, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(/** @src 3:4121:4130  \"seat.zone\" */ add(expr_mpos_2, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 32)))\n                        return(0, 0)\n                    }\n                    case 0xd2cf764e {\n                        if callvalue() { revert(0, 0) }\n                        let _33 := 32\n                        if slt(add(calldatasize(), not(3)), _33) { revert(0, 0) }\n                        let offset := calldataload(_2)\n                        let _34 := 0xffffffffffffffff\n                        if gt(offset, _34) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let _35 := calldataload(add(_2, offset))\n                        let _36 := array_allocation_size_array_uint256_dyn(_35)\n                        let memPtr := mload(_1)\n                        finalize_allocation(memPtr, _36)\n                        let dst := memPtr\n                        mstore(memPtr, _35)\n                        dst := add(memPtr, _33)\n                        let dst_1 := dst\n                        let srcEnd := add(add(offset, shl(5, _35)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n                        let src := add(offset, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _33) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _33)\n                        }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:1963:1985  \"numberOfCurrentMatch++\"\n                        let _37 := 0x01\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let _38 := sload(/** @src 3:1963:1985  \"numberOfCurrentMatch++\" */ _37)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        if eq(_38, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 3:1963:1985  \"numberOfCurrentMatch++\" */ _37, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ add(_38, /** @src 3:1963:1985  \"numberOfCurrentMatch++\" */ _37))\n                        /// @src 3:1999:2015  \"newPrices.length\"\n                        let expr_6 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(/** @src 3:1999:2015  \"newPrices.length\" */ memPtr)\n                        /// @src 3:1995:2142  \"if (newPrices.length != 0) {...\"\n                        if /** @src 3:1999:2020  \"newPrices.length != 0\" */ iszero(iszero(expr_6))\n                        /// @src 3:1995:2142  \"if (newPrices.length != 0) {...\"\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            if gt(expr_6, _34)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_2, 0x41)\n                                revert(0, 36)\n                            }\n                            if gt(expr_6, 18446744073709551616)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_2, 0x41)\n                                revert(0, 36)\n                            }\n                            let oldLen := sload(_2)\n                            sstore(_2, expr_6)\n                            if lt(expr_6, oldLen)\n                            {\n                                let _39 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                let _40 := add(_39, oldLen)\n                                let start := add(_39, expr_6)\n                                for { }\n                                lt(start, _40)\n                                {\n                                    start := add(start, /** @src 3:1963:1985  \"numberOfCurrentMatch++\" */ _37)\n                                }\n                                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                                { sstore(start, 0) }\n                            }\n                            let srcPtr := dst_1\n                            mstore(0, _2)\n                            let i := 0\n                            for { }\n                            lt(i, expr_6)\n                            {\n                                i := add(i, /** @src 3:1963:1985  \"numberOfCurrentMatch++\" */ _37)\n                            }\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            {\n                                let _41 := mload(srcPtr)\n                                srcPtr := add(srcPtr, _33)\n                                sstore(add(62514009886607029107290561805838585334079798074568712924583230797734656856475, i), _41)\n                            }\n                            let pos_3 := mload(_1)\n                            let pos_4 := pos_3\n                            let length := mload(memPtr)\n                            pos_3 := pos_3\n                            let srcPtr_1 := dst_1\n                            let i_1 := 0\n                            for { }\n                            lt(i_1, length)\n                            {\n                                i_1 := add(i_1, /** @src 3:1963:1985  \"numberOfCurrentMatch++\" */ _37)\n                            }\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            {\n                                mstore(pos_3, mload(srcPtr_1))\n                                pos_3 := add(pos_3, _33)\n                                srcPtr_1 := add(srcPtr_1, _33)\n                            }\n                            /// @src 3:2087:2131  \"TicketManager_TicketPrizesChanged(newPrices)\"\n                            log2(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, 0, /** @src 3:2087:2131  \"TicketManager_TicketPrizesChanged(newPrices)\" */ 0x02fb87de817478a3208f80e7b0fff2e7dc99c8089afc9ef1d6f9ba95ff58e29e, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ keccak256(pos_4, sub(pos_3, pos_4)))\n                        }\n                        /// @src 3:2156:2211  \"TicketManager_AdvancedToNextMatch(numberOfCurrentMatch)\"\n                        log2(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, 0, /** @src 3:2156:2211  \"TicketManager_AdvancedToNextMatch(numberOfCurrentMatch)\" */ 0xa96f938dd5416e2cfd7739019153e1a3b8bc485f6b86fd4154e1238d2be84500, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(/** @src 3:1963:1985  \"numberOfCurrentMatch++\" */ _37))\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(_2)\n                        let _42 := sub(shl(160, 1), 1)\n                        let _43 := and(value_5, _42)\n                        if iszero(eq(value_5, _43)) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _43)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            let _44 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(_44, shl(224, 0x1e4fbdf7))\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            mstore(/** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_44, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2), 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(_44, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36)\n                        }\n                        let _45 := sload(0)\n                        sstore(0, or(and(_45, shl(160, 0xffffffffffffffffffffffff)), _43))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(_45, _42), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _43)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xf345b689 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _46 := sub(shl(160, 1), 1)\n                        let cleaned_6 := and(sload(/** @src 3:4223:4240  \"seasonPassManager\" */ 0x02), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _46)\n                        /// @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\"\n                        let _47 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                        /// @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\"\n                        mstore(_47, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ shl(224, 0x7c786283))\n                        mstore(/** @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\" */ add(_47, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2), /** @src 3:4294:4304  \"msg.sender\" */ caller())\n                        /// @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\"\n                        let _48 := staticcall(gas(), cleaned_6, _47, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36, /** @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\" */ _47, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0)\n                        /// @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\"\n                        if iszero(_48)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let pos_5 := mload(_1)\n                            returndatacopy(pos_5, 0, returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\"\n                        let expr_mpos_3 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0\n                        /// @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\"\n                        if _48\n                        {\n                            let _49 := returndatasize()\n                            returndatacopy(_47, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, /** @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\" */ _49)\n                            finalize_allocation(_47, _49)\n                            let _50 := add(_47, _49)\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let _51 := 32\n                            if slt(sub(_50, _47), _51) { revert(0, 0) }\n                            let offset_1 := mload(_47)\n                            let _52 := 0xffffffffffffffff\n                            if gt(offset_1, _52) { revert(0, 0) }\n                            let _53 := add(_47, offset_1)\n                            if slt(sub(_50, _53), 0x60) { revert(0, 0) }\n                            let memPtr_1 := mload(_1)\n                            let newFreePtr := add(memPtr_1, 0x60)\n                            if or(gt(newFreePtr, _52), lt(newFreePtr, memPtr_1))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(_2, 0x41)\n                                revert(0, 36)\n                            }\n                            mstore(_1, newFreePtr)\n                            mstore(memPtr_1, mload(_53))\n                            mstore(add(memPtr_1, _51), mload(add(_53, _51)))\n                            let offset_2 := mload(add(_53, _1))\n                            if gt(offset_2, _52) { revert(0, 0) }\n                            let _54 := add(_53, offset_2)\n                            if iszero(slt(add(_54, 0x1f), _50)) { revert(0, 0) }\n                            let _55 := mload(_54)\n                            let _56 := array_allocation_size_array_uint256_dyn(_55)\n                            let memPtr_2 := mload(_1)\n                            finalize_allocation(memPtr_2, _56)\n                            let dst_2 := memPtr_2\n                            mstore(memPtr_2, _55)\n                            dst_2 := add(memPtr_2, _51)\n                            let srcEnd_1 := add(add(_54, shl(5, _55)), _51)\n                            if gt(srcEnd_1, _50) { revert(0, 0) }\n                            let src_1 := add(_54, _51)\n                            for { } lt(src_1, srcEnd_1) { src_1 := add(src_1, _51) }\n                            {\n                                let value_6 := mload(src_1)\n                                if iszero(eq(value_6, iszero(iszero(value_6)))) { revert(0, 0) }\n                                mstore(dst_2, value_6)\n                                dst_2 := add(dst_2, _51)\n                            }\n                            mstore(add(memPtr_1, _1), memPtr_2)\n                            /// @src 3:4262:4305  \"seasonPassManager.getSeasonPass(msg.sender)\"\n                            expr_mpos_3 := memPtr_1\n                        }\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let _57 := mload(/** @src 3:4262:4312  \"seasonPassManager.getSeasonPass(msg.sender).seatId\" */ add(expr_mpos_3, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 32))\n                        /// @src 3:4223:4322  \"seasonPassManager.getSeat(...\"\n                        let _58 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                        /// @src 3:4223:4322  \"seasonPassManager.getSeat(...\"\n                        mstore(_58, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ shl(226, 0x05ed63a3))\n                        mstore(/** @src 3:4223:4322  \"seasonPassManager.getSeat(...\" */ add(_58, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2), _57)\n                        /// @src 3:4223:4322  \"seasonPassManager.getSeat(...\"\n                        let _59 := staticcall(gas(), cleaned_6, _58, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36, /** @src 3:4223:4322  \"seasonPassManager.getSeat(...\" */ _58, 160)\n                        if iszero(_59)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let pos_6 := mload(_1)\n                            returndatacopy(pos_6, 0, returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 3:4223:4322  \"seasonPassManager.getSeat(...\"\n                        let expr_mpos_4 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0\n                        /// @src 3:4223:4322  \"seasonPassManager.getSeat(...\"\n                        if _59\n                        {\n                            let _60 := 160\n                            if gt(160, returndatasize()) { _60 := returndatasize() }\n                            finalize_allocation(_58, _60)\n                            expr_mpos_4 := abi_decode_struct_Seat_fromMemory(_58, add(_58, _60))\n                        }\n                        /// @src 3:4349:4416  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr_7 := /** @src 3:4349:4372  \"seat.rowSeatNumber == 0\" */ iszero(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(/** @src 3:4349:4367  \"seat.rowSeatNumber\" */ add(expr_mpos_4, 128)))\n                        /// @src 3:4349:4416  \"seat.rowSeatNumber == 0 ||...\"\n                        if iszero(expr_7)\n                        {\n                            expr_7 := /** @src 3:4388:4416  \"seat.seatOwner != msg.sender\" */ iszero(eq(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(mload(/** @src 3:4388:4402  \"seat.seatOwner\" */ expr_mpos_4), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _46), /** @src 3:4294:4304  \"msg.sender\" */ caller()))\n                        }\n                        /// @src 3:4349:4494  \"seat.rowSeatNumber == 0 ||...\"\n                        let expr_8 := expr_7\n                        if iszero(expr_7)\n                        {\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            mstore(0, mload(/** @src 3:4446:4457  \"seat.seatId\" */ add(expr_mpos_4, 96)))\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            mstore(32, /** @src 3:4432:4445  \"s_TicketSeats\" */ 0x03)\n                            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                            let dataSlot_6 := keccak256(0, _1)\n                            /// @src 3:4432:4480  \"s_TicketSeats[seat.seatId][numberOfCurrentMatch]\"\n                            let _61, _62 := storage_array_index_access_address_dyn(dataSlot_6, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(/** @src 3:4459:4479  \"numberOfCurrentMatch\" */ 0x01))\n                            /// @src 3:4349:4494  \"seat.rowSeatNumber == 0 ||...\"\n                            expr_8 := /** @src 3:4432:4494  \"s_TicketSeats[seat.seatId][numberOfCurrentMatch] != address(0)\" */ iszero(iszero(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ and(shr(shl(/** @src 3:4432:4445  \"s_TicketSeats\" */ 0x03, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _62), sload(/** @src 3:4432:4480  \"s_TicketSeats[seat.seatId][numberOfCurrentMatch]\" */ _61)), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _46)))\n                        }\n                        /// @src 3:4332:4574  \"if (...\"\n                        if expr_8\n                        {\n                            /// @src 3:4526:4563  \"TicketManager_SeatNotPossibleToFree()\"\n                            let _63 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(_1)\n                            /// @src 3:4526:4563  \"TicketManager_SeatNotPossibleToFree()\"\n                            mstore(_63, /** @src 3:3955:3992  \"TicketManager_SeatNotPossibleToFree()\" */ shl(224, 0xb4f894bd))\n                            /// @src 3:4526:4563  \"TicketManager_SeatNotPossibleToFree()\"\n                            revert(_63, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _2)\n                        }\n                        let cleaned_7 := and(mload(/** @src 3:4634:4648  \"seat.seatOwner\" */ expr_mpos_4), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ _46)\n                        /// @src 3:4597:4608  \"seat.seatId\"\n                        let _64 := add(expr_mpos_4, 96)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        mstore(0, mload(/** @src 3:4597:4608  \"seat.seatId\" */ _64))\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        mstore(32, /** @src 3:4583:4596  \"s_TicketSeats\" */ 0x03)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let dataSlot_7 := keccak256(0, _1)\n                        /// @src 3:4583:4631  \"s_TicketSeats[seat.seatId][numberOfCurrentMatch]\"\n                        let _65, _66 := storage_array_index_access_address_dyn(dataSlot_7, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sload(/** @src 3:4610:4630  \"numberOfCurrentMatch\" */ 0x01))\n                        /// @src 3:4583:4648  \"s_TicketSeats[seat.seatId][numberOfCurrentMatch] = seat.seatOwner\"\n                        update_storage_value_address_to_address(_65, _66, cleaned_7)\n                        /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                        let _67 := mload(/** @src 3:4687:4698  \"seat.seatId\" */ _64)\n                        /// @src 3:4663:4710  \"TicketManager_FreedSeat(seat.seatId, seat.zone)\"\n                        log3(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0, 0, /** @src 3:4663:4710  \"TicketManager_FreedSeat(seat.seatId, seat.zone)\" */ 0x1c7a3d18edfe9c7c8b150f6025d2ad7c334b4e727b436fca70839d00421e3196, _67, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(/** @src 3:4700:4709  \"seat.zone\" */ add(expr_mpos_4, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 32)))\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_struct_Seat(headStart, value0) -> tail\n            {\n                tail := add(headStart, 160)\n                mstore(headStart, and(mload(value0), sub(shl(160, 1), 1)))\n                mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n                mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n                mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n                mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n            }\n            function finalize_allocation_9555(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function allocate_and_zero_memory_struct_struct_Seat() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_9555(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ 0)\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                mstore(add(memPtr_1, 96), /** @src -1:-1:-1 */ 0)\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n            function abi_decode_struct_Seat_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n                let memPtr := mload(64)\n                finalize_allocation_9555(memPtr)\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                mstore(memPtr, value)\n                mstore(add(memPtr, 32), mload(add(headStart, 32)))\n                mstore(add(memPtr, 64), mload(add(headStart, 64)))\n                mstore(add(memPtr, 96), mload(add(headStart, 96)))\n                mstore(add(memPtr, 128), mload(add(headStart, 128)))\n                value0 := memPtr\n            }\n            function storage_array_index_access_address_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n            function update_storage_value_address_to_address(slot, offset, value)\n            {\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_2, not(shl(shiftBits, _1))), shl(shiftBits, and(value, _1))))\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                let cleaned := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ cleaned, /** @src 1:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    let _1 := /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ mload(64)\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(_1, shl(224, 0x118cdaa7))\n                    /// @src 3:390:4719  \"contract TicketManager is Ownable {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 1:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(_1, /** @src 3:390:4719  \"contract TicketManager is Ownable {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122035573b4c6448353cc6abb669d04c3961ce29a4b29d0ab4d8aba5b97e20b29dd664736f6c63430008180033\"\n    }\n}\n",
        "hash": "010001b9b9499fdb207fea72ffeaa783b640d5b0607c7006007e16a2eb2088c1",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "exportedSymbols": {
          "Context": [
            177
          ],
          "Ownable": [
            147
          ]
        },
        "id": 148,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".20"
            ],
            "nodeType": "PragmaDirective",
            "src": "102:24:0"
          },
          {
            "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
            "file": "../utils/Context.sol",
            "id": 3,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 148,
            "sourceUnit": 178,
            "src": "128:45:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 2,
                  "name": "Context",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 177,
                  "src": "136:7:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 5,
                  "name": "Context",
                  "nameLocations": [
                    "692:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 177,
                  "src": "692:7:0"
                },
                "id": 6,
                "nodeType": "InheritanceSpecifier",
                "src": "692:7:0"
              }
            ],
            "canonicalName": "Ownable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 4,
              "nodeType": "StructuredDocumentation",
              "src": "175:487:0",
              "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
            },
            "fullyImplemented": true,
            "id": 147,
            "linearizedBaseContracts": [
              147,
              177
            ],
            "name": "Ownable",
            "nameLocation": "681:7:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "722:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 147,
                "src": "706:22:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "706:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "documentation": {
                  "id": 9,
                  "nodeType": "StructuredDocumentation",
                  "src": "735:85:0",
                  "text": " @dev The caller account is not authorized to perform an operation."
                },
                "errorSelector": "118cdaa7",
                "id": 13,
                "name": "OwnableUnauthorizedAccount",
                "nameLocation": "831:26:0",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 12,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 11,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "866:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 13,
                      "src": "858:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "858:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "857:17:0"
                },
                "src": "825:50:0"
              },
              {
                "documentation": {
                  "id": 14,
                  "nodeType": "StructuredDocumentation",
                  "src": "881:82:0",
                  "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                },
                "errorSelector": "1e4fbdf7",
                "id": 18,
                "name": "OwnableInvalidOwner",
                "nameLocation": "974:19:0",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 17,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 16,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1002:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 18,
                      "src": "994:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "994:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "993:15:0"
                },
                "src": "968:41:0"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 24,
                "name": "OwnershipTransferred",
                "nameLocation": "1021:20:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 23,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 20,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "1058:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 24,
                      "src": "1042:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 22,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "1089:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 24,
                      "src": "1073:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1073:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1041:57:0"
                },
                "src": "1015:84:0"
              },
              {
                "body": {
                  "id": 49,
                  "nodeType": "Block",
                  "src": "1259:153:0",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1273:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1297:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1289:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1289:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1289:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1273:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 44,
                      "nodeType": "IfStatement",
                      "src": "1269:95:0",
                      "trueBody": {
                        "id": 43,
                        "nodeType": "Block",
                        "src": "1301:63:0",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 39,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1350:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 38,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1342:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 37,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 40,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1342:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 36,
                                "name": "OwnableInvalidOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "1322:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                  "typeString": "function (address) pure"
                                }
                              },
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1322:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 42,
                            "nodeType": "RevertStatement",
                            "src": "1315:38:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 46,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1392:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 45,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "1373:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1373:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 48,
                      "nodeType": "ExpressionStatement",
                      "src": "1373:32:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 25,
                  "nodeType": "StructuredDocumentation",
                  "src": "1105:115:0",
                  "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                },
                "id": 50,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 28,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 27,
                      "mutability": "mutable",
                      "name": "initialOwner",
                      "nameLocation": "1245:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 50,
                      "src": "1237:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 26,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1237:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1236:22:0"
                },
                "returnParameters": {
                  "id": 29,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1259:0:0"
                },
                "scope": 147,
                "src": "1225:187:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 57,
                  "nodeType": "Block",
                  "src": "1521:41:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 53,
                          "name": "_checkOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1531:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1531:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 55,
                      "nodeType": "ExpressionStatement",
                      "src": "1531:13:0"
                    },
                    {
                      "id": 56,
                      "nodeType": "PlaceholderStatement",
                      "src": "1554:1:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 51,
                  "nodeType": "StructuredDocumentation",
                  "src": "1418:77:0",
                  "text": " @dev Throws if called by any account other than the owner."
                },
                "id": 58,
                "name": "onlyOwner",
                "nameLocation": "1509:9:0",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 52,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1518:2:0"
                },
                "src": "1500:62:0",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 66,
                  "nodeType": "Block",
                  "src": "1693:30:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 64,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1710:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 63,
                      "id": 65,
                      "nodeType": "Return",
                      "src": "1703:13:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 59,
                  "nodeType": "StructuredDocumentation",
                  "src": "1568:65:0",
                  "text": " @dev Returns the address of the current owner."
                },
                "functionSelector": "8da5cb5b",
                "id": 67,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1647:5:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 60,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1652:2:0"
                },
                "returnParameters": {
                  "id": 63,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 62,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 67,
                      "src": "1684:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1684:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1683:9:0"
                },
                "scope": 147,
                "src": "1638:85:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 83,
                  "nodeType": "Block",
                  "src": "1841:117:0",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 71,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "1855:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:7:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 73,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "1866:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1866:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1855:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 82,
                      "nodeType": "IfStatement",
                      "src": "1851:101:0",
                      "trueBody": {
                        "id": 81,
                        "nodeType": "Block",
                        "src": "1880:72:0",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 77,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 159,
                                    "src": "1928:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 78,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1928:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 76,
                                "name": "OwnableUnauthorizedAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "1901:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                  "typeString": "function (address) pure"
                                }
                              },
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1901:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 80,
                            "nodeType": "RevertStatement",
                            "src": "1894:47:0"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 68,
                  "nodeType": "StructuredDocumentation",
                  "src": "1729:62:0",
                  "text": " @dev Throws if the sender is not the owner."
                },
                "id": 84,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_checkOwner",
                "nameLocation": "1805:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 69,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1816:2:0"
                },
                "returnParameters": {
                  "id": 70,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1841:0:0"
                },
                "scope": 147,
                "src": "1796:162:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 97,
                  "nodeType": "Block",
                  "src": "2347:47:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2384:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 92,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2376:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2376:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2376:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 90,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "2357:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2357:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 96,
                      "nodeType": "ExpressionStatement",
                      "src": "2357:30:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 85,
                  "nodeType": "StructuredDocumentation",
                  "src": "1964:324:0",
                  "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                },
                "functionSelector": "715018a6",
                "id": 98,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 88,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 87,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2337:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "2337:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2337:9:0"
                  }
                ],
                "name": "renounceOwnership",
                "nameLocation": "2302:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 86,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2319:2:0"
                },
                "returnParameters": {
                  "id": 89,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2347:0:0"
                },
                "scope": 147,
                "src": "2293:101:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 125,
                  "nodeType": "Block",
                  "src": "2613:145:0",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 106,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "2627:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2647:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2639:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 107,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2639:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2639:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2627:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 120,
                      "nodeType": "IfStatement",
                      "src": "2623:91:0",
                      "trueBody": {
                        "id": 119,
                        "nodeType": "Block",
                        "src": "2651:63:0",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2700:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 114,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2692:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 113,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2692:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 112,
                                "name": "OwnableInvalidOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "2672:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                  "typeString": "function (address) pure"
                                }
                              },
                              "id": 117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2672:31:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 118,
                            "nodeType": "RevertStatement",
                            "src": "2665:38:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 122,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2742:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 121,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "2723:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2723:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 124,
                      "nodeType": "ExpressionStatement",
                      "src": "2723:28:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 99,
                  "nodeType": "StructuredDocumentation",
                  "src": "2400:138:0",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                },
                "functionSelector": "f2fde38b",
                "id": 126,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 104,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 103,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2603:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "2603:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2603:9:0"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "2552:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 102,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 101,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2578:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 126,
                      "src": "2570:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 100,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2570:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2569:18:0"
                },
                "returnParameters": {
                  "id": 105,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2613:0:0"
                },
                "scope": 147,
                "src": "2543:215:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 145,
                  "nodeType": "Block",
                  "src": "2975:124:0",
                  "statements": [
                    {
                      "assignments": [
                        133
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 133,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "2993:8:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 145,
                          "src": "2985:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2985:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 135,
                      "initialValue": {
                        "id": 134,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "3004:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2985:25:0"
                    },
                    {
                      "expression": {
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 136,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3020:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 137,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "3029:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3020:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 139,
                      "nodeType": "ExpressionStatement",
                      "src": "3020:17:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 141,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 133,
                            "src": "3073:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 142,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3083:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 140,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "3052:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3052:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 144,
                      "nodeType": "EmitStatement",
                      "src": "3047:45:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 127,
                  "nodeType": "StructuredDocumentation",
                  "src": "2764:143:0",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                },
                "id": 146,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "2921:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 130,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2948:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "2940:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2940:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2939:18:0"
                },
                "returnParameters": {
                  "id": 131,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2975:0:0"
                },
                "scope": 147,
                "src": "2912:187:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 148,
            "src": "663:2438:0",
            "usedErrors": [
              13,
              18
            ],
            "usedEvents": [
              24
            ]
          }
        ],
        "src": "102:3000:0"
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "exportedSymbols": {
          "Context": [
            177
          ]
        },
        "id": 178,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 149,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".20"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:24:1"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Context",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 150,
              "nodeType": "StructuredDocumentation",
              "src": "127:496:1",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 177,
            "linearizedBaseContracts": [
              177
            ],
            "name": "Context",
            "nameLocation": "642:7:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 158,
                  "nodeType": "Block",
                  "src": "718:34:1",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 155,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "735:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "739:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "735:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 154,
                      "id": 157,
                      "nodeType": "Return",
                      "src": "728:17:1"
                    }
                  ]
                },
                "id": 159,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "665:10:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 151,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "675:2:1"
                },
                "returnParameters": {
                  "id": 154,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 153,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 159,
                      "src": "709:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 152,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "709:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "708:9:1"
                },
                "scope": 177,
                "src": "656:96:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 167,
                  "nodeType": "Block",
                  "src": "825:32:1",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 164,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "842:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "846:4:1",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "842:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 163,
                      "id": 166,
                      "nodeType": "Return",
                      "src": "835:15:1"
                    }
                  ]
                },
                "id": 168,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "767:8:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 160,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "775:2:1"
                },
                "returnParameters": {
                  "id": 163,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "809:14:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "809:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "808:16:1"
                },
                "scope": 177,
                "src": "758:99:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 175,
                  "nodeType": "Block",
                  "src": "935:25:1",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 172,
                      "id": 174,
                      "nodeType": "Return",
                      "src": "945:8:1"
                    }
                  ]
                },
                "id": 176,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "872:20:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 169,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "892:2:1"
                },
                "returnParameters": {
                  "id": 172,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "926:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "926:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "925:9:1"
                },
                "scope": 177,
                "src": "863:97:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 178,
            "src": "624:338:1",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "101:862:1"
      }
    },
    "src/contracts/SeasonPassManager.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "src/contracts/SeasonPassManager.sol",
        "exportedSymbols": {
          "Context": [
            177
          ],
          "Ownable": [
            147
          ],
          "SeasonPassManager": [
            1297
          ]
        },
        "id": 1298,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 179,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".20"
            ],
            "nodeType": "PragmaDirective",
            "src": "33:24:2"
          },
          {
            "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
            "file": "@openzeppelin/contracts/access/Ownable.sol",
            "id": 180,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1298,
            "sourceUnit": 148,
            "src": "59:52:2",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 182,
                  "name": "Ownable",
                  "nameLocations": [
                    "359:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "359:7:2"
                },
                "id": 183,
                "nodeType": "InheritanceSpecifier",
                "src": "359:7:2"
              }
            ],
            "canonicalName": "SeasonPassManager",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "113:214:2",
              "text": " @title Smart Contract that manages a season pass ticket for live events.\n @author Carlos Alba\n @notice This contract uses Blockchain technology to manage a Season Pass with different functionality"
            },
            "fullyImplemented": true,
            "id": 1297,
            "linearizedBaseContracts": [
              1297,
              147,
              177
            ],
            "name": "SeasonPassManager",
            "nameLocation": "338:17:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "errorSelector": "d22ecb3b",
                "id": 185,
                "name": "SeasonPass_CalledInWrongStage",
                "nameLocation": "638:29:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 184,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "667:2:2"
                },
                "src": "632:38:2"
              },
              {
                "errorSelector": "75cf5997",
                "id": 187,
                "name": "SeasonPass_FanAddedBefore",
                "nameLocation": "681:25:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 186,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "706:2:2"
                },
                "src": "675:34:2"
              },
              {
                "errorSelector": "5e7c52b2",
                "id": 189,
                "name": "SeasonPass_FanHasNoSeasonPass",
                "nameLocation": "720:29:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 188,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "749:2:2"
                },
                "src": "714:38:2"
              },
              {
                "errorSelector": "13cf5747",
                "id": 191,
                "name": "SeasonPass_MaximumFansAdded",
                "nameLocation": "763:27:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 190,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "790:2:2"
                },
                "src": "757:36:2"
              },
              {
                "errorSelector": "16d3efa7",
                "id": 193,
                "name": "SeasonPass_SeatIsNotFree",
                "nameLocation": "804:24:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 192,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "828:2:2"
                },
                "src": "798:33:2"
              },
              {
                "errorSelector": "d904a3de",
                "id": 195,
                "name": "SeasonPass_MaxSeatsInZone",
                "nameLocation": "842:25:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 194,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "867:2:2"
                },
                "src": "836:34:2"
              },
              {
                "errorSelector": "aed030be",
                "id": 197,
                "name": "SeasonPass_WrongInformationGiven",
                "nameLocation": "881:32:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 196,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "913:2:2"
                },
                "src": "875:41:2"
              },
              {
                "errorSelector": "b51b9281",
                "id": 203,
                "name": "SeasonPass_MoreSeasonPassesThanExpected",
                "nameLocation": "927:39:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 202,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 199,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "984:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "976:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 198,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "976:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "maxFans",
                      "nameLocation": "1008:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1000:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1000:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "966:55:2"
                },
                "src": "921:101:2"
              },
              {
                "errorSelector": "5a783225",
                "id": 205,
                "name": "SeasonPass_NotOwnerOfSeasonPass",
                "nameLocation": "1033:31:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 204,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1064:2:2"
                },
                "src": "1027:40:2"
              },
              {
                "errorSelector": "342dd540",
                "id": 207,
                "name": "SeasonPass_NotEnoughETHSent",
                "nameLocation": "1078:27:2",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 206,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1105:2:2"
                },
                "src": "1072:36:2"
              },
              {
                "canonicalName": "SeasonPassManager.Seat",
                "id": 218,
                "members": [
                  {
                    "constant": false,
                    "id": 209,
                    "mutability": "mutable",
                    "name": "seatOwner",
                    "nameLocation": "1403:9:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 218,
                    "src": "1395:17:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 208,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1395:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 211,
                    "mutability": "mutable",
                    "name": "zone",
                    "nameLocation": "1430:4:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 218,
                    "src": "1422:12:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 210,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1422:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 213,
                    "mutability": "mutable",
                    "name": "row",
                    "nameLocation": "1452:3:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 218,
                    "src": "1444:11:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 212,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1444:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 215,
                    "mutability": "mutable",
                    "name": "seatId",
                    "nameLocation": "1473:6:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 218,
                    "src": "1465:14:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 214,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1465:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 217,
                    "mutability": "mutable",
                    "name": "rowSeatNumber",
                    "nameLocation": "1497:13:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 218,
                    "src": "1489:21:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 216,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1489:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Seat",
                "nameLocation": "1380:4:2",
                "nodeType": "StructDefinition",
                "scope": 1297,
                "src": "1373:144:2",
                "visibility": "public"
              },
              {
                "canonicalName": "SeasonPassManager.SeasonPass",
                "id": 226,
                "members": [
                  {
                    "constant": false,
                    "id": 220,
                    "mutability": "mutable",
                    "name": "idOfSeasonPass",
                    "nameLocation": "1559:14:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 226,
                    "src": "1551:22:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 219,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1551:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 222,
                    "mutability": "mutable",
                    "name": "seatId",
                    "nameLocation": "1591:6:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 226,
                    "src": "1583:14:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 221,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1583:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 225,
                    "mutability": "mutable",
                    "name": "matchesGoneToStadium",
                    "nameLocation": "1614:20:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 226,
                    "src": "1607:27:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    },
                    "typeName": {
                      "baseType": {
                        "id": 223,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1607:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 224,
                      "nodeType": "ArrayTypeName",
                      "src": "1607:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                        "typeString": "bool[]"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "SeasonPass",
                "nameLocation": "1530:10:2",
                "nodeType": "StructDefinition",
                "scope": 1297,
                "src": "1523:118:2",
                "visibility": "public"
              },
              {
                "canonicalName": "SeasonPassManager.Stages",
                "id": 232,
                "members": [
                  {
                    "id": 227,
                    "name": "PRE_CAMPAIGN",
                    "nameLocation": "1928:12:2",
                    "nodeType": "EnumValue",
                    "src": "1928:12:2"
                  },
                  {
                    "id": 228,
                    "name": "RENEWALS",
                    "nameLocation": "1950:8:2",
                    "nodeType": "EnumValue",
                    "src": "1950:8:2"
                  },
                  {
                    "id": 229,
                    "name": "SEAT_CHANGES",
                    "nameLocation": "1968:12:2",
                    "nodeType": "EnumValue",
                    "src": "1968:12:2"
                  },
                  {
                    "id": 230,
                    "name": "NEW_FANS",
                    "nameLocation": "1990:8:2",
                    "nodeType": "EnumValue",
                    "src": "1990:8:2"
                  },
                  {
                    "id": 231,
                    "name": "REGULAR_SEASON",
                    "nameLocation": "2008:14:2",
                    "nodeType": "EnumValue",
                    "src": "2008:14:2"
                  }
                ],
                "name": "Stages",
                "nameLocation": "1911:6:2",
                "nodeType": "EnumDefinition",
                "src": "1906:122:2"
              },
              {
                "anonymous": false,
                "eventSelector": "77a6dd625818e34858e891b2d5fd349ffb267406c2493cb9eb89226a916b2ec9",
                "id": 238,
                "name": "SeasonPass_NumberOfSeatsModified",
                "nameLocation": "2299:32:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 237,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 234,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "oldnumberOfMaxSeats",
                      "nameLocation": "2357:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "2341:35:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 233,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2341:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 236,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newnumberOfMaxSeats",
                      "nameLocation": "2402:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 238,
                      "src": "2386:35:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2386:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2331:96:2"
                },
                "src": "2293:135:2"
              },
              {
                "anonymous": false,
                "eventSelector": "c9656f8489dc26504b173a59b758f064fbd974cfb6eefcaea966becb3932c5df",
                "id": 240,
                "name": "SeasonPass_UpdatedSeatAvailability",
                "nameLocation": "2439:34:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 239,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2473:2:2"
                },
                "src": "2433:43:2"
              },
              {
                "anonymous": false,
                "eventSelector": "e54868fe099badb3cefe6e406fea76657c55adaa5de7e4d1f02167b58b11818e",
                "id": 246,
                "name": "SeasonPass_UpdatedSympathizerFee",
                "nameLocation": "2487:32:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 245,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 242,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "oldSympathizerFee",
                      "nameLocation": "2545:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "2529:33:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2529:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 244,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newSympathizerFee",
                      "nameLocation": "2588:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "2572:33:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2519:92:2"
                },
                "src": "2481:131:2"
              },
              {
                "anonymous": false,
                "eventSelector": "281b1a7ce2124fa9ef9db114787c7095aa305f54a1f01cb99292600edc2eb33f",
                "id": 254,
                "name": "SeasonPass_NewSeasonStarted",
                "nameLocation": "2623:27:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 253,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 248,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "numberOfMaxFans_",
                      "nameLocation": "2676:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2660:32:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 247,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2660:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 250,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "numberOfMaxSeats_",
                      "nameLocation": "2718:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2702:33:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 249,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2702:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 252,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "numberOfZones_",
                      "nameLocation": "2761:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2745:30:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2745:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2650:131:2"
                },
                "src": "2617:165:2"
              },
              {
                "anonymous": false,
                "eventSelector": "71aab34a415059d532f4e24230661509e798c64363e2ccac9035e079eb4061ee",
                "id": 259,
                "name": "SeasonPass_AdvancedTheStage",
                "nameLocation": "2793:27:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 258,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 257,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "newstage",
                      "nameLocation": "2828:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 259,
                      "src": "2821:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stages_$232",
                        "typeString": "enum SeasonPassManager.Stages"
                      },
                      "typeName": {
                        "id": 256,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 255,
                          "name": "Stages",
                          "nameLocations": [
                            "2821:6:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 232,
                          "src": "2821:6:2"
                        },
                        "referencedDeclaration": 232,
                        "src": "2821:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2820:17:2"
                },
                "src": "2787:51:2"
              },
              {
                "anonymous": false,
                "eventSelector": "f09da8ee8132f2040bb5fd71c05e9d4635de62be74f8660e709ff94f6e45565f",
                "id": 261,
                "name": "SeasonPass_UpdatedNumberOfSeasonPassIds",
                "nameLocation": "2849:39:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 260,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2888:2:2"
                },
                "src": "2843:48:2"
              },
              {
                "anonymous": false,
                "eventSelector": "a41bbd204712ea9be93267b44c5544db8229fd7cec900aac719f55291d557644",
                "id": 263,
                "name": "SeasonPass_DeletedOldNumberOfSeasonPassIds",
                "nameLocation": "2902:42:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 262,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2944:2:2"
                },
                "src": "2896:51:2"
              },
              {
                "anonymous": false,
                "eventSelector": "33c7e8e9c337d719cb5b77e234738909700babd754500921e7e7c6def37eebd6",
                "id": 265,
                "name": "SeasonPass_SetSeatAvailability",
                "nameLocation": "2958:30:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 264,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2988:2:2"
                },
                "src": "2952:39:2"
              },
              {
                "anonymous": false,
                "eventSelector": "3c54732e566c2a9da22c2aa07c9e17e362623bf8e7abded1f8d8883761e3b54f",
                "id": 271,
                "name": "SeasonPass_NewSympathizer",
                "nameLocation": "3002:25:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 270,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 267,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "sympathizer",
                      "nameLocation": "3053:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "3037:27:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 266,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3037:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 269,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "numberOfSympathizers",
                      "nameLocation": "3090:20:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "3074:36:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 268,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3074:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3027:89:2"
                },
                "src": "2996:121:2"
              },
              {
                "anonymous": false,
                "eventSelector": "21d3f636f7858c1a273768fd4a734f1d284edb19ab018d83636e6994ed0d6224",
                "id": 277,
                "name": "SeasonPass_NewFan",
                "nameLocation": "3128:17:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 276,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 273,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "fan",
                      "nameLocation": "3162:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "3146:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3146:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 275,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "numberOfFans",
                      "nameLocation": "3183:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "3167:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3167:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3145:51:2"
                },
                "src": "3122:75:2"
              },
              {
                "anonymous": false,
                "eventSelector": "c7324aee87c9dfe69717d1eb6e1174b61b348523698e7e4a9f917ccb8f8f5dc3",
                "id": 281,
                "name": "SeasonPass_ChangeSeat",
                "nameLocation": "3208:21:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 280,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 279,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "fan",
                      "nameLocation": "3246:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 281,
                      "src": "3230:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3230:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3229:21:2"
                },
                "src": "3202:49:2"
              },
              {
                "constant": false,
                "id": 283,
                "mutability": "mutable",
                "name": "seasonNumber",
                "nameLocation": "3532:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "3516:28:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 282,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3516:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 285,
                "mutability": "mutable",
                "name": "numberOfMaxFans",
                "nameLocation": "3567:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "3551:31:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 284,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3551:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 287,
                "mutability": "mutable",
                "name": "numberOfCurrentFans",
                "nameLocation": "3604:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "3588:35:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 286,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3588:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 289,
                "mutability": "mutable",
                "name": "numberOfMaxSeats",
                "nameLocation": "3646:16:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "3630:32:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 288,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3630:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 291,
                "mutability": "mutable",
                "name": "numberOfSympathizer",
                "nameLocation": "3685:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "3669:35:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 290,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3669:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 293,
                "mutability": "mutable",
                "name": "sympathizerFee",
                "nameLocation": "3788:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "3772:30:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 292,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3772:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 296,
                "mutability": "constant",
                "name": "SYMPATHIZER_OFFSET",
                "nameLocation": "4375:18:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "4350:53:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 294,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4350:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "31303030303030",
                  "id": 295,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4396:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1000000_by_1",
                    "typeString": "int_const 1000000"
                  },
                  "value": "1000000"
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 298,
                "mutability": "mutable",
                "name": "numberOfZones",
                "nameLocation": "4426:13:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "4410:29:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 297,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4410:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 301,
                "mutability": "mutable",
                "name": "seasonStages",
                "nameLocation": "4460:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "4445:27:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Stages_$232",
                  "typeString": "enum SeasonPassManager.Stages"
                },
                "typeName": {
                  "id": 300,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 299,
                    "name": "Stages",
                    "nameLocations": [
                      "4445:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 232,
                    "src": "4445:6:2"
                  },
                  "referencedDeclaration": 232,
                  "src": "4445:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stages_$232",
                    "typeString": "enum SeasonPassManager.Stages"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 305,
                "mutability": "mutable",
                "name": "s_MaxAvailableSeats",
                "nameLocation": "4719:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "4671:67:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "typeName": {
                  "id": 304,
                  "keyName": "zone",
                  "keyNameLocation": "4687:4:2",
                  "keyType": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4679:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4671:47:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueName": "availableSeats",
                  "valueNameLocation": "4703:14:2",
                  "valueType": {
                    "id": 303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4695:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 310,
                "mutability": "mutable",
                "name": "s_SeasonPasses",
                "nameLocation": "4779:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "4744:49:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                  "typeString": "mapping(address => struct SeasonPassManager.SeasonPass)"
                },
                "typeName": {
                  "id": 309,
                  "keyName": "fan",
                  "keyNameLocation": "4760:3:2",
                  "keyType": {
                    "id": 306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4744:34:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                    "typeString": "mapping(address => struct SeasonPassManager.SeasonPass)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 308,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 307,
                      "name": "SeasonPass",
                      "nameLocations": [
                        "4767:10:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 226,
                      "src": "4767:10:2"
                    },
                    "referencedDeclaration": 226,
                    "src": "4767:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SeasonPass_$226_storage_ptr",
                      "typeString": "struct SeasonPassManager.SeasonPass"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 315,
                "mutability": "mutable",
                "name": "s_Seats",
                "nameLocation": "4831:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 1297,
                "src": "4799:39:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                  "typeString": "mapping(uint256 => struct SeasonPassManager.Seat)"
                },
                "typeName": {
                  "id": 314,
                  "keyName": "seatId",
                  "keyNameLocation": "4815:6:2",
                  "keyType": {
                    "id": 311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4807:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "4799:31:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                    "typeString": "mapping(uint256 => struct SeasonPassManager.Seat)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 313,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 312,
                      "name": "Seat",
                      "nameLocations": [
                        "4825:4:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 218,
                      "src": "4825:4:2"
                    },
                    "referencedDeclaration": 218,
                    "src": "4825:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                      "typeString": "struct SeasonPassManager.Seat"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 338,
                  "nodeType": "Block",
                  "src": "4907:185:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_Stages_$232",
                                  "typeString": "enum SeasonPassManager.Stages"
                                },
                                "id": 324,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 322,
                                  "name": "seasonStages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 301,
                                  "src": "4935:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Stages_$232",
                                    "typeString": "enum SeasonPassManager.Stages"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 323,
                                  "name": "stage_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 318,
                                  "src": "4950:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Stages_$232",
                                    "typeString": "enum SeasonPassManager.Stages"
                                  }
                                },
                                "src": "4935:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 325,
                                "name": "possibleAfter_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "4960:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4935:39:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 327,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4934:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 328,
                            "name": "seasonStages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "4979:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stages_$232",
                              "typeString": "enum SeasonPassManager.Stages"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 329,
                            "name": "stage_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 318,
                            "src": "4995:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stages_$232",
                              "typeString": "enum SeasonPassManager.Stages"
                            }
                          },
                          "src": "4979:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4934:67:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 336,
                      "nodeType": "IfStatement",
                      "src": "4917:158:2",
                      "trueBody": {
                        "id": 335,
                        "nodeType": "Block",
                        "src": "5012:63:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 332,
                                "name": "SeasonPass_CalledInWrongStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "5033:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5033:31:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 334,
                            "nodeType": "RevertStatement",
                            "src": "5026:38:2"
                          }
                        ]
                      }
                    },
                    {
                      "id": 337,
                      "nodeType": "PlaceholderStatement",
                      "src": "5084:1:2"
                    }
                  ]
                },
                "id": 339,
                "name": "onlyInGivenStage",
                "nameLocation": "4854:16:2",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 321,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "stage_",
                      "nameLocation": "4878:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "4871:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stages_$232",
                        "typeString": "enum SeasonPassManager.Stages"
                      },
                      "typeName": {
                        "id": 317,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 316,
                          "name": "Stages",
                          "nameLocations": [
                            "4871:6:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 232,
                          "src": "4871:6:2"
                        },
                        "referencedDeclaration": 232,
                        "src": "4871:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 320,
                      "mutability": "mutable",
                      "name": "possibleAfter_",
                      "nameLocation": "4891:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "4886:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4886:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4870:36:2"
                },
                "src": "4845:247:2",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 381,
                  "nodeType": "Block",
                  "src": "5301:257:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 356,
                          "name": "seasonNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "5311:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 357,
                          "name": "seasonNumber_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 341,
                          "src": "5326:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5311:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 359,
                      "nodeType": "ExpressionStatement",
                      "src": "5311:28:2"
                    },
                    {
                      "expression": {
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 360,
                          "name": "numberOfMaxFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "5349:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 361,
                          "name": "numberOfMaxFans_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 343,
                          "src": "5367:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5349:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 363,
                      "nodeType": "ExpressionStatement",
                      "src": "5349:34:2"
                    },
                    {
                      "expression": {
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 364,
                          "name": "numberOfMaxSeats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "5393:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 365,
                          "name": "numberOfMaxSeats_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "5412:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5393:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 367,
                      "nodeType": "ExpressionStatement",
                      "src": "5393:36:2"
                    },
                    {
                      "expression": {
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 368,
                          "name": "numberOfZones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "5439:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 369,
                          "name": "numberOfZones_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "5455:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5439:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 371,
                      "nodeType": "ExpressionStatement",
                      "src": "5439:30:2"
                    },
                    {
                      "expression": {
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 372,
                          "name": "sympathizerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "5479:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 373,
                          "name": "sympathizerFee_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "5496:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5479:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 375,
                      "nodeType": "ExpressionStatement",
                      "src": "5479:32:2"
                    },
                    {
                      "expression": {
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 376,
                          "name": "seasonStages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "5521:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 377,
                            "name": "Stages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "5536:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                              "typeString": "type(enum SeasonPassManager.Stages)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5543:8:2",
                          "memberName": "RENEWALS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 228,
                          "src": "5536:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "src": "5521:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      "id": 380,
                      "nodeType": "ExpressionStatement",
                      "src": "5521:30:2"
                    }
                  ]
                },
                "id": 382,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5289:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5293:6:2",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5289:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 354,
                    "kind": "baseConstructorSpecifier",
                    "modifierName": {
                      "id": 351,
                      "name": "Ownable",
                      "nameLocations": [
                        "5281:7:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 147,
                      "src": "5281:7:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5281:19:2"
                  }
                ],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 350,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 341,
                      "mutability": "mutable",
                      "name": "seasonNumber_",
                      "nameLocation": "5127:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "5119:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5119:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 343,
                      "mutability": "mutable",
                      "name": "numberOfMaxFans_",
                      "nameLocation": "5158:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "5150:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5150:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 345,
                      "mutability": "mutable",
                      "name": "numberOfMaxSeats_",
                      "nameLocation": "5192:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "5184:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5184:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 347,
                      "mutability": "mutable",
                      "name": "numberOfZones_",
                      "nameLocation": "5227:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "5219:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5219:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "sympathizerFee_",
                      "nameLocation": "5259:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 382,
                      "src": "5251:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5251:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5109:171:2"
                },
                "returnParameters": {
                  "id": 355,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5301:0:2"
                },
                "scope": 1297,
                "src": "5098:460:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 469,
                  "nodeType": "Block",
                  "src": "5849:671:2",
                  "statements": [
                    {
                      "assignments": [
                        394
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 394,
                          "mutability": "mutable",
                          "name": "oldNumberOfMaxSeats",
                          "nameLocation": "5867:19:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 469,
                          "src": "5859:27:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 393,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5859:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 396,
                      "initialValue": {
                        "id": 395,
                        "name": "numberOfMaxSeats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "5889:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5859:46:2"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 397,
                          "name": "isDeleting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 388,
                          "src": "5919:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5933:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5919:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 462,
                        "nodeType": "Block",
                        "src": "6135:259:2",
                        "statements": [
                          {
                            "body": {
                              "id": 449,
                              "nodeType": "Block",
                              "src": "6188:74:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 438,
                                        "name": "s_Seats",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 315,
                                        "src": "6206:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                          "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                                        }
                                      },
                                      "id": 443,
                                      "indexExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 439,
                                            "name": "seatInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 386,
                                            "src": "6214:8:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                            }
                                          },
                                          "id": 441,
                                          "indexExpression": {
                                            "id": 440,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 429,
                                            "src": "6223:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6214:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                            "typeString": "struct SeasonPassManager.Seat memory"
                                          }
                                        },
                                        "id": 442,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6226:6:2",
                                        "memberName": "seatId",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 215,
                                        "src": "6214:18:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6206:27:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Seat_$218_storage",
                                        "typeString": "struct SeasonPassManager.Seat storage ref"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "baseExpression": {
                                        "id": 444,
                                        "name": "seatInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "6236:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                        }
                                      },
                                      "id": 446,
                                      "indexExpression": {
                                        "id": 445,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 429,
                                        "src": "6245:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6236:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                        "typeString": "struct SeasonPassManager.Seat memory"
                                      }
                                    },
                                    "src": "6206:41:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Seat_$218_storage",
                                      "typeString": "struct SeasonPassManager.Seat storage ref"
                                    }
                                  },
                                  "id": 448,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6206:41:2"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 431,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 429,
                                "src": "6162:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 432,
                                  "name": "seatInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "6166:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                  }
                                },
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6175:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6166:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6162:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 450,
                            "initializationExpression": {
                              "assignments": [
                                429
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 429,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "6159:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 450,
                                  "src": "6154:6:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 428,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6154:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 430,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6154:6:2"
                            },
                            "isSimpleCounterLoop": true,
                            "loopExpression": {
                              "expression": {
                                "id": 436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "6183:3:2",
                                "subExpression": {
                                  "id": 435,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 429,
                                  "src": "6183:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 437,
                              "nodeType": "ExpressionStatement",
                              "src": "6183:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "6149:113:2"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 451,
                                  "name": "seatInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "6279:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                  }
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6288:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6279:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 453,
                                "name": "numberOfMaxSeats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 289,
                                "src": "6298:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6279:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 461,
                            "nodeType": "IfStatement",
                            "src": "6275:109:2",
                            "trueBody": {
                              "id": 460,
                              "nodeType": "Block",
                              "src": "6316:68:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 455,
                                      "name": "numberOfMaxSeats",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 289,
                                      "src": "6334:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "expression": {
                                        "id": 456,
                                        "name": "seatInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "6354:8:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                        }
                                      },
                                      "id": 457,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6363:6:2",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "6354:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6334:35:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 459,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6334:35:2"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "id": 463,
                      "nodeType": "IfStatement",
                      "src": "5915:479:2",
                      "trueBody": {
                        "id": 427,
                        "nodeType": "Block",
                        "src": "5939:190:2",
                        "statements": [
                          {
                            "body": {
                              "id": 420,
                              "nodeType": "Block",
                              "src": "5992:78:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 410,
                                          "name": "s_Seats",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 315,
                                          "src": "6010:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                            "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                                          }
                                        },
                                        "id": 415,
                                        "indexExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 411,
                                              "name": "seatInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 386,
                                              "src": "6018:8:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                              }
                                            },
                                            "id": 413,
                                            "indexExpression": {
                                              "id": 412,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 401,
                                              "src": "6027:1:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6018:11:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                              "typeString": "struct SeasonPassManager.Seat memory"
                                            }
                                          },
                                          "id": 414,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6030:6:2",
                                          "memberName": "seatId",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 215,
                                          "src": "6018:18:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6010:27:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Seat_$218_storage",
                                          "typeString": "struct SeasonPassManager.Seat storage ref"
                                        }
                                      },
                                      "id": 416,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "6038:13:2",
                                      "memberName": "rowSeatNumber",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 217,
                                      "src": "6010:41:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "30",
                                      "id": 417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6054:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "6010:45:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 419,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6010:45:2"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 403,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 401,
                                "src": "5966:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 404,
                                  "name": "seatInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "5970:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                  }
                                },
                                "id": 405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5979:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "5970:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5966:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 421,
                            "initializationExpression": {
                              "assignments": [
                                401
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 401,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "5963:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 421,
                                  "src": "5958:6:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 400,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5958:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 402,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5958:6:2"
                            },
                            "isSimpleCounterLoop": true,
                            "loopExpression": {
                              "expression": {
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "5987:3:2",
                                "subExpression": {
                                  "id": 407,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 401,
                                  "src": "5987:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 409,
                              "nodeType": "ExpressionStatement",
                              "src": "5987:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "5953:117:2"
                          },
                          {
                            "expression": {
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 422,
                                "name": "numberOfMaxSeats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 289,
                                "src": "6083:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "-=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 423,
                                  "name": "seatInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 386,
                                  "src": "6103:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct SeasonPassManager.Seat memory[] memory"
                                  }
                                },
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6112:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6103:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6083:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 426,
                            "nodeType": "ExpressionStatement",
                            "src": "6083:35:2"
                          }
                        ]
                      }
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 465,
                            "name": "oldNumberOfMaxSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "6454:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 466,
                            "name": "numberOfMaxSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "6487:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 464,
                          "name": "SeasonPass_NumberOfSeatsModified",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "6408:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256)"
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6408:105:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 468,
                      "nodeType": "EmitStatement",
                      "src": "6403:110:2"
                    }
                  ]
                },
                "functionSelector": "9b4c578d",
                "id": 470,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 391,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 390,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "5839:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "5839:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5839:9:2"
                  }
                ],
                "name": "setSeatInfo",
                "nameLocation": "5755:11:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 389,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "seatInfo",
                      "nameLocation": "5790:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "5776:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Seat_$218_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct SeasonPassManager.Seat[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 384,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 383,
                            "name": "Seat",
                            "nameLocations": [
                              "5776:4:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 218,
                            "src": "5776:4:2"
                          },
                          "referencedDeclaration": 218,
                          "src": "5776:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                            "typeString": "struct SeasonPassManager.Seat"
                          }
                        },
                        "id": 385,
                        "nodeType": "ArrayTypeName",
                        "src": "5776:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Seat_$218_storage_$dyn_storage_ptr",
                          "typeString": "struct SeasonPassManager.Seat[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 388,
                      "mutability": "mutable",
                      "name": "isDeleting",
                      "nameLocation": "5813:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 470,
                      "src": "5808:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 387,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5808:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5766:63:2"
                },
                "returnParameters": {
                  "id": 392,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5849:0:2"
                },
                "scope": 1297,
                "src": "5746:774:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 512,
                  "nodeType": "Block",
                  "src": "6731:277:2",
                  "statements": [
                    {
                      "body": {
                        "id": 507,
                        "nodeType": "Block",
                        "src": "6801:150:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 489,
                                  "name": "s_MaxAvailableSeats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "6815:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 491,
                                "indexExpression": {
                                  "id": 490,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 479,
                                  "src": "6835:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "6815:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 503,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 496,
                                            "name": "s_MaxAvailableSeats",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 305,
                                            "src": "6872:19:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                              "typeString": "mapping(uint256 => uint256)"
                                            }
                                          },
                                          "id": 498,
                                          "indexExpression": {
                                            "id": 497,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 479,
                                            "src": "6892:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "6872:22:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 495,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6865:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int256_$",
                                          "typeString": "type(int256)"
                                        },
                                        "typeName": {
                                          "id": 494,
                                          "name": "int256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6865:6:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6865:30:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 500,
                                        "name": "variationOfAvailableSeats",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 473,
                                        "src": "6898:25:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                                          "typeString": "int256[] memory"
                                        }
                                      },
                                      "id": 502,
                                      "indexExpression": {
                                        "id": 501,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 479,
                                        "src": "6924:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6898:28:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "src": "6865:61:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6840:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 492,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6840:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6840:100:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6815:125:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 506,
                            "nodeType": "ExpressionStatement",
                            "src": "6815:125:2"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 482,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "6758:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 483,
                            "name": "variationOfAvailableSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "6762:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                              "typeString": "int256[] memory"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6788:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6762:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6758:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 508,
                      "initializationExpression": {
                        "assignments": [
                          479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 479,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "6751:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 508,
                            "src": "6746:6:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 478,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6746:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 481,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6755:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6746:10:2"
                      },
                      "isSimpleCounterLoop": true,
                      "loopExpression": {
                        "expression": {
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6796:3:2",
                          "subExpression": {
                            "id": 486,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "6796:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 488,
                        "nodeType": "ExpressionStatement",
                        "src": "6796:3:2"
                      },
                      "nodeType": "ForStatement",
                      "src": "6741:210:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 509,
                          "name": "SeasonPass_UpdatedSeatAvailability",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "6965:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6965:36:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 511,
                      "nodeType": "EmitStatement",
                      "src": "6960:41:2"
                    }
                  ]
                },
                "functionSelector": "49c9c399",
                "id": 513,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 476,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 475,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "6721:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "6721:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "6721:9:2"
                  }
                ],
                "name": "modifyAvailableSeats",
                "nameLocation": "6634:20:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 474,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "variationOfAvailableSeats",
                      "nameLocation": "6680:25:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "6664:41:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 471,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6664:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 472,
                        "nodeType": "ArrayTypeName",
                        "src": "6664:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                          "typeString": "int256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6654:57:2"
                },
                "returnParameters": {
                  "id": 477,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6731:0:2"
                },
                "scope": 1297,
                "src": "6625:383:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 533,
                  "nodeType": "Block",
                  "src": "7077:209:2",
                  "statements": [
                    {
                      "assignments": [
                        521
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 521,
                          "mutability": "mutable",
                          "name": "oldSympathizerFee",
                          "nameLocation": "7095:17:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 533,
                          "src": "7087:25:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 520,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7087:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 523,
                      "initialValue": {
                        "id": 522,
                        "name": "sympathizerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "7115:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7087:42:2"
                    },
                    {
                      "expression": {
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 524,
                          "name": "sympathizerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "7139:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 525,
                          "name": "newfee_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "7156:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7139:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 527,
                      "nodeType": "ExpressionStatement",
                      "src": "7139:24:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 529,
                            "name": "oldSympathizerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "7224:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 530,
                            "name": "sympathizerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "7255:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 528,
                          "name": "SeasonPass_UpdatedSympathizerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "7178:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256)"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7178:101:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 532,
                      "nodeType": "EmitStatement",
                      "src": "7173:106:2"
                    }
                  ]
                },
                "functionSelector": "18909c28",
                "id": 534,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 518,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 517,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "7067:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "7067:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7067:9:2"
                  }
                ],
                "name": "setSympathizerFee",
                "nameLocation": "7023:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 516,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 515,
                      "mutability": "mutable",
                      "name": "newfee_",
                      "nameLocation": "7049:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "7041:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 514,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7041:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7040:17:2"
                },
                "returnParameters": {
                  "id": 519,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7077:0:2"
                },
                "scope": 1297,
                "src": "7014:272:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 571,
                  "nodeType": "Block",
                  "src": "7701:340:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "7711:14:2",
                        "subExpression": {
                          "id": 545,
                          "name": "seasonNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 283,
                          "src": "7711:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 547,
                      "nodeType": "ExpressionStatement",
                      "src": "7711:14:2"
                    },
                    {
                      "expression": {
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 548,
                          "name": "numberOfMaxFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "7735:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 549,
                          "name": "numberOfMaxFans_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "7753:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7735:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 551,
                      "nodeType": "ExpressionStatement",
                      "src": "7735:34:2"
                    },
                    {
                      "expression": {
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 552,
                          "name": "numberOfMaxSeats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "7779:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 553,
                          "name": "numberOfMaxSeats_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 538,
                          "src": "7798:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7779:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 555,
                      "nodeType": "ExpressionStatement",
                      "src": "7779:36:2"
                    },
                    {
                      "expression": {
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 556,
                          "name": "numberOfZones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "7825:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 557,
                          "name": "numberOfZones_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "7841:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7825:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 559,
                      "nodeType": "ExpressionStatement",
                      "src": "7825:30:2"
                    },
                    {
                      "expression": {
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 560,
                          "name": "seasonStages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "7865:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 561,
                            "name": "Stages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "7880:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                              "typeString": "type(enum SeasonPassManager.Stages)"
                            }
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7887:8:2",
                          "memberName": "RENEWALS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 228,
                          "src": "7880:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "src": "7865:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      "id": 564,
                      "nodeType": "ExpressionStatement",
                      "src": "7865:30:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 566,
                            "name": "numberOfMaxFans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "7951:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 567,
                            "name": "numberOfMaxSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "7980:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 568,
                            "name": "numberOfZones_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "8010:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 565,
                          "name": "SeasonPass_NewSeasonStarted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "7910:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256,uint256)"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7910:124:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 570,
                      "nodeType": "EmitStatement",
                      "src": "7905:129:2"
                    }
                  ]
                },
                "functionSelector": "565da7ec",
                "id": 572,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 543,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 542,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "7691:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "7691:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7691:9:2"
                  }
                ],
                "name": "startNewSeason",
                "nameLocation": "7560:14:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 541,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 536,
                      "mutability": "mutable",
                      "name": "numberOfMaxFans_",
                      "nameLocation": "7592:16:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 572,
                      "src": "7584:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 535,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7584:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 538,
                      "mutability": "mutable",
                      "name": "numberOfMaxSeats_",
                      "nameLocation": "7626:17:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 572,
                      "src": "7618:25:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 537,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7618:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 540,
                      "mutability": "mutable",
                      "name": "numberOfZones_",
                      "nameLocation": "7661:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 572,
                      "src": "7653:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 539,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7653:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7574:107:2"
                },
                "returnParameters": {
                  "id": 544,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7701:0:2"
                },
                "scope": 1297,
                "src": "7551:490:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 601,
                  "nodeType": "Block",
                  "src": "8090:236:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 577,
                          "name": "seasonStages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "8104:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 578,
                            "name": "Stages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "8120:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                              "typeString": "type(enum SeasonPassManager.Stages)"
                            }
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8127:14:2",
                          "memberName": "REGULAR_SEASON",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 231,
                          "src": "8120:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "src": "8104:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 585,
                      "nodeType": "IfStatement",
                      "src": "8100:106:2",
                      "trueBody": {
                        "id": 584,
                        "nodeType": "Block",
                        "src": "8143:63:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 581,
                                "name": "SeasonPass_CalledInWrongStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "8164:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8164:31:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 583,
                            "nodeType": "RevertStatement",
                            "src": "8157:38:2"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 586,
                          "name": "seasonStages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "8215:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 593,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 590,
                                    "name": "seasonStages",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 301,
                                    "src": "8245:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Stages_$232",
                                      "typeString": "enum SeasonPassManager.Stages"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Stages_$232",
                                      "typeString": "enum SeasonPassManager.Stages"
                                    }
                                  ],
                                  "id": 589,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8237:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 588,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8237:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8237:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8261:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "8237:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 587,
                            "name": "Stages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "8230:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                              "typeString": "type(enum SeasonPassManager.Stages)"
                            }
                          },
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8230:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$232",
                            "typeString": "enum SeasonPassManager.Stages"
                          }
                        },
                        "src": "8215:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      "id": 596,
                      "nodeType": "ExpressionStatement",
                      "src": "8215:48:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 598,
                            "name": "seasonStages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "8306:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Stages_$232",
                              "typeString": "enum SeasonPassManager.Stages"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Stages_$232",
                              "typeString": "enum SeasonPassManager.Stages"
                            }
                          ],
                          "id": 597,
                          "name": "SeasonPass_AdvancedTheStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 259,
                          "src": "8278:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Stages_$232_$returns$__$",
                            "typeString": "function (enum SeasonPassManager.Stages)"
                          }
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8278:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 600,
                      "nodeType": "EmitStatement",
                      "src": "8273:46:2"
                    }
                  ]
                },
                "functionSelector": "c33f48fd",
                "id": 602,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 575,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 574,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "8080:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "8080:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8080:9:2"
                  }
                ],
                "name": "advanceStage",
                "nameLocation": "8056:12:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 573,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8068:2:2"
                },
                "returnParameters": {
                  "id": 576,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8090:0:2"
                },
                "scope": 1297,
                "src": "8047:279:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 658,
                  "nodeType": "Block",
                  "src": "8793:417:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 615,
                            "name": "fans_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "8807:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8813:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8807:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 617,
                          "name": "numberOfMaxFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "8822:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8807:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 626,
                      "nodeType": "IfStatement",
                      "src": "8803:184:2",
                      "trueBody": {
                        "id": 625,
                        "nodeType": "Block",
                        "src": "8839:148:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 620,
                                    "name": "fans_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 605,
                                    "src": "8917:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8923:6:2",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "8917:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 622,
                                  "name": "numberOfMaxFans",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 285,
                                  "src": "8947:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 619,
                                "name": "SeasonPass_MoreSeasonPassesThanExpected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 203,
                                "src": "8860:39:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256) pure"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8860:116:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 624,
                            "nodeType": "RevertStatement",
                            "src": "8853:123:2"
                          }
                        ]
                      }
                    },
                    {
                      "body": {
                        "id": 648,
                        "nodeType": "Block",
                        "src": "9032:72:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 637,
                                    "name": "s_SeasonPasses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 310,
                                    "src": "9046:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                      "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                    }
                                  },
                                  "id": 641,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 638,
                                      "name": "fans_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 605,
                                      "src": "9061:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 640,
                                    "indexExpression": {
                                      "id": 639,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 628,
                                      "src": "9067:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9061:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9046:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                    "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                                  }
                                },
                                "id": 642,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "9071:14:2",
                                "memberName": "idOfSeasonPass",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 220,
                                "src": "9046:39:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 643,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 628,
                                  "src": "9088:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9092:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9088:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9046:47:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 647,
                            "nodeType": "ExpressionStatement",
                            "src": "9046:47:2"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 630,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 628,
                          "src": "9009:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 631,
                            "name": "fans_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "9013:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9019:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9013:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9009:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 649,
                      "initializationExpression": {
                        "assignments": [
                          628
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 628,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "9006:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "9001:6:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 627,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9001:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 629,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9001:6:2"
                      },
                      "isSimpleCounterLoop": true,
                      "loopExpression": {
                        "expression": {
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9027:3:2",
                          "subExpression": {
                            "id": 634,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "9027:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "9027:3:2"
                      },
                      "nodeType": "ForStatement",
                      "src": "8996:108:2"
                    },
                    {
                      "expression": {
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 650,
                          "name": "numberOfCurrentFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "9113:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 651,
                            "name": "fans_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "9135:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9141:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9135:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9113:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 654,
                      "nodeType": "ExpressionStatement",
                      "src": "9113:34:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 655,
                          "name": "SeasonPass_UpdatedNumberOfSeasonPassIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "9162:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9162:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 657,
                      "nodeType": "EmitStatement",
                      "src": "9157:46:2"
                    }
                  ]
                },
                "functionSelector": "d5f8f346",
                "id": 659,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 608,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 607,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "8742:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "8742:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8742:9:2"
                  },
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 610,
                          "name": "Stages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "8769:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                            "typeString": "type(enum SeasonPassManager.Stages)"
                          }
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "8776:8:2",
                        "memberName": "RENEWALS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 228,
                        "src": "8769:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8786:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 613,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 609,
                      "name": "onlyInGivenStage",
                      "nameLocations": [
                        "8752:16:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "8752:16:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8752:40:2"
                  }
                ],
                "name": "changeNumberOfSeasonIds",
                "nameLocation": "8671:23:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 606,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "fans_",
                      "nameLocation": "8721:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "8704:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 603,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8704:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 604,
                        "nodeType": "ArrayTypeName",
                        "src": "8704:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8694:38:2"
                },
                "returnParameters": {
                  "id": 614,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8793:0:2"
                },
                "scope": 1297,
                "src": "8662:548:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 706,
                  "nodeType": "Block",
                  "src": "9347:232:2",
                  "statements": [
                    {
                      "body": {
                        "id": 701,
                        "nodeType": "Block",
                        "src": "9397:117:2",
                        "statements": [
                          {
                            "expression": {
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 683,
                                    "name": "s_SeasonPasses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 310,
                                    "src": "9411:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                      "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                    }
                                  },
                                  "id": 687,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 684,
                                      "name": "fans_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9426:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 686,
                                    "indexExpression": {
                                      "id": 685,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 673,
                                      "src": "9432:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9426:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9411:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                    "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                                  }
                                },
                                "id": 688,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "9436:14:2",
                                "memberName": "idOfSeasonPass",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 220,
                                "src": "9411:39:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "30",
                                "id": 689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9453:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9411:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 691,
                            "nodeType": "ExpressionStatement",
                            "src": "9411:43:2"
                          },
                          {
                            "expression": {
                              "id": 699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 692,
                                    "name": "s_SeasonPasses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 310,
                                    "src": "9468:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                      "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                    }
                                  },
                                  "id": 696,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 693,
                                      "name": "fans_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 662,
                                      "src": "9483:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 695,
                                    "indexExpression": {
                                      "id": 694,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 673,
                                      "src": "9489:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9483:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9468:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                    "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                                  }
                                },
                                "id": 697,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "9493:6:2",
                                "memberName": "seatId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 222,
                                "src": "9468:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "30",
                                "id": 698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9502:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "9468:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 700,
                            "nodeType": "ExpressionStatement",
                            "src": "9468:35:2"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 676,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 673,
                          "src": "9374:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 677,
                            "name": "fans_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "9378:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9384:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9378:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9374:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 702,
                      "initializationExpression": {
                        "assignments": [
                          673
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 673,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "9367:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 702,
                            "src": "9362:6:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 672,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9362:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 675,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9371:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9362:10:2"
                      },
                      "isSimpleCounterLoop": true,
                      "loopExpression": {
                        "expression": {
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9392:3:2",
                          "subExpression": {
                            "id": 680,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 673,
                            "src": "9392:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 682,
                        "nodeType": "ExpressionStatement",
                        "src": "9392:3:2"
                      },
                      "nodeType": "ForStatement",
                      "src": "9357:157:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 703,
                          "name": "SeasonPass_DeletedOldNumberOfSeasonPassIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "9528:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9528:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 705,
                      "nodeType": "EmitStatement",
                      "src": "9523:49:2"
                    }
                  ]
                },
                "functionSelector": "547c2f83",
                "id": 707,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 665,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 664,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "9296:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "9296:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "9296:9:2"
                  },
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 667,
                          "name": "Stages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "9323:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                            "typeString": "type(enum SeasonPassManager.Stages)"
                          }
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9330:8:2",
                        "memberName": "RENEWALS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 228,
                        "src": "9323:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9340:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 670,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 666,
                      "name": "onlyInGivenStage",
                      "nameLocations": [
                        "9306:16:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "9306:16:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "9306:40:2"
                  }
                ],
                "name": "deleteNumberOfSeasonIds",
                "nameLocation": "9225:23:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 663,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 662,
                      "mutability": "mutable",
                      "name": "fans_",
                      "nameLocation": "9275:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "9258:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9258:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 661,
                        "nodeType": "ArrayTypeName",
                        "src": "9258:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9248:38:2"
                },
                "returnParameters": {
                  "id": 671,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9347:0:2"
                },
                "scope": 1297,
                "src": "9216:363:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 788,
                  "nodeType": "Block",
                  "src": "9860:419:2",
                  "statements": [
                    {
                      "body": {
                        "id": 786,
                        "nodeType": "Block",
                        "src": "9907:366:2",
                        "statements": [
                          {
                            "body": {
                              "id": 772,
                              "nodeType": "Block",
                              "src": "9971:180:2",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 755,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 743,
                                          "name": "s_Seats",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 315,
                                          "src": "9993:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                            "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                                          }
                                        },
                                        "id": 749,
                                        "indexExpression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 744,
                                              "name": "freeSeatIds_",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 711,
                                              "src": "10001:12:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory[] memory"
                                              }
                                            },
                                            "id": 746,
                                            "indexExpression": {
                                              "id": 745,
                                              "name": "j",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 722,
                                              "src": "10014:1:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10001:15:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 748,
                                          "indexExpression": {
                                            "id": 747,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 731,
                                            "src": "10017:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "10001:18:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9993:27:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Seat_$218_storage",
                                          "typeString": "struct SeasonPassManager.Seat storage ref"
                                        }
                                      },
                                      "id": 750,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10021:9:2",
                                      "memberName": "seatOwner",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 209,
                                      "src": "9993:37:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 753,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10042:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10034:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 751,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10034:7:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 754,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10034:10:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "9993:51:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 771,
                                  "nodeType": "IfStatement",
                                  "src": "9989:148:2",
                                  "trueBody": {
                                    "id": 770,
                                    "nodeType": "Block",
                                    "src": "10046:91:2",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 768,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 756,
                                                "name": "s_Seats",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 315,
                                                "src": "10068:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                                  "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                                                }
                                              },
                                              "id": 762,
                                              "indexExpression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 757,
                                                    "name": "freeSeatIds_",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 711,
                                                    "src": "10076:12:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "uint256[] memory[] memory"
                                                    }
                                                  },
                                                  "id": 759,
                                                  "indexExpression": {
                                                    "id": 758,
                                                    "name": "j",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 722,
                                                    "src": "10089:1:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "10076:15:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                    "typeString": "uint256[] memory"
                                                  }
                                                },
                                                "id": 761,
                                                "indexExpression": {
                                                  "id": 760,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 731,
                                                  "src": "10092:1:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10076:18:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "10068:27:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Seat_$218_storage",
                                                "typeString": "struct SeasonPassManager.Seat storage ref"
                                              }
                                            },
                                            "id": 763,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberLocation": "10096:9:2",
                                            "memberName": "seatOwner",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 209,
                                            "src": "10068:37:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "arguments": [
                                              {
                                                "hexValue": "30",
                                                "id": 766,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10116:1:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "id": 765,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "10108:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 764,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10108:7:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 767,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "10108:10:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "src": "10068:50:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "id": 769,
                                        "nodeType": "ExpressionStatement",
                                        "src": "10068:50:2"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 734,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
                                "src": "9938:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 735,
                                    "name": "freeSeatIds_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 711,
                                    "src": "9942:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory[] memory"
                                    }
                                  },
                                  "id": 737,
                                  "indexExpression": {
                                    "id": 736,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "9955:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9942:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9958:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "9942:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9938:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 773,
                            "initializationExpression": {
                              "assignments": [
                                731
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 731,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "9931:1:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 773,
                                  "src": "9926:6:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 730,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9926:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 733,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9935:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9926:10:2"
                            },
                            "isSimpleCounterLoop": true,
                            "loopExpression": {
                              "expression": {
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "9966:3:2",
                                "subExpression": {
                                  "id": 740,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 731,
                                  "src": "9966:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 742,
                              "nodeType": "ExpressionStatement",
                              "src": "9966:3:2"
                            },
                            "nodeType": "ForStatement",
                            "src": "9921:230:2"
                          },
                          {
                            "expression": {
                              "id": 781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 774,
                                  "name": "s_MaxAvailableSeats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "10164:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 776,
                                "indexExpression": {
                                  "id": 775,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 722,
                                  "src": "10184:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "10164:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 777,
                                    "name": "freeSeatIds_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 711,
                                    "src": "10189:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory[] memory"
                                    }
                                  },
                                  "id": 779,
                                  "indexExpression": {
                                    "id": 778,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 722,
                                    "src": "10202:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10189:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10205:6:2",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "10189:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10164:47:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 782,
                            "nodeType": "ExpressionStatement",
                            "src": "10164:47:2"
                          },
                          {
                            "eventCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 783,
                                "name": "SeasonPass_SetSeatAvailability",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 265,
                                "src": "10230:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10230:32:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 785,
                            "nodeType": "EmitStatement",
                            "src": "10225:37:2"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 724,
                          "name": "j",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 722,
                          "src": "9883:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 725,
                          "name": "numberOfZones",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "9887:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9883:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 787,
                      "initializationExpression": {
                        "assignments": [
                          722
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 722,
                            "mutability": "mutable",
                            "name": "j",
                            "nameLocation": "9880:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 787,
                            "src": "9875:6:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 721,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9875:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 723,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9875:6:2"
                      },
                      "isSimpleCounterLoop": true,
                      "loopExpression": {
                        "expression": {
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9902:3:2",
                          "subExpression": {
                            "id": 727,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 722,
                            "src": "9902:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 729,
                        "nodeType": "ExpressionStatement",
                        "src": "9902:3:2"
                      },
                      "nodeType": "ForStatement",
                      "src": "9870:403:2"
                    }
                  ]
                },
                "functionSelector": "b59dc09e",
                "id": 789,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 714,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 713,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "9809:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "9809:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "9809:9:2"
                  },
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 716,
                          "name": "Stages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "9836:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                            "typeString": "type(enum SeasonPassManager.Stages)"
                          }
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9843:8:2",
                        "memberName": "RENEWALS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 228,
                        "src": "9836:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9853:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 719,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 715,
                      "name": "onlyInGivenStage",
                      "nameLocations": [
                        "9819:16:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "9819:16:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "9819:40:2"
                  }
                ],
                "name": "setSeatAvailability",
                "nameLocation": "9676:19:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 712,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 711,
                      "mutability": "mutable",
                      "name": "freeSeatIds_",
                      "nameLocation": "9724:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "9705:31:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        "typeString": "uint256[][]"
                      },
                      "typeName": {
                        "baseType": {
                          "baseType": {
                            "id": 708,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9705:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 709,
                          "nodeType": "ArrayTypeName",
                          "src": "9705:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "id": 710,
                        "nodeType": "ArrayTypeName",
                        "src": "9705:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          "typeString": "uint256[][]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9695:104:2"
                },
                "returnParameters": {
                  "id": 720,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9860:0:2"
                },
                "scope": 1297,
                "src": "9667:612:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 903,
                  "nodeType": "Block",
                  "src": "10841:876:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 809,
                              "name": "s_SeasonPasses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "10855:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                              }
                            },
                            "id": 811,
                            "indexExpression": {
                              "id": 810,
                              "name": "fanAddress_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "10870:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10855:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                              "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                            }
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10883:6:2",
                          "memberName": "seatId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "10855:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10893:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10855:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 819,
                      "nodeType": "IfStatement",
                      "src": "10851:108:2",
                      "trueBody": {
                        "id": 818,
                        "nodeType": "Block",
                        "src": "10896:63:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 815,
                                "name": "SeasonPass_FanHasNoSeasonPass",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 189,
                                "src": "10917:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10917:31:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 817,
                            "nodeType": "RevertStatement",
                            "src": "10910:38:2"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 820,
                              "name": "s_Seats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "10972:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                              }
                            },
                            "id": 822,
                            "indexExpression": {
                              "id": 821,
                              "name": "newSeatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "10980:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10972:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage",
                              "typeString": "struct SeasonPassManager.Seat storage ref"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10992:9:2",
                          "memberName": "seatOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "10972:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11013:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11005:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 824,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11005:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11005:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10972:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 833,
                      "nodeType": "IfStatement",
                      "src": "10968:107:2",
                      "trueBody": {
                        "id": 832,
                        "nodeType": "Block",
                        "src": "11017:58:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 829,
                                "name": "SeasonPass_SeatIsNotFree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 193,
                                "src": "11038:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11038:26:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 831,
                            "nodeType": "RevertStatement",
                            "src": "11031:33:2"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 834,
                            "name": "s_MaxAvailableSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "11088:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 836,
                          "indexExpression": {
                            "id": 835,
                            "name": "newZoneId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "11108:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11088:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11123:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11088:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 843,
                      "nodeType": "IfStatement",
                      "src": "11084:101:2",
                      "trueBody": {
                        "id": 842,
                        "nodeType": "Block",
                        "src": "11126:59:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 839,
                                "name": "SeasonPass_MaxSeatsInZone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 195,
                                "src": "11147:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11147:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 841,
                            "nodeType": "RevertStatement",
                            "src": "11140:34:2"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 844,
                                "name": "s_Seats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 315,
                                "src": "11211:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                  "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                                }
                              },
                              "id": 849,
                              "indexExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 845,
                                    "name": "s_SeasonPasses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 310,
                                    "src": "11219:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                      "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                    }
                                  },
                                  "id": 847,
                                  "indexExpression": {
                                    "id": 846,
                                    "name": "fanAddress_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 791,
                                    "src": "11234:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11219:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                    "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                                  }
                                },
                                "id": 848,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11247:6:2",
                                "memberName": "seatId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 222,
                                "src": "11219:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11211:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seat_$218_storage",
                                "typeString": "struct SeasonPassManager.Seat storage ref"
                              }
                            },
                            "id": 850,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11255:4:2",
                            "memberName": "zone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "11211:48:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 851,
                            "name": "oldZoneId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "11263:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11211:62:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 853,
                                "name": "s_SeasonPasses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "11289:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                  "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                }
                              },
                              "id": 855,
                              "indexExpression": {
                                "id": 854,
                                "name": "fanAddress_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 791,
                                "src": "11304:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11289:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                              }
                            },
                            "id": 856,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11317:6:2",
                            "memberName": "seatId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 222,
                            "src": "11289:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 857,
                            "name": "oldSeatId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "11327:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11289:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11211:126:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 864,
                      "nodeType": "IfStatement",
                      "src": "11194:220:2",
                      "trueBody": {
                        "id": 863,
                        "nodeType": "Block",
                        "src": "11348:66:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 860,
                                "name": "SeasonPass_WrongInformationGiven",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "11369:32:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 861,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11369:34:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 862,
                            "nodeType": "RevertStatement",
                            "src": "11362:41:2"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 865,
                              "name": "s_Seats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "11423:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                              }
                            },
                            "id": 867,
                            "indexExpression": {
                              "id": 866,
                              "name": "oldSeatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "11431:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11423:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage",
                              "typeString": "struct SeasonPassManager.Seat storage ref"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "11443:9:2",
                          "memberName": "seatOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "11423:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11463:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11455:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 869,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11455:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11455:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11423:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 874,
                      "nodeType": "ExpressionStatement",
                      "src": "11423:42:2"
                    },
                    {
                      "expression": {
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "11475:33:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 875,
                            "name": "s_MaxAvailableSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "11475:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 877,
                          "indexExpression": {
                            "id": 876,
                            "name": "oldZoneId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "11495:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "11475:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 879,
                      "nodeType": "ExpressionStatement",
                      "src": "11475:33:2"
                    },
                    {
                      "expression": {
                        "id": 885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 880,
                              "name": "s_Seats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "11518:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                              }
                            },
                            "id": 882,
                            "indexExpression": {
                              "id": 881,
                              "name": "newSeatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "11526:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11518:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage",
                              "typeString": "struct SeasonPassManager.Seat storage ref"
                            }
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "11538:9:2",
                          "memberName": "seatOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "11518:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 884,
                          "name": "fanAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "11550:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11518:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 886,
                      "nodeType": "ExpressionStatement",
                      "src": "11518:43:2"
                    },
                    {
                      "expression": {
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "--",
                        "prefix": false,
                        "src": "11571:33:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 887,
                            "name": "s_MaxAvailableSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "11571:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 889,
                          "indexExpression": {
                            "id": 888,
                            "name": "newZoneId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 799,
                            "src": "11591:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "11571:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 891,
                      "nodeType": "ExpressionStatement",
                      "src": "11571:33:2"
                    },
                    {
                      "expression": {
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 892,
                              "name": "s_SeasonPasses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "11614:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                              }
                            },
                            "id": 894,
                            "indexExpression": {
                              "id": 893,
                              "name": "fanAddress_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "11629:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11614:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                              "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "11642:6:2",
                          "memberName": "seatId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "11614:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 896,
                          "name": "newSeatId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 797,
                          "src": "11651:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11614:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 898,
                      "nodeType": "ExpressionStatement",
                      "src": "11614:47:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 900,
                            "name": "fanAddress_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "11698:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 899,
                          "name": "SeasonPass_ChangeSeat",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "11676:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11676:34:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 902,
                      "nodeType": "EmitStatement",
                      "src": "11671:39:2"
                    }
                  ]
                },
                "functionSelector": "656417db",
                "id": 904,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 802,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 801,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "10787:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "10787:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "10787:9:2"
                  },
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 804,
                          "name": "Stages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "10814:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                            "typeString": "type(enum SeasonPassManager.Stages)"
                          }
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "10821:12:2",
                        "memberName": "SEAT_CHANGES",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 229,
                        "src": "10814:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10835:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 807,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 803,
                      "name": "onlyInGivenStage",
                      "nameLocations": [
                        "10797:16:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "10797:16:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "10797:43:2"
                  }
                ],
                "name": "changeSeat",
                "nameLocation": "10620:10:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 800,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 791,
                      "mutability": "mutable",
                      "name": "fanAddress_",
                      "nameLocation": "10648:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "10640:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 790,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10640:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "oldSeatId_",
                      "nameLocation": "10677:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "10669:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 792,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10669:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 795,
                      "mutability": "mutable",
                      "name": "oldZoneId_",
                      "nameLocation": "10705:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "10697:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 794,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10697:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 797,
                      "mutability": "mutable",
                      "name": "newSeatId_",
                      "nameLocation": "10733:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "10725:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 796,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10725:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 799,
                      "mutability": "mutable",
                      "name": "newZoneId_",
                      "nameLocation": "10761:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 904,
                      "src": "10753:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 798,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10753:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "10630:147:2"
                },
                "returnParameters": {
                  "id": 808,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10841:0:2"
                },
                "scope": 1297,
                "src": "10611:1106:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 964,
                  "nodeType": "Block",
                  "src": "12096:572:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 912,
                                "name": "s_SeasonPasses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "12123:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                  "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                }
                              },
                              "id": 915,
                              "indexExpression": {
                                "expression": {
                                  "id": 913,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12138:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12142:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "12138:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12123:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                              }
                            },
                            "id": 916,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12150:6:2",
                            "memberName": "seatId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 222,
                            "src": "12123:33:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12160:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12123:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 919,
                                "name": "s_SeasonPasses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "12177:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                  "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                }
                              },
                              "id": 922,
                              "indexExpression": {
                                "expression": {
                                  "id": 920,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12192:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12196:6:2",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "12192:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12177:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                              }
                            },
                            "id": 923,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12204:14:2",
                            "memberName": "idOfSeasonPass",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 220,
                            "src": "12177:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12222:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12177:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12123:100:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 931,
                      "nodeType": "IfStatement",
                      "src": "12106:187:2",
                      "trueBody": {
                        "id": 930,
                        "nodeType": "Block",
                        "src": "12234:59:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 927,
                                "name": "SeasonPass_FanAddedBefore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "12255:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12255:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 929,
                            "nodeType": "RevertStatement",
                            "src": "12248:34:2"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 932,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12307:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12311:5:2",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "12307:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 934,
                          "name": "sympathizerFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "12319:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12307:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 940,
                      "nodeType": "IfStatement",
                      "src": "12303:93:2",
                      "trueBody": {
                        "id": 939,
                        "nodeType": "Block",
                        "src": "12335:61:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 936,
                                "name": "SeasonPass_NotEnoughETHSent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 207,
                                "src": "12356:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12356:29:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 938,
                            "nodeType": "RevertStatement",
                            "src": "12349:36:2"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 941,
                              "name": "s_SeasonPasses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "12406:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                              }
                            },
                            "id": 944,
                            "indexExpression": {
                              "expression": {
                                "id": 942,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12421:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12425:6:2",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12421:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12406:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                              "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "12433:14:2",
                          "memberName": "idOfSeasonPass",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 220,
                          "src": "12406:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 946,
                                "name": "seasonNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 283,
                                "src": "12462:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 947,
                                "name": "SYMPATHIZER_OFFSET",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "12489:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12462:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 949,
                              "name": "numberOfSympathizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 291,
                              "src": "12522:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12462:79:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12556:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12462:95:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12406:151:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 954,
                      "nodeType": "ExpressionStatement",
                      "src": "12406:151:2"
                    },
                    {
                      "expression": {
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "12567:21:2",
                        "subExpression": {
                          "id": 955,
                          "name": "numberOfSympathizer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "12567:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 957,
                      "nodeType": "ExpressionStatement",
                      "src": "12567:21:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 959,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12629:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12633:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12629:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 961,
                            "name": "numberOfSympathizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "12641:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 958,
                          "name": "SeasonPass_NewSympathizer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "12603:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12603:58:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 963,
                      "nodeType": "EmitStatement",
                      "src": "12598:63:2"
                    }
                  ]
                },
                "functionSelector": "70b6947c",
                "id": 965,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 907,
                          "name": "Stages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "12069:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                            "typeString": "type(enum SeasonPassManager.Stages)"
                          }
                        },
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "12076:8:2",
                        "memberName": "NEW_FANS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 230,
                        "src": "12069:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12086:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 910,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 906,
                      "name": "onlyInGivenStage",
                      "nameLocations": [
                        "12052:16:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "12052:16:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "12052:39:2"
                  }
                ],
                "name": "becomeSympathizer",
                "nameLocation": "11991:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 905,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12008:2:2"
                },
                "returnParameters": {
                  "id": 911,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12096:0:2"
                },
                "scope": 1297,
                "src": "11982:686:2",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1066,
                  "nodeType": "Block",
                  "src": "12828:806:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 981,
                              "name": "s_SeasonPasses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 310,
                              "src": "12842:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                              }
                            },
                            "id": 983,
                            "indexExpression": {
                              "id": 982,
                              "name": "fan_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "12857:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12842:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                              "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12863:6:2",
                          "memberName": "seatId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "12842:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12873:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12842:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 991,
                      "nodeType": "IfStatement",
                      "src": "12838:97:2",
                      "trueBody": {
                        "id": 990,
                        "nodeType": "Block",
                        "src": "12876:59:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 987,
                                "name": "SeasonPass_FanAddedBefore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "12897:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12897:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 989,
                            "nodeType": "RevertStatement",
                            "src": "12890:34:2"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 992,
                              "name": "s_Seats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "12948:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                              }
                            },
                            "id": 994,
                            "indexExpression": {
                              "id": 993,
                              "name": "seatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "12956:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12948:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage",
                              "typeString": "struct SeasonPassManager.Seat storage ref"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12965:9:2",
                          "memberName": "seatOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "12948:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12986:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12978:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 996,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12978:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12978:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12948:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1005,
                      "nodeType": "IfStatement",
                      "src": "12944:104:2",
                      "trueBody": {
                        "id": 1004,
                        "nodeType": "Block",
                        "src": "12990:58:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1001,
                                "name": "SeasonPass_SeatIsNotFree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 193,
                                "src": "13011:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13011:26:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1003,
                            "nodeType": "RevertStatement",
                            "src": "13004:33:2"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1006,
                            "name": "s_MaxAvailableSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "13061:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1008,
                          "indexExpression": {
                            "id": 1007,
                            "name": "zone_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "13081:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13061:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13091:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13061:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1015,
                      "nodeType": "IfStatement",
                      "src": "13057:96:2",
                      "trueBody": {
                        "id": 1014,
                        "nodeType": "Block",
                        "src": "13094:59:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1011,
                                "name": "SeasonPass_MaxSeatsInZone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 195,
                                "src": "13115:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13115:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1013,
                            "nodeType": "RevertStatement",
                            "src": "13108:34:2"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1016,
                          "name": "numberOfCurrentFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "13166:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1017,
                          "name": "numberOfMaxFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "13189:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13166:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1023,
                      "nodeType": "IfStatement",
                      "src": "13162:105:2",
                      "trueBody": {
                        "id": 1022,
                        "nodeType": "Block",
                        "src": "13206:61:2",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1019,
                                "name": "SeasonPass_MaximumFansAdded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 191,
                                "src": "13227:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13227:29:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1021,
                            "nodeType": "RevertStatement",
                            "src": "13220:36:2"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1024,
                              "name": "s_Seats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "13277:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                                "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                              }
                            },
                            "id": 1026,
                            "indexExpression": {
                              "id": 1025,
                              "name": "seatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "13285:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13277:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage",
                              "typeString": "struct SeasonPassManager.Seat storage ref"
                            }
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "13294:9:2",
                          "memberName": "seatOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "13277:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1028,
                          "name": "fan_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 967,
                          "src": "13306:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13277:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1030,
                      "nodeType": "ExpressionStatement",
                      "src": "13277:33:2"
                    },
                    {
                      "assignments": [
                        1033
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1033,
                          "mutability": "mutable",
                          "name": "newSeasonPass",
                          "nameLocation": "13339:13:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 1066,
                          "src": "13321:31:2",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SeasonPass_$226_memory_ptr",
                            "typeString": "struct SeasonPassManager.SeasonPass"
                          },
                          "typeName": {
                            "id": 1032,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1031,
                              "name": "SeasonPass",
                              "nameLocations": [
                                "13321:10:2"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 226,
                              "src": "13321:10:2"
                            },
                            "referencedDeclaration": 226,
                            "src": "13321:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SeasonPass_$226_storage_ptr",
                              "typeString": "struct SeasonPassManager.SeasonPass"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1034,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13321:31:2"
                    },
                    {
                      "expression": {
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 1035,
                            "name": "newSeasonPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "13362:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SeasonPass_$226_memory_ptr",
                              "typeString": "struct SeasonPassManager.SeasonPass memory"
                            }
                          },
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "13376:14:2",
                          "memberName": "idOfSeasonPass",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 220,
                          "src": "13362:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1038,
                          "name": "numberOfCurrentFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "13393:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13362:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1040,
                      "nodeType": "ExpressionStatement",
                      "src": "13362:50:2"
                    },
                    {
                      "expression": {
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 1041,
                            "name": "newSeasonPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "13422:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SeasonPass_$226_memory_ptr",
                              "typeString": "struct SeasonPassManager.SeasonPass memory"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "13436:6:2",
                          "memberName": "seatId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 222,
                          "src": "13422:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1044,
                          "name": "seatId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "13445:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13422:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1046,
                      "nodeType": "ExpressionStatement",
                      "src": "13422:30:2"
                    },
                    {
                      "expression": {
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1047,
                            "name": "s_SeasonPasses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "13463:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                              "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                            }
                          },
                          "id": 1049,
                          "indexExpression": {
                            "id": 1048,
                            "name": "fan_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "13478:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13463:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                            "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1050,
                          "name": "newSeasonPass",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "13486:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SeasonPass_$226_memory_ptr",
                            "typeString": "struct SeasonPassManager.SeasonPass memory"
                          }
                        },
                        "src": "13463:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                          "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                        }
                      },
                      "id": 1052,
                      "nodeType": "ExpressionStatement",
                      "src": "13463:36:2"
                    },
                    {
                      "expression": {
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "--",
                        "prefix": false,
                        "src": "13509:28:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1053,
                            "name": "s_MaxAvailableSeats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "13509:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1055,
                          "indexExpression": {
                            "id": 1054,
                            "name": "zone_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "13529:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13509:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1057,
                      "nodeType": "ExpressionStatement",
                      "src": "13509:28:2"
                    },
                    {
                      "expression": {
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "13547:21:2",
                        "subExpression": {
                          "id": 1058,
                          "name": "numberOfCurrentFans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 287,
                          "src": "13547:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1060,
                      "nodeType": "ExpressionStatement",
                      "src": "13547:21:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1062,
                            "name": "fan_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "13601:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1063,
                            "name": "numberOfCurrentFans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "13607:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1061,
                          "name": "SeasonPass_NewFan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 277,
                          "src": "13583:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13583:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1065,
                      "nodeType": "EmitStatement",
                      "src": "13578:49:2"
                    }
                  ]
                },
                "functionSelector": "62780dfc",
                "id": 1067,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 974,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 973,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "12778:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "12778:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "12778:9:2"
                  },
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 976,
                          "name": "Stages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 232,
                          "src": "12805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Stages_$232_$",
                            "typeString": "type(enum SeasonPassManager.Stages)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "12812:8:2",
                        "memberName": "NEW_FANS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 230,
                        "src": "12805:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12822:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 979,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 975,
                      "name": "onlyInGivenStage",
                      "nameLocations": [
                        "12788:16:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 339,
                      "src": "12788:16:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "12788:39:2"
                  }
                ],
                "name": "addNewFan",
                "nameLocation": "12683:9:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 972,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 967,
                      "mutability": "mutable",
                      "name": "fan_",
                      "nameLocation": "12710:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "12702:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 966,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12702:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 969,
                      "mutability": "mutable",
                      "name": "seatId_",
                      "nameLocation": "12732:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "12724:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 968,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12724:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 971,
                      "mutability": "mutable",
                      "name": "zone_",
                      "nameLocation": "12757:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1067,
                      "src": "12749:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 970,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12749:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12692:76:2"
                },
                "returnParameters": {
                  "id": 980,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12828:0:2"
                },
                "scope": 1297,
                "src": "12674:960:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1147,
                  "nodeType": "Block",
                  "src": "13898:497:2",
                  "statements": [
                    {
                      "assignments": [
                        1082
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1082,
                          "mutability": "mutable",
                          "name": "aux",
                          "nameLocation": "13922:3:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 1147,
                          "src": "13908:17:2",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 1080,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "13908:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1081,
                            "nodeType": "ArrayTypeName",
                            "src": "13908:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                              "typeString": "bool[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1087,
                      "initialValue": {
                        "expression": {
                          "baseExpression": {
                            "id": 1083,
                            "name": "s_SeasonPasses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "13928:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                              "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                            }
                          },
                          "id": 1085,
                          "indexExpression": {
                            "id": 1084,
                            "name": "fan_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1071,
                            "src": "13943:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13928:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                            "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                          }
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13949:20:2",
                        "memberName": "matchesGoneToStadium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 225,
                        "src": "13928:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                          "typeString": "bool[] storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13908:61:2"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "13983:12:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1088,
                              "name": "aux",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1082,
                              "src": "13984:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 1090,
                            "indexExpression": {
                              "id": 1089,
                              "name": "match_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1069,
                              "src": "13988:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13984:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1092,
                                  "name": "match_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1069,
                                  "src": "14000:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14010:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "14000:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1095,
                                    "name": "aux",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1082,
                                    "src": "14015:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 1097,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 1096,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14019:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14015:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1099,
                                      "name": "seasonNumber",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 283,
                                      "src": "14032:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1098,
                                    "name": "isEven",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "14025:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (uint256) pure returns (bool)"
                                    }
                                  },
                                  "id": 1100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14025:20:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "14015:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14000:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1103,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13999:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13983:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1144,
                      "nodeType": "IfStatement",
                      "src": "13979:388:2",
                      "trueBody": {
                        "id": 1143,
                        "nodeType": "Block",
                        "src": "14048:319:2",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1105,
                                "name": "match_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1069,
                                "src": "14066:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14076:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "14066:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1139,
                              "nodeType": "Block",
                              "src": "14243:89:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1137,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1130,
                                            "name": "s_SeasonPasses",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 310,
                                            "src": "14261:14:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                              "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                            }
                                          },
                                          "id": 1132,
                                          "indexExpression": {
                                            "id": 1131,
                                            "name": "fan_",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1071,
                                            "src": "14276:4:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14261:20:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                            "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                                          }
                                        },
                                        "id": 1133,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "14282:20:2",
                                        "memberName": "matchesGoneToStadium",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 225,
                                        "src": "14261:41:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                                          "typeString": "bool[] storage ref"
                                        }
                                      },
                                      "id": 1135,
                                      "indexExpression": {
                                        "id": 1134,
                                        "name": "match_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1069,
                                        "src": "14303:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "14261:49:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "74727565",
                                      "id": 1136,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14313:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "14261:56:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1138,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14261:56:2"
                                }
                              ]
                            },
                            "id": 1140,
                            "nodeType": "IfStatement",
                            "src": "14062:270:2",
                            "trueBody": {
                              "id": 1129,
                              "nodeType": "Block",
                              "src": "14079:158:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1112,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1108,
                                        "name": "aux",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1082,
                                        "src": "14097:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                          "typeString": "bool[] memory"
                                        }
                                      },
                                      "id": 1110,
                                      "indexExpression": {
                                        "hexValue": "31",
                                        "id": 1109,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14101:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "14097:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "74727565",
                                      "id": 1111,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14106:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "src": "14097:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1113,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14097:13:2"
                                },
                                {
                                  "expression": {
                                    "id": 1120,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1114,
                                        "name": "aux",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1082,
                                        "src": "14128:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                          "typeString": "bool[] memory"
                                        }
                                      },
                                      "id": 1116,
                                      "indexExpression": {
                                        "hexValue": "30",
                                        "id": 1115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14132:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "14128:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 1118,
                                          "name": "seasonNumber",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 283,
                                          "src": "14144:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1117,
                                        "name": "isEven",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1167,
                                        "src": "14137:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (uint256) pure returns (bool)"
                                        }
                                      },
                                      "id": 1119,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14137:20:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "14128:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 1121,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14128:29:2"
                                },
                                {
                                  "expression": {
                                    "id": 1127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1122,
                                          "name": "s_SeasonPasses",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 310,
                                          "src": "14175:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                                            "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                                          }
                                        },
                                        "id": 1124,
                                        "indexExpression": {
                                          "id": 1123,
                                          "name": "fan_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1071,
                                          "src": "14190:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14175:20:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                                          "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                                        }
                                      },
                                      "id": 1125,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "14196:20:2",
                                      "memberName": "matchesGoneToStadium",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 225,
                                      "src": "14175:41:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                                        "typeString": "bool[] storage ref"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 1126,
                                      "name": "aux",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1082,
                                      "src": "14219:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                        "typeString": "bool[] memory"
                                      }
                                    },
                                    "src": "14175:47:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_storage",
                                      "typeString": "bool[] storage ref"
                                    }
                                  },
                                  "id": 1128,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14175:47:2"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14352:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 1077,
                            "id": 1142,
                            "nodeType": "Return",
                            "src": "14345:11:2"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "hexValue": "66616c7365",
                        "id": 1145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14383:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "functionReturnParameters": 1077,
                      "id": 1146,
                      "nodeType": "Return",
                      "src": "14376:12:2"
                    }
                  ]
                },
                "functionSelector": "bbd0cdce",
                "id": 1148,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1074,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1073,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "13873:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "13873:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "13873:9:2"
                  }
                ],
                "name": "attendMatch",
                "nameLocation": "13800:11:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1072,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1069,
                      "mutability": "mutable",
                      "name": "match_",
                      "nameLocation": "13829:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1148,
                      "src": "13821:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1068,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13821:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1071,
                      "mutability": "mutable",
                      "name": "fan_",
                      "nameLocation": "13853:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1148,
                      "src": "13845:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1070,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13845:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13811:52:2"
                },
                "returnParameters": {
                  "id": 1077,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1076,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1148,
                      "src": "13892:4:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1075,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13892:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13891:6:2"
                },
                "scope": 1297,
                "src": "13791:604:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1166,
                  "nodeType": "Block",
                  "src": "14467:102:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1155,
                            "name": "seasonNumber_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1150,
                            "src": "14481:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14497:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "14481:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14502:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14481:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1163,
                      "nodeType": "IfStatement",
                      "src": "14477:64:2",
                      "trueBody": {
                        "id": 1162,
                        "nodeType": "Block",
                        "src": "14505:36:2",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 1160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14526:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 1154,
                            "id": 1161,
                            "nodeType": "Return",
                            "src": "14519:11:2"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "hexValue": "66616c7365",
                        "id": 1164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14557:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "functionReturnParameters": 1154,
                      "id": 1165,
                      "nodeType": "Return",
                      "src": "14550:12:2"
                    }
                  ]
                },
                "functionSelector": "2a2e1320",
                "id": 1167,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isEven",
                "nameLocation": "14410:6:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1151,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1150,
                      "mutability": "mutable",
                      "name": "seasonNumber_",
                      "nameLocation": "14425:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1167,
                      "src": "14417:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14417:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14416:23:2"
                },
                "returnParameters": {
                  "id": 1154,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1153,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1167,
                      "src": "14461:4:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1152,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14461:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14460:6:2"
                },
                "scope": 1297,
                "src": "14401:168:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1174,
                  "nodeType": "Block",
                  "src": "14898:43:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1172,
                        "name": "numberOfSympathizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "14915:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1171,
                      "id": 1173,
                      "nodeType": "Return",
                      "src": "14908:26:2"
                    }
                  ]
                },
                "functionSelector": "bf2e36bf",
                "id": 1175,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getNumberOfSympathizer",
                "nameLocation": "14843:22:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1168,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14865:2:2"
                },
                "returnParameters": {
                  "id": 1171,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1170,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1175,
                      "src": "14889:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1169,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14889:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14888:9:2"
                },
                "scope": 1297,
                "src": "14834:107:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1182,
                  "nodeType": "Block",
                  "src": "15004:36:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1180,
                        "name": "seasonNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "15021:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1179,
                      "id": 1181,
                      "nodeType": "Return",
                      "src": "15014:19:2"
                    }
                  ]
                },
                "functionSelector": "945e3472",
                "id": 1183,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSeasonNumber",
                "nameLocation": "14956:15:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1176,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "14971:2:2"
                },
                "returnParameters": {
                  "id": 1179,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1178,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "14995:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14995:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14994:9:2"
                },
                "scope": 1297,
                "src": "14947:93:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1190,
                  "nodeType": "Block",
                  "src": "15105:38:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1188,
                        "name": "sympathizerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "15122:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1187,
                      "id": 1189,
                      "nodeType": "Return",
                      "src": "15115:21:2"
                    }
                  ]
                },
                "functionSelector": "f9cdcc2e",
                "id": 1191,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSympathizerFee",
                "nameLocation": "15055:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1184,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "15072:2:2"
                },
                "returnParameters": {
                  "id": 1187,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1191,
                      "src": "15096:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15096:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15095:9:2"
                },
                "scope": 1297,
                "src": "15046:97:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1198,
                  "nodeType": "Block",
                  "src": "15209:39:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1196,
                        "name": "numberOfMaxFans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "15226:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1195,
                      "id": 1197,
                      "nodeType": "Return",
                      "src": "15219:22:2"
                    }
                  ]
                },
                "functionSelector": "f85f409e",
                "id": 1199,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getNumberOfMaxFans",
                "nameLocation": "15158:18:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1192,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "15176:2:2"
                },
                "returnParameters": {
                  "id": 1195,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "15200:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15200:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15199:9:2"
                },
                "scope": 1297,
                "src": "15149:99:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1206,
                  "nodeType": "Block",
                  "src": "15318:43:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1204,
                        "name": "numberOfCurrentFans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "15335:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1203,
                      "id": 1205,
                      "nodeType": "Return",
                      "src": "15328:26:2"
                    }
                  ]
                },
                "functionSelector": "0d739a0d",
                "id": 1207,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getNumberOfCurrentFans",
                "nameLocation": "15263:22:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1200,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "15285:2:2"
                },
                "returnParameters": {
                  "id": 1203,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1202,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1207,
                      "src": "15309:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15309:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15308:9:2"
                },
                "scope": 1297,
                "src": "15254:107:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1214,
                  "nodeType": "Block",
                  "src": "15428:40:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1212,
                        "name": "numberOfMaxSeats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 289,
                        "src": "15445:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1211,
                      "id": 1213,
                      "nodeType": "Return",
                      "src": "15438:23:2"
                    }
                  ]
                },
                "functionSelector": "e60657aa",
                "id": 1215,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getNumberOfMaxSeats",
                "nameLocation": "15376:19:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1208,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "15395:2:2"
                },
                "returnParameters": {
                  "id": 1211,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1215,
                      "src": "15419:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15419:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15418:9:2"
                },
                "scope": 1297,
                "src": "15367:101:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1222,
                  "nodeType": "Block",
                  "src": "15532:37:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1220,
                        "name": "numberOfZones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "15549:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1219,
                      "id": 1221,
                      "nodeType": "Return",
                      "src": "15542:20:2"
                    }
                  ]
                },
                "functionSelector": "bbd3b88c",
                "id": 1223,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getNumberOfZones",
                "nameLocation": "15483:16:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1216,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "15499:2:2"
                },
                "returnParameters": {
                  "id": 1219,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1218,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1223,
                      "src": "15523:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15523:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15522:9:2"
                },
                "scope": 1297,
                "src": "15474:95:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1231,
                  "nodeType": "Block",
                  "src": "15631:36:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 1229,
                        "name": "seasonStages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 301,
                        "src": "15648:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      "functionReturnParameters": 1228,
                      "id": 1230,
                      "nodeType": "Return",
                      "src": "15641:19:2"
                    }
                  ]
                },
                "functionSelector": "ec4828af",
                "id": 1232,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSeasonStages",
                "nameLocation": "15584:15:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1224,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "15599:2:2"
                },
                "returnParameters": {
                  "id": 1228,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1232,
                      "src": "15623:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stages_$232",
                        "typeString": "enum SeasonPassManager.Stages"
                      },
                      "typeName": {
                        "id": 1226,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1225,
                          "name": "Stages",
                          "nameLocations": [
                            "15623:6:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 232,
                          "src": "15623:6:2"
                        },
                        "referencedDeclaration": 232,
                        "src": "15623:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Stages_$232",
                          "typeString": "enum SeasonPassManager.Stages"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15622:8:2"
                },
                "scope": 1297,
                "src": "15575:92:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1243,
                  "nodeType": "Block",
                  "src": "15794:49:2",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 1239,
                          "name": "s_MaxAvailableSeats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "15811:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1241,
                        "indexExpression": {
                          "id": 1240,
                          "name": "zone",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1234,
                          "src": "15831:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15811:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1238,
                      "id": 1242,
                      "nodeType": "Return",
                      "src": "15804:32:2"
                    }
                  ]
                },
                "functionSelector": "8f4a1ba4",
                "id": 1244,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getMaxAvailableSeats",
                "nameLocation": "15729:20:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1235,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1234,
                      "mutability": "mutable",
                      "name": "zone",
                      "nameLocation": "15758:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1244,
                      "src": "15750:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1233,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15750:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15749:14:2"
                },
                "returnParameters": {
                  "id": 1238,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1237,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1244,
                      "src": "15785:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1236,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15785:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15784:9:2"
                },
                "scope": 1297,
                "src": "15720:123:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1256,
                  "nodeType": "Block",
                  "src": "15981:43:2",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 1252,
                          "name": "s_SeasonPasses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "15998:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                            "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                          }
                        },
                        "id": 1254,
                        "indexExpression": {
                          "id": 1253,
                          "name": "fan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1246,
                          "src": "16013:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15998:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                          "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                        }
                      },
                      "functionReturnParameters": 1251,
                      "id": 1255,
                      "nodeType": "Return",
                      "src": "15991:26:2"
                    }
                  ]
                },
                "functionSelector": "7c786283",
                "id": 1257,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSeasonPass",
                "nameLocation": "15900:13:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1247,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1246,
                      "mutability": "mutable",
                      "name": "fan",
                      "nameLocation": "15931:3:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "15923:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1245,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15923:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15913:27:2"
                },
                "returnParameters": {
                  "id": 1251,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1250,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "15962:17:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SeasonPass_$226_memory_ptr",
                        "typeString": "struct SeasonPassManager.SeasonPass"
                      },
                      "typeName": {
                        "id": 1249,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1248,
                          "name": "SeasonPass",
                          "nameLocations": [
                            "15962:10:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 226,
                          "src": "15962:10:2"
                        },
                        "referencedDeclaration": 226,
                        "src": "15962:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SeasonPass_$226_storage_ptr",
                          "typeString": "struct SeasonPassManager.SeasonPass"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "15961:19:2"
                },
                "scope": 1297,
                "src": "15891:133:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1269,
                  "nodeType": "Block",
                  "src": "16132:39:2",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 1265,
                          "name": "s_Seats",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "16149:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                            "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                          }
                        },
                        "id": 1267,
                        "indexExpression": {
                          "id": 1266,
                          "name": "seatId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1259,
                          "src": "16157:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16149:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_storage",
                          "typeString": "struct SeasonPassManager.Seat storage ref"
                        }
                      },
                      "functionReturnParameters": 1264,
                      "id": 1268,
                      "nodeType": "Return",
                      "src": "16142:22:2"
                    }
                  ]
                },
                "functionSelector": "17b58e8c",
                "id": 1270,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSeat",
                "nameLocation": "16074:7:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1260,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1259,
                      "mutability": "mutable",
                      "name": "seatId",
                      "nameLocation": "16090:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1270,
                      "src": "16082:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1258,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16082:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "16081:16:2"
                },
                "returnParameters": {
                  "id": 1264,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1263,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1270,
                      "src": "16119:11:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                        "typeString": "struct SeasonPassManager.Seat"
                      },
                      "typeName": {
                        "id": 1262,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1261,
                          "name": "Seat",
                          "nameLocations": [
                            "16119:4:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 218,
                          "src": "16119:4:2"
                        },
                        "referencedDeclaration": 218,
                        "src": "16119:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                          "typeString": "struct SeasonPassManager.Seat"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "16118:13:2"
                },
                "scope": 1297,
                "src": "16065:106:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1282,
                  "nodeType": "Block",
                  "src": "16245:49:2",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1277,
                            "name": "s_Seats",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "16262:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Seat_$218_storage_$",
                              "typeString": "mapping(uint256 => struct SeasonPassManager.Seat storage ref)"
                            }
                          },
                          "id": 1279,
                          "indexExpression": {
                            "id": 1278,
                            "name": "seatId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "16270:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16262:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seat_$218_storage",
                            "typeString": "struct SeasonPassManager.Seat storage ref"
                          }
                        },
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16278:9:2",
                        "memberName": "seatOwner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 209,
                        "src": "16262:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1276,
                      "id": 1281,
                      "nodeType": "Return",
                      "src": "16255:32:2"
                    }
                  ]
                },
                "functionSelector": "d7430dbb",
                "id": 1283,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSeatOwner",
                "nameLocation": "16186:12:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1273,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1272,
                      "mutability": "mutable",
                      "name": "seatId",
                      "nameLocation": "16207:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1283,
                      "src": "16199:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16199:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "16198:16:2"
                },
                "returnParameters": {
                  "id": 1276,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1275,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1283,
                      "src": "16236:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1274,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16236:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "16235:9:2"
                },
                "scope": 1297,
                "src": "16177:117:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1295,
                  "nodeType": "Block",
                  "src": "16366:115:2",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1290,
                            "name": "s_SeasonPasses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "16447:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_SeasonPass_$226_storage_$",
                              "typeString": "mapping(address => struct SeasonPassManager.SeasonPass storage ref)"
                            }
                          },
                          "id": 1292,
                          "indexExpression": {
                            "id": 1291,
                            "name": "fan_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "16462:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16447:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SeasonPass_$226_storage",
                            "typeString": "struct SeasonPassManager.SeasonPass storage ref"
                          }
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16468:6:2",
                        "memberName": "seatId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 222,
                        "src": "16447:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1289,
                      "id": 1294,
                      "nodeType": "Return",
                      "src": "16440:34:2"
                    }
                  ]
                },
                "functionSelector": "0872a73f",
                "id": 1296,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSeatOfFan",
                "nameLocation": "16309:12:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1286,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1285,
                      "mutability": "mutable",
                      "name": "fan_",
                      "nameLocation": "16330:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1296,
                      "src": "16322:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1284,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16322:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "16321:14:2"
                },
                "returnParameters": {
                  "id": 1289,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1288,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1296,
                      "src": "16357:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16357:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "16356:9:2"
                },
                "scope": 1297,
                "src": "16300:181:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 1298,
            "src": "329:16154:2",
            "usedErrors": [
              13,
              18,
              185,
              187,
              189,
              191,
              193,
              195,
              197,
              203,
              205,
              207
            ],
            "usedEvents": [
              24,
              238,
              240,
              246,
              254,
              259,
              261,
              263,
              265,
              271,
              277,
              281
            ]
          }
        ],
        "src": "33:16451:2"
      }
    },
    "src/contracts/TicketManager.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "src/contracts/TicketManager.sol",
        "exportedSymbols": {
          "Context": [
            177
          ],
          "Ownable": [
            147
          ],
          "SeasonPassManager": [
            1297
          ],
          "TicketManager": [
            1673
          ]
        },
        "id": 1674,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1299,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".20"
            ],
            "nodeType": "PragmaDirective",
            "src": "33:24:3"
          },
          {
            "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
            "file": "@openzeppelin/contracts/access/Ownable.sol",
            "id": 1300,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1674,
            "sourceUnit": 148,
            "src": "59:52:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "src/contracts/SeasonPassManager.sol",
            "file": "../contracts/SeasonPassManager.sol",
            "id": 1302,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1674,
            "sourceUnit": 1298,
            "src": "112:69:3",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1301,
                  "name": "SeasonPassManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1297,
                  "src": "120:17:3",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1304,
                  "name": "Ownable",
                  "nameLocations": [
                    "416:7:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "416:7:3"
                },
                "id": 1305,
                "nodeType": "InheritanceSpecifier",
                "src": "416:7:3"
              }
            ],
            "canonicalName": "TicketManager",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1303,
              "nodeType": "StructuredDocumentation",
              "src": "183:205:3",
              "text": " @title Smart Contract that manages a season pass ticket for live events.\n @author Carlos Alba\n @notice This contract uses Blockchain technology to manage a the ticket section of the match"
            },
            "fullyImplemented": true,
            "id": 1673,
            "linearizedBaseContracts": [
              1673,
              147,
              177
            ],
            "name": "TicketManager",
            "nameLocation": "399:13:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "errorSelector": "e04d3993",
                "id": 1307,
                "name": "TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner",
                "nameLocation": "436:45:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1306,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "481:2:3"
                },
                "src": "430:54:3"
              },
              {
                "errorSelector": "b4f894bd",
                "id": 1309,
                "name": "TicketManager_SeatNotPossibleToFree",
                "nameLocation": "495:35:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1308,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "530:2:3"
                },
                "src": "489:44:3"
              },
              {
                "errorSelector": "23dc3ef2",
                "id": 1311,
                "name": "TicketManager_MaxSeatsInZone",
                "nameLocation": "545:28:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1310,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "573:2:3"
                },
                "src": "539:37:3"
              },
              {
                "errorSelector": "5a2b36ab",
                "id": 1313,
                "name": "TicketManager_WrongInformationGiven",
                "nameLocation": "587:35:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1312,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "622:2:3"
                },
                "src": "581:44:3"
              },
              {
                "errorSelector": "d00ec016",
                "id": 1319,
                "name": "TicketManager_MoreSeasonPassesThanExpected",
                "nameLocation": "636:42:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1318,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1315,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "696:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "688:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1314,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "688:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1317,
                      "mutability": "mutable",
                      "name": "maxFans",
                      "nameLocation": "720:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "712:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1316,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "712:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "678:55:3"
                },
                "src": "630:104:3"
              },
              {
                "errorSelector": "a3cc324f",
                "id": 1321,
                "name": "TicketManager_NotOwnerOfSeasonPass",
                "nameLocation": "745:34:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1320,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "779:2:3"
                },
                "src": "739:43:3"
              },
              {
                "errorSelector": "3a9251d5",
                "id": 1323,
                "name": "TicketManager_ForbiddenAccess",
                "nameLocation": "793:29:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1322,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "822:2:3"
                },
                "src": "787:38:3"
              },
              {
                "errorSelector": "b129763e",
                "id": 1325,
                "name": "TicketManager_NotEnoughETHSent",
                "nameLocation": "836:30:3",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1324,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "866:2:3"
                },
                "src": "830:39:3"
              },
              {
                "canonicalName": "TicketManager.Ticket",
                "id": 1330,
                "members": [
                  {
                    "constant": false,
                    "id": 1327,
                    "mutability": "mutable",
                    "name": "ticketId",
                    "nameLocation": "907:8:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 1330,
                    "src": "899:16:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1326,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "899:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1329,
                    "mutability": "mutable",
                    "name": "seatId",
                    "nameLocation": "933:6:3",
                    "nodeType": "VariableDeclaration",
                    "scope": 1330,
                    "src": "925:14:3",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1328,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "925:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Ticket",
                "nameLocation": "882:6:3",
                "nodeType": "StructDefinition",
                "scope": 1673,
                "src": "875:71:3",
                "visibility": "public"
              },
              {
                "anonymous": false,
                "eventSelector": "dcf286067ac11c558d70d7b4416374092cae6f9b4e6db9087d848d2dae205a83",
                "id": 1334,
                "name": "TicketManager_BoughtTicket",
                "nameLocation": "958:26:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1333,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1332,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "seatId",
                      "nameLocation": "1001:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1334,
                      "src": "985:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1331,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "984:24:3"
                },
                "src": "952:57:3"
              },
              {
                "anonymous": false,
                "eventSelector": "02fb87de817478a3208f80e7b0fff2e7dc99c8089afc9ef1d6f9ba95ff58e29e",
                "id": 1339,
                "name": "TicketManager_TicketPrizesChanged",
                "nameLocation": "1020:33:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1338,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1337,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "prizes",
                      "nameLocation": "1072:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1339,
                      "src": "1054:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1335,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1054:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1336,
                        "nodeType": "ArrayTypeName",
                        "src": "1054:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1053:26:3"
                },
                "src": "1014:66:3"
              },
              {
                "anonymous": false,
                "eventSelector": "1c7a3d18edfe9c7c8b150f6025d2ad7c334b4e727b436fca70839d00421e3196",
                "id": 1345,
                "name": "TicketManager_FreedSeat",
                "nameLocation": "1091:23:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1344,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1341,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "seatId",
                      "nameLocation": "1131:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1345,
                      "src": "1115:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1115:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1343,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "zone",
                      "nameLocation": "1155:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1345,
                      "src": "1139:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1342,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1139:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1114:46:3"
                },
                "src": "1085:76:3"
              },
              {
                "anonymous": false,
                "eventSelector": "a96f938dd5416e2cfd7739019153e1a3b8bc485f6b86fd4154e1238d2be84500",
                "id": 1349,
                "name": "TicketManager_AdvancedToNextMatch",
                "nameLocation": "1172:33:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1348,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1347,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "numberOfCurrentMatch",
                      "nameLocation": "1231:20:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1349,
                      "src": "1215:36:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1215:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1205:52:3"
                },
                "src": "1166:92:3"
              },
              {
                "anonymous": false,
                "eventSelector": "91a21ee2d5f51cafcc545a7020d3fb01612efba631ef928db96bbb09e3f2e32f",
                "id": 1351,
                "name": "TicketManager_SetNewSeason",
                "nameLocation": "1269:26:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1350,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1295:2:3"
                },
                "src": "1263:35:3"
              },
              {
                "constant": false,
                "id": 1353,
                "mutability": "mutable",
                "name": "numberOfCurrentMatch",
                "nameLocation": "1397:20:3",
                "nodeType": "VariableDeclaration",
                "scope": 1673,
                "src": "1381:36:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1352,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1381:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 1356,
                "mutability": "mutable",
                "name": "seasonPassManager",
                "nameLocation": "1449:17:3",
                "nodeType": "VariableDeclaration",
                "scope": 1673,
                "src": "1423:43:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                  "typeString": "contract SeasonPassManager"
                },
                "typeName": {
                  "id": 1355,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1354,
                    "name": "SeasonPassManager",
                    "nameLocations": [
                      "1423:17:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1297,
                    "src": "1423:17:3"
                  },
                  "referencedDeclaration": 1297,
                  "src": "1423:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                    "typeString": "contract SeasonPassManager"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 1361,
                "mutability": "mutable",
                "name": "s_TicketSeats",
                "nameLocation": "1521:13:3",
                "nodeType": "VariableDeclaration",
                "scope": 1673,
                "src": "1473:61:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(uint256 => address[])"
                },
                "typeName": {
                  "id": 1360,
                  "keyName": "seatId",
                  "keyNameLocation": "1489:6:3",
                  "keyType": {
                    "id": 1357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1481:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1473:47:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                    "typeString": "mapping(uint256 => address[])"
                  },
                  "valueName": "isSeatUsed",
                  "valueNameLocation": "1509:10:3",
                  "valueType": {
                    "baseType": {
                      "id": 1358,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1499:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1359,
                    "nodeType": "ArrayTypeName",
                    "src": "1499:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1364,
                "mutability": "mutable",
                "name": "currentPricesPerZone",
                "nameLocation": "1550:20:3",
                "nodeType": "VariableDeclaration",
                "scope": 1673,
                "src": "1540:30:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1363,
                  "nodeType": "ArrayTypeName",
                  "src": "1540:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1383,
                  "nodeType": "Block",
                  "src": "1637:108:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1373,
                          "name": "seasonPassManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1356,
                          "src": "1647:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                            "typeString": "contract SeasonPassManager"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 1375,
                              "name": "seasonPassManager_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1366,
                              "src": "1685:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1374,
                            "name": "SeasonPassManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "1667:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SeasonPassManager_$1297_$",
                              "typeString": "type(contract SeasonPassManager)"
                            }
                          },
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1667:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                            "typeString": "contract SeasonPassManager"
                          }
                        },
                        "src": "1647:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                          "typeString": "contract SeasonPassManager"
                        }
                      },
                      "id": 1378,
                      "nodeType": "ExpressionStatement",
                      "src": "1647:57:3"
                    },
                    {
                      "expression": {
                        "id": 1381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1379,
                          "name": "numberOfCurrentMatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "1714:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1737:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1714:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1382,
                      "nodeType": "ExpressionStatement",
                      "src": "1714:24:3"
                    }
                  ]
                },
                "id": 1384,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1369,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1625:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1629:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1625:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1371,
                    "kind": "baseConstructorSpecifier",
                    "modifierName": {
                      "id": 1368,
                      "name": "Ownable",
                      "nameLocations": [
                        "1617:7:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 147,
                      "src": "1617:7:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1617:19:3"
                  }
                ],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1367,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1366,
                      "mutability": "mutable",
                      "name": "seasonPassManager_",
                      "nameLocation": "1597:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1384,
                      "src": "1589:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1365,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1589:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1588:28:3"
                },
                "returnParameters": {
                  "id": 1372,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1637:0:3"
                },
                "scope": 1673,
                "src": "1577:168:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1396,
                  "nodeType": "Block",
                  "src": "1794:84:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1389,
                          "name": "numberOfCurrentMatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "1804:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1827:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1804:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1392,
                      "nodeType": "ExpressionStatement",
                      "src": "1804:24:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1393,
                          "name": "TicketManager_SetNewSeason",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1351,
                          "src": "1843:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1843:28:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1395,
                      "nodeType": "EmitStatement",
                      "src": "1838:33:3"
                    }
                  ]
                },
                "functionSelector": "8ec79a16",
                "id": 1397,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1387,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1386,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1784:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "1784:9:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1784:9:3"
                  }
                ],
                "name": "setNewSeason",
                "nameLocation": "1760:12:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1385,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1772:2:3"
                },
                "returnParameters": {
                  "id": 1388,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1794:0:3"
                },
                "scope": 1673,
                "src": "1751:127:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1426,
                  "nodeType": "Block",
                  "src": "1953:265:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1963:22:3",
                        "subExpression": {
                          "id": 1405,
                          "name": "numberOfCurrentMatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "1963:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1407,
                      "nodeType": "ExpressionStatement",
                      "src": "1963:22:3"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1408,
                            "name": "newPrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1400,
                            "src": "1999:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2009:6:3",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1999:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2019:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1999:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1421,
                      "nodeType": "IfStatement",
                      "src": "1995:147:3",
                      "trueBody": {
                        "id": 1420,
                        "nodeType": "Block",
                        "src": "2022:120:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1412,
                                "name": "currentPricesPerZone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "2036:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 1413,
                                "name": "newPrices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1400,
                                "src": "2059:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "src": "2036:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1415,
                            "nodeType": "ExpressionStatement",
                            "src": "2036:32:3"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "id": 1417,
                                  "name": "newPrices",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1400,
                                  "src": "2121:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                ],
                                "id": 1416,
                                "name": "TicketManager_TicketPrizesChanged",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1339,
                                "src": "2087:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                  "typeString": "function (uint256[] memory)"
                                }
                              },
                              "id": 1418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2087:44:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1419,
                            "nodeType": "EmitStatement",
                            "src": "2082:49:3"
                          }
                        ]
                      }
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1423,
                            "name": "numberOfCurrentMatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "2190:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1422,
                          "name": "TicketManager_AdvancedToNextMatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1349,
                          "src": "2156:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256)"
                          }
                        },
                        "id": 1424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2156:55:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1425,
                      "nodeType": "EmitStatement",
                      "src": "2151:60:3"
                    }
                  ]
                },
                "functionSelector": "d2cf764e",
                "id": 1427,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1403,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1402,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1943:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "1943:9:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1943:9:3"
                  }
                ],
                "name": "advanceMatch",
                "nameLocation": "1893:12:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1401,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "newPrices",
                      "nameLocation": "1923:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "1906:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1398,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1906:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1399,
                        "nodeType": "ArrayTypeName",
                        "src": "1906:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1905:28:3"
                },
                "returnParameters": {
                  "id": 1404,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1953:0:3"
                },
                "scope": 1673,
                "src": "1884:334:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1492,
                  "nodeType": "Block",
                  "src": "2331:562:3",
                  "statements": [
                    {
                      "assignments": [
                        1439
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1439,
                          "mutability": "mutable",
                          "name": "seat",
                          "nameLocation": "2371:4:3",
                          "nodeType": "VariableDeclaration",
                          "scope": 1492,
                          "src": "2341:34:3",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                            "typeString": "struct SeasonPassManager.Seat"
                          },
                          "typeName": {
                            "id": 1438,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1437,
                              "name": "SeasonPassManager.Seat",
                              "nameLocations": [
                                "2341:17:3",
                                "2359:4:3"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 218,
                              "src": "2341:22:3"
                            },
                            "referencedDeclaration": 218,
                            "src": "2341:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                              "typeString": "struct SeasonPassManager.Seat"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1444,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1442,
                            "name": "seatId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1429,
                            "src": "2404:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1440,
                            "name": "seasonPassManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "2378:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                              "typeString": "contract SeasonPassManager"
                            }
                          },
                          "id": 1441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2396:7:3",
                          "memberName": "getSeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1270,
                          "src": "2378:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Seat_$218_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct SeasonPassManager.Seat memory)"
                          }
                        },
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2378:34:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                          "typeString": "struct SeasonPassManager.Seat memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2341:71:3"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1445,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2427:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2431:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2427:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1447,
                            "name": "currentPricesPerZone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "2439:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1450,
                          "indexExpression": {
                            "expression": {
                              "id": 1448,
                              "name": "seat",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "2460:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                "typeString": "struct SeasonPassManager.Seat memory"
                              }
                            },
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2465:4:3",
                            "memberName": "zone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "2460:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2439:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2427:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1456,
                      "nodeType": "IfStatement",
                      "src": "2423:113:3",
                      "trueBody": {
                        "id": 1455,
                        "nodeType": "Block",
                        "src": "2472:64:3",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1452,
                                "name": "TicketManager_NotEnoughETHSent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1325,
                                "src": "2493:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2493:32:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1454,
                            "nodeType": "RevertStatement",
                            "src": "2486:39:3"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1457,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1439,
                                "src": "2563:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1458,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2568:13:3",
                              "memberName": "rowSeatNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 217,
                              "src": "2563:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2585:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2563:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1461,
                                  "name": "s_TicketSeats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1361,
                                  "src": "2602:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => address[] storage ref)"
                                  }
                                },
                                "id": 1463,
                                "indexExpression": {
                                  "id": 1462,
                                  "name": "seatId_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1429,
                                  "src": "2616:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2602:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1465,
                              "indexExpression": {
                                "id": 1464,
                                "name": "numberOfCurrentMatch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1353,
                                "src": "2625:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2602:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 1466,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1439,
                                "src": "2650:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1467,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2655:9:3",
                              "memberName": "seatOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 209,
                              "src": "2650:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2602:62:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2563:101:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1470,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2680:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2684:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2680:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1472,
                              "name": "seat",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "2694:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                "typeString": "struct SeasonPassManager.Seat memory"
                              }
                            },
                            "id": 1473,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2699:9:3",
                            "memberName": "seatOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 209,
                            "src": "2694:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2680:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2563:145:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1480,
                      "nodeType": "IfStatement",
                      "src": "2546:252:3",
                      "trueBody": {
                        "id": 1479,
                        "nodeType": "Block",
                        "src": "2719:79:3",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1476,
                                "name": "TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1307,
                                "src": "2740:45:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2740:47:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1478,
                            "nodeType": "RevertStatement",
                            "src": "2733:54:3"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1481,
                              "name": "s_TicketSeats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "2808:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(uint256 => address[] storage ref)"
                              }
                            },
                            "id": 1484,
                            "indexExpression": {
                              "id": 1482,
                              "name": "seatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1429,
                              "src": "2822:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2808:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1485,
                          "indexExpression": {
                            "id": 1483,
                            "name": "numberOfCurrentMatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "2831:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2808:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 1486,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2855:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2859:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2855:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2808:57:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1489,
                      "nodeType": "ExpressionStatement",
                      "src": "2808:57:3"
                    },
                    {
                      "expression": {
                        "id": 1490,
                        "name": "seat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "2882:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                          "typeString": "struct SeasonPassManager.Seat memory"
                        }
                      },
                      "functionReturnParameters": 1434,
                      "id": 1491,
                      "nodeType": "Return",
                      "src": "2875:11:3"
                    }
                  ]
                },
                "functionSelector": "67dd74ca",
                "id": 1493,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "buyTicket",
                "nameLocation": "2233:9:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1430,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1429,
                      "mutability": "mutable",
                      "name": "seatId_",
                      "nameLocation": "2260:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1493,
                      "src": "2252:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2252:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2242:31:3"
                },
                "returnParameters": {
                  "id": 1434,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1433,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1493,
                      "src": "2300:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                        "typeString": "struct SeasonPassManager.Seat"
                      },
                      "typeName": {
                        "id": 1432,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1431,
                          "name": "SeasonPassManager.Seat",
                          "nameLocations": [
                            "2300:17:3",
                            "2318:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 218,
                          "src": "2300:22:3"
                        },
                        "referencedDeclaration": 218,
                        "src": "2300:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                          "typeString": "struct SeasonPassManager.Seat"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2299:31:3"
                },
                "scope": 1673,
                "src": "2224:669:3",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1548,
                  "nodeType": "Block",
                  "src": "3090:428:3",
                  "statements": [
                    {
                      "assignments": [
                        1509
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1509,
                          "mutability": "mutable",
                          "name": "seat",
                          "nameLocation": "3130:4:3",
                          "nodeType": "VariableDeclaration",
                          "scope": 1548,
                          "src": "3100:34:3",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                            "typeString": "struct SeasonPassManager.Seat"
                          },
                          "typeName": {
                            "id": 1508,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1507,
                              "name": "SeasonPassManager.Seat",
                              "nameLocations": [
                                "3100:17:3",
                                "3118:4:3"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 218,
                              "src": "3100:22:3"
                            },
                            "referencedDeclaration": 218,
                            "src": "3100:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                              "typeString": "struct SeasonPassManager.Seat"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1514,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1512,
                            "name": "seatId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "3163:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1510,
                            "name": "seasonPassManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "3137:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                              "typeString": "contract SeasonPassManager"
                            }
                          },
                          "id": 1511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3155:7:3",
                          "memberName": "getSeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1270,
                          "src": "3137:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Seat_$218_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct SeasonPassManager.Seat memory)"
                          }
                        },
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3137:34:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                          "typeString": "struct SeasonPassManager.Seat memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3100:71:3"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1515,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1509,
                                "src": "3199:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3204:13:3",
                              "memberName": "rowSeatNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 217,
                              "src": "3199:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3221:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3199:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1519,
                                  "name": "s_TicketSeats",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1361,
                                  "src": "3238:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                    "typeString": "mapping(uint256 => address[] storage ref)"
                                  }
                                },
                                "id": 1521,
                                "indexExpression": {
                                  "id": 1520,
                                  "name": "seatId_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1495,
                                  "src": "3252:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3238:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1523,
                              "indexExpression": {
                                "id": 1522,
                                "name": "numberOfCurrentMatch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1353,
                                "src": "3261:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3238:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 1524,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1509,
                                "src": "3286:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3291:9:3",
                              "memberName": "seatOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 209,
                              "src": "3286:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3238:62:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3199:101:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1528,
                            "name": "buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1497,
                            "src": "3316:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1529,
                              "name": "seat",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1509,
                              "src": "3325:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                "typeString": "struct SeasonPassManager.Seat memory"
                              }
                            },
                            "id": 1530,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3330:9:3",
                            "memberName": "seatOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 209,
                            "src": "3325:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3316:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3199:140:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1537,
                      "nodeType": "IfStatement",
                      "src": "3182:247:3",
                      "trueBody": {
                        "id": 1536,
                        "nodeType": "Block",
                        "src": "3350:79:3",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1533,
                                "name": "TicketManager_SeatIsNotFreeOrBuyerIsSeatOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1307,
                                "src": "3371:45:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3371:47:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1535,
                            "nodeType": "RevertStatement",
                            "src": "3364:54:3"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1538,
                              "name": "s_TicketSeats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "3438:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(uint256 => address[] storage ref)"
                              }
                            },
                            "id": 1541,
                            "indexExpression": {
                              "id": 1539,
                              "name": "seatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "3452:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3438:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1542,
                          "indexExpression": {
                            "id": 1540,
                            "name": "numberOfCurrentMatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "3461:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3438:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1543,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1497,
                          "src": "3485:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3438:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1545,
                      "nodeType": "ExpressionStatement",
                      "src": "3438:52:3"
                    },
                    {
                      "expression": {
                        "id": 1546,
                        "name": "seat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1509,
                        "src": "3507:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                          "typeString": "struct SeasonPassManager.Seat memory"
                        }
                      },
                      "functionReturnParameters": 1504,
                      "id": 1547,
                      "nodeType": "Return",
                      "src": "3500:11:3"
                    }
                  ]
                },
                "functionSelector": "4aa4d665",
                "id": 1549,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1500,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1499,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "3040:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "3040:9:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3040:9:3"
                  }
                ],
                "name": "buyTicketFromWeb",
                "nameLocation": "2960:16:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1498,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1495,
                      "mutability": "mutable",
                      "name": "seatId_",
                      "nameLocation": "2994:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1549,
                      "src": "2986:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1494,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2986:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1497,
                      "mutability": "mutable",
                      "name": "buyer",
                      "nameLocation": "3019:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1549,
                      "src": "3011:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1496,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3011:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2976:54:3"
                },
                "returnParameters": {
                  "id": 1504,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1503,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1549,
                      "src": "3059:29:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                        "typeString": "struct SeasonPassManager.Seat"
                      },
                      "typeName": {
                        "id": 1502,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1501,
                          "name": "SeasonPassManager.Seat",
                          "nameLocations": [
                            "3059:17:3",
                            "3077:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 218,
                          "src": "3059:22:3"
                        },
                        "referencedDeclaration": 218,
                        "src": "3059:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                          "typeString": "struct SeasonPassManager.Seat"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3058:31:3"
                },
                "scope": 1673,
                "src": "2951:567:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1608,
                  "nodeType": "Block",
                  "src": "3678:460:3",
                  "statements": [
                    {
                      "assignments": [
                        1562
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1562,
                          "mutability": "mutable",
                          "name": "seat",
                          "nameLocation": "3718:4:3",
                          "nodeType": "VariableDeclaration",
                          "scope": 1608,
                          "src": "3688:34:3",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                            "typeString": "struct SeasonPassManager.Seat"
                          },
                          "typeName": {
                            "id": 1561,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1560,
                              "name": "SeasonPassManager.Seat",
                              "nameLocations": [
                                "3688:17:3",
                                "3706:4:3"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 218,
                              "src": "3688:22:3"
                            },
                            "referencedDeclaration": 218,
                            "src": "3688:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                              "typeString": "struct SeasonPassManager.Seat"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1567,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1565,
                            "name": "seatId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1551,
                            "src": "3751:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1563,
                            "name": "seasonPassManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "3725:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                              "typeString": "contract SeasonPassManager"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3743:7:3",
                          "memberName": "getSeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1270,
                          "src": "3725:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Seat_$218_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct SeasonPassManager.Seat memory)"
                          }
                        },
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3725:34:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                          "typeString": "struct SeasonPassManager.Seat memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3688:71:3"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1568,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1562,
                                "src": "3786:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1569,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3791:13:3",
                              "memberName": "rowSeatNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 217,
                              "src": "3786:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3808:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3786:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1572,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1562,
                                "src": "3825:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3830:9:3",
                              "memberName": "seatOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 209,
                              "src": "3825:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1574,
                              "name": "owner_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1553,
                              "src": "3843:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3825:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3786:63:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1577,
                                "name": "s_TicketSeats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "3865:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => address[] storage ref)"
                                }
                              },
                              "id": 1579,
                              "indexExpression": {
                                "id": 1578,
                                "name": "seatId_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1551,
                                "src": "3879:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3865:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1581,
                            "indexExpression": {
                              "id": 1580,
                              "name": "numberOfCurrentMatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1353,
                              "src": "3888:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3865:44:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3921:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3913:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1582,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3913:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3913:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3865:58:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3786:137:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1592,
                      "nodeType": "IfStatement",
                      "src": "3769:234:3",
                      "trueBody": {
                        "id": 1591,
                        "nodeType": "Block",
                        "src": "3934:69:3",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1588,
                                "name": "TicketManager_SeatNotPossibleToFree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1309,
                                "src": "3955:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3955:37:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1590,
                            "nodeType": "RevertStatement",
                            "src": "3948:44:3"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1593,
                              "name": "s_TicketSeats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "4012:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(uint256 => address[] storage ref)"
                              }
                            },
                            "id": 1596,
                            "indexExpression": {
                              "id": 1594,
                              "name": "seatId_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1551,
                              "src": "4026:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4012:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1597,
                          "indexExpression": {
                            "id": 1595,
                            "name": "numberOfCurrentMatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "4035:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4012:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 1598,
                            "name": "seat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "4059:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                              "typeString": "struct SeasonPassManager.Seat memory"
                            }
                          },
                          "id": 1599,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4064:9:3",
                          "memberName": "seatOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "4059:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4012:61:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1601,
                      "nodeType": "ExpressionStatement",
                      "src": "4012:61:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1603,
                            "name": "seatId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1551,
                            "src": "4112:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1604,
                              "name": "seat",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1562,
                              "src": "4121:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                "typeString": "struct SeasonPassManager.Seat memory"
                              }
                            },
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4126:4:3",
                            "memberName": "zone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "4121:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1602,
                          "name": "TicketManager_FreedSeat",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1345,
                          "src": "4088:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256)"
                          }
                        },
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4088:43:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1607,
                      "nodeType": "EmitStatement",
                      "src": "4083:48:3"
                    }
                  ]
                },
                "functionSelector": "a1a5d690",
                "id": 1609,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1556,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1555,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "3668:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58,
                      "src": "3668:9:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3668:9:3"
                  }
                ],
                "name": "freeTheSeatFromWeb",
                "nameLocation": "3585:18:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1554,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1551,
                      "mutability": "mutable",
                      "name": "seatId_",
                      "nameLocation": "3621:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1609,
                      "src": "3613:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1550,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3613:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1553,
                      "mutability": "mutable",
                      "name": "owner_",
                      "nameLocation": "3646:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1609,
                      "src": "3638:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1552,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3638:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3603:55:3"
                },
                "returnParameters": {
                  "id": 1557,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3678:0:3"
                },
                "scope": 1673,
                "src": "3576:562:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1671,
                  "nodeType": "Block",
                  "src": "4176:541:3",
                  "statements": [
                    {
                      "assignments": [
                        1616
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1616,
                          "mutability": "mutable",
                          "name": "seat",
                          "nameLocation": "4216:4:3",
                          "nodeType": "VariableDeclaration",
                          "scope": 1671,
                          "src": "4186:34:3",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                            "typeString": "struct SeasonPassManager.Seat"
                          },
                          "typeName": {
                            "id": 1615,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1614,
                              "name": "SeasonPassManager.Seat",
                              "nameLocations": [
                                "4186:17:3",
                                "4204:4:3"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 218,
                              "src": "4186:22:3"
                            },
                            "referencedDeclaration": 218,
                            "src": "4186:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_storage_ptr",
                              "typeString": "struct SeasonPassManager.Seat"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1626,
                      "initialValue": {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1621,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4294:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4298:6:3",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4294:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1619,
                                  "name": "seasonPassManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1356,
                                  "src": "4262:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                                    "typeString": "contract SeasonPassManager"
                                  }
                                },
                                "id": 1620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4280:13:3",
                                "memberName": "getSeasonPass",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1257,
                                "src": "4262:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_struct$_SeasonPass_$226_memory_ptr_$",
                                  "typeString": "function (address) view external returns (struct SeasonPassManager.SeasonPass memory)"
                                }
                              },
                              "id": 1623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4262:43:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SeasonPass_$226_memory_ptr",
                                "typeString": "struct SeasonPassManager.SeasonPass memory"
                              }
                            },
                            "id": 1624,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4306:6:3",
                            "memberName": "seatId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 222,
                            "src": "4262:50:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1617,
                            "name": "seasonPassManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "4223:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SeasonPassManager_$1297",
                              "typeString": "contract SeasonPassManager"
                            }
                          },
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4241:7:3",
                          "memberName": "getSeat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1270,
                          "src": "4223:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Seat_$218_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (struct SeasonPassManager.Seat memory)"
                          }
                        },
                        "id": 1625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4223:99:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                          "typeString": "struct SeasonPassManager.Seat memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4186:136:3"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1627,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1616,
                                "src": "4349:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1628,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4354:13:3",
                              "memberName": "rowSeatNumber",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 217,
                              "src": "4349:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4371:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4349:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1631,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1616,
                                "src": "4388:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1632,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4393:9:3",
                              "memberName": "seatOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 209,
                              "src": "4388:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 1633,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4406:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4410:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4406:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4388:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4349:67:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1637,
                                "name": "s_TicketSeats",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1361,
                                "src": "4432:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(uint256 => address[] storage ref)"
                                }
                              },
                              "id": 1640,
                              "indexExpression": {
                                "expression": {
                                  "id": 1638,
                                  "name": "seat",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1616,
                                  "src": "4446:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                    "typeString": "struct SeasonPassManager.Seat memory"
                                  }
                                },
                                "id": 1639,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4451:6:3",
                                "memberName": "seatId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 215,
                                "src": "4446:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4432:26:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1642,
                            "indexExpression": {
                              "id": 1641,
                              "name": "numberOfCurrentMatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1353,
                              "src": "4459:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4432:48:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4492:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4484:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1643,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4484:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4484:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4432:62:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4349:145:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1653,
                      "nodeType": "IfStatement",
                      "src": "4332:242:3",
                      "trueBody": {
                        "id": 1652,
                        "nodeType": "Block",
                        "src": "4505:69:3",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1649,
                                "name": "TicketManager_SeatNotPossibleToFree",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1309,
                                "src": "4526:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4526:37:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1651,
                            "nodeType": "RevertStatement",
                            "src": "4519:44:3"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 1662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1654,
                              "name": "s_TicketSeats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1361,
                              "src": "4583:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(uint256 => address[] storage ref)"
                              }
                            },
                            "id": 1658,
                            "indexExpression": {
                              "expression": {
                                "id": 1655,
                                "name": "seat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1616,
                                "src": "4597:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                  "typeString": "struct SeasonPassManager.Seat memory"
                                }
                              },
                              "id": 1656,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4602:6:3",
                              "memberName": "seatId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 215,
                              "src": "4597:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4583:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1659,
                          "indexExpression": {
                            "id": 1657,
                            "name": "numberOfCurrentMatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "4610:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4583:48:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 1660,
                            "name": "seat",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1616,
                            "src": "4634:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                              "typeString": "struct SeasonPassManager.Seat memory"
                            }
                          },
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4639:9:3",
                          "memberName": "seatOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 209,
                          "src": "4634:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4583:65:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1663,
                      "nodeType": "ExpressionStatement",
                      "src": "4583:65:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1665,
                              "name": "seat",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "4687:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                "typeString": "struct SeasonPassManager.Seat memory"
                              }
                            },
                            "id": 1666,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4692:6:3",
                            "memberName": "seatId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 215,
                            "src": "4687:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1667,
                              "name": "seat",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "4700:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Seat_$218_memory_ptr",
                                "typeString": "struct SeasonPassManager.Seat memory"
                              }
                            },
                            "id": 1668,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4705:4:3",
                            "memberName": "zone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 211,
                            "src": "4700:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1664,
                          "name": "TicketManager_FreedSeat",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1345,
                          "src": "4663:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint256,uint256)"
                          }
                        },
                        "id": 1669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4663:47:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1670,
                      "nodeType": "EmitStatement",
                      "src": "4658:52:3"
                    }
                  ]
                },
                "functionSelector": "f345b689",
                "id": 1672,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "freeTheSeat",
                "nameLocation": "4153:11:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1610,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4164:2:3"
                },
                "returnParameters": {
                  "id": 1611,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4176:0:3"
                },
                "scope": 1673,
                "src": "4144:573:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1674,
            "src": "390:4329:3",
            "usedErrors": [
              13,
              18,
              1307,
              1309,
              1311,
              1313,
              1319,
              1321,
              1323,
              1325
            ],
            "usedEvents": [
              24,
              1334,
              1339,
              1345,
              1349,
              1351
            ]
          }
        ],
        "src": "33:4687:3"
      }
    }
  },
  "errors": [],
  "version": "0.8.24",
  "long_version": "0.8.24+commit.e11b9ed9.Linux.g++",
  "zk_version": "1.4.0"
}