{"ast":null,"code":"var _jsxFileName = \"/home/carlos/PersonalProjects/SeasonPass/src/components/App.js\";\n// src/App.js\nimport React, { useEffect, useState, Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./NavBar\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  async UNSAFE_componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"No ethereum Browser detected, you can check Metamask\");\n    }\n  }\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({\n      account: account[0]\n    });\n    console.log(account);\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"0x0\",\n      seasonPassManagers: {},\n      ticketManager: {},\n      loading: true\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hello World!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;\n\n/**\n * const [data, setData] = useState(null);\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const result = await contract.someFunction();\n        setData(result);\n      } catch (error) {\n        console.error(\"Error al interactuar con el contrato:\", error);\n      }\n    }\n\n    if (account) {\n      fetchData();\n    }\n  }, [account]);\n\n  const connectWallet = async () => {\n    try {\n      await provider.send(\"eth_requestAccounts\", []);\n      const signerAddress = await provider.getSigner().getAddress();\n      setAccount(signerAddress);\n    } catch (error) {\n      console.error(\"Error al conectar la wallet:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Mi DApp</h1>\n        {!account ? (\n          <button onClick={connectWallet}>Conectar Wallet</button>\n        ) : (\n          <p>Conectado: {account}</p>\n        )}\n        {data ? <p>Data: {data.toString()}</p> : <p>Cargando...</p>}\n      </header>\n    </div>\n  );\n}\n\n */","map":{"version":3,"names":["React","useEffect","useState","Component","Navbar","Web3","jsxDEV","_jsxDEV","App","UNSAFE_componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","account","eth","getAccounts","setState","console","log","constructor","props","state","seasonPassManagers","ticketManager","loading","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/home/carlos/PersonalProjects/SeasonPass/src/components/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState, Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./NavBar\";\nimport Web3 from \"web3\";\n\nclass App extends Component {\n  async UNSAFE_componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"No ethereum Browser detected, you can check Metamask\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({ account: account[0] });\n    console.log(account);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"0x0\",\n      seasonPassManagers: {},\n      ticketManager: {},\n      loading: true,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"text-center\">\n          <h1>Hello World!</h1>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n\n/**\n * const [data, setData] = useState(null);\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const result = await contract.someFunction();\n        setData(result);\n      } catch (error) {\n        console.error(\"Error al interactuar con el contrato:\", error);\n      }\n    }\n\n    if (account) {\n      fetchData();\n    }\n  }, [account]);\n\n  const connectWallet = async () => {\n    try {\n      await provider.send(\"eth_requestAccounts\", []);\n      const signerAddress = await provider.getSigner().getAddress();\n      setAccount(signerAddress);\n    } catch (error) {\n      console.error(\"Error al conectar la wallet:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Mi DApp</h1>\n        {!account ? (\n          <button onClick={connectWallet}>Conectar Wallet</button>\n        ) : (\n          <p>Conectado: {account}</p>\n        )}\n        {data ? <p>Data: {data.toString()}</p> : <p>Cargando...</p>}\n      </header>\n    </div>\n  );\n}\n\n */\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7D,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,GAAG,SAASL,SAAS,CAAC;EAC1B,MAAMM,yBAAyBA,CAAA,EAAG;IAChC,MAAM,IAAI,CAACC,QAAQ,CAAC,CAAC;IACrB,MAAM,IAAI,CAACC,kBAAkB,CAAC,CAAC;EACjC;EAEA,MAAMD,QAAQA,CAAA,EAAG;IACf,IAAIE,MAAM,CAACC,QAAQ,EAAE;MACnBD,MAAM,CAACE,IAAI,GAAG,IAAIT,IAAI,CAACO,MAAM,CAACC,QAAQ,CAAC;MACvC,MAAMD,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAC,CAAC;IAChC,CAAC,MAAM,IAAIH,MAAM,CAACE,IAAI,EAAE;MACtBF,MAAM,CAACE,IAAI,GAAG,IAAIT,IAAI,CAACO,MAAM,CAACE,IAAI,CAACE,eAAe,CAAC;IACrD,CAAC,MAAM;MACLJ,MAAM,CAACK,KAAK,CAAC,sDAAsD,CAAC;IACtE;EACF;EAEA,MAAMN,kBAAkBA,CAAA,EAAG;IACzB,MAAMG,IAAI,GAAGF,MAAM,CAACE,IAAI;IACxB,MAAMI,OAAO,GAAG,MAAMJ,IAAI,CAACK,GAAG,CAACC,WAAW,CAAC,CAAC;IAC5C,IAAI,CAACC,QAAQ,CAAC;MAAEH,OAAO,EAAEA,OAAO,CAAC,CAAC;IAAE,CAAC,CAAC;IACtCI,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACtB;EAEAM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXR,OAAO,EAAE,KAAK;MACdS,kBAAkB,EAAE,CAAC,CAAC;MACtBC,aAAa,EAAE,CAAC,CAAC;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACEvB,OAAA;MAAAwB,QAAA,gBACExB,OAAA,CAACH,MAAM;QAACc,OAAO,EAAE,IAAI,CAACQ,KAAK,CAACR;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC5B,OAAA;QAAK6B,SAAS,EAAC,aAAa;QAAAL,QAAA,eAC1BxB,OAAA;UAAAwB,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AACA,eAAe3B,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}